\documentclass[color=usenames,dvipsnames]{beamer}
%\documentclass[color=usenames,dvipsnames,handout]{beamer}

\usepackage[roman]{../lectures}
%\usepackage[sans]{../lectures}


\hypersetup{pdfpagemode=UseNone,pdfstartview={FitV},urlcolor=blue}

%\urlstyle{same}



% Load function to compile and open PDF
<<build-fun,include=FALSE,purl=FALSE>>=
source("../rnw2pdf.R")
@

% Compile and open PDF
<<buildit,include=FALSE,eval=FALSE>>=
rnw2pdf("lecture-cap-recap-nonspatial")
rnw2pdf("lecture-cap-recap-nonspatial", tangle=TRUE)
@ 


<<knitr-theme,include=FALSE,purl=FALSE>>=
knit_theme$set("edit-kwrite")
@



% R packages
% Need MARK too. Linux instructions:
% http://www.phidot.org/software/mark/rmark/linux/
<<packages,eval=TRUE,include=FALSE,purl=FALSE,results='hide',message=FALSE,warning=FALSE>>=
if(!require(mra)) install.packages("mra")
if(!require(Rcapture)) install.packages("Rcapture")
if(!require(RMark)) install.packages("RMark")
if(!require(secr)) install.packages("secr")
@ 



% New command for inline code that isn't to be evaluated
\definecolor{inlinecolor}{rgb}{0.878, 0.918, 0.933}
\newcommand{\inr}[1]{\colorbox{inlinecolor}{\texttt{#1}}}




\begin{document}




\begin{frame}[plain]
  \LARGE
  \centering
  {
    \LARGE %Lecture 10 --
    Non-spatial mark-recapture for \\ estimating
    population size%: \\
    %\LARGE simulation and model fitting \\
  }
  {\color{default} \rule{\textwidth}{0.1pt} }
  \vfill
  \large
  WILD(FISH) 8390 \\
  Estimation of Fish and Wildlife Population Parameters \\
  \vfill
  \large
  Richard Chandler \\
  University of Georgia \\
\end{frame}






\section{Overview}



\begin{frame}[plain]
  \frametitle{Outline}
  \Large
  \only<1>{\tableofcontents}%[hideallsubsections]}
  \only<2 | handout:0>{\tableofcontents[currentsection]}%,hideallsubsections]}
\end{frame}



\begin{frame}
  \frametitle{Mark-recapture overview}
  Until now, we've focused on models for data on aggregated quantities
  like abundance and occupancy. \\ 
  \pause
  \vfill
  Now we will talk about data on uniquely identifiable individuals. \\
  \pause
  \vfill
  This is nice because all individuals are different, and we're often
  interested in these differences\dots \\
  \pause
  \vfill
  \dots even when our primary goal is
  inference on population-level parameters like abundance
  and density. \\
\end{frame}






\begin{frame}
  \frametitle{Closed populations}
  For this lecture, we will assume population closure:
  \begin{itemize}
    \item No births or deaths during the time of sampling \\ (demographic
      closure)
    \item No permanent immigration or emigration \\ (geographic closure)
  \end{itemize}
  \pause
  \vfill
  There are several other assumptions that depend on the specific
  model being employed, such as
  \begin{itemize}
    \item No misidentification
    \item No band/tag loss
    \item etc\dots
  \end{itemize}
  \pause
  \vfill
  Later, we will relax the closure assumption so that we can study
  survival, recruitment, and movement.
\end{frame}



\begin{frame}
  \frametitle{Mark-recapture overview}
  The simplest estimator of abundance is 
  \[
    \hat{N} = \frac{n}{\hat{p}}
  \]
  where $n$ is the number of individuals detected, $p$ is detection
  probability, and $E(n)=Np$. \\
  \pause
  \vfill
  In distance sampling, we modeled detection probability as a
  function of distance, and we replaced $p$ with average detection
  probability. \\ 
  \pause
  \vfill
  For the simplest mark-recapture problems, $p$ is a constant (scalar) and we
  estimate it by trapping on multiple occasions and marking and
  recapturing as we go.  
\end{frame}





\begin{frame}
  \frametitle{Classical approaches}
  Lincoln-Peterson  \\
  \begin{itemize}
    \item $J=2$ occasions
    \item Data are:
      \begin{itemize}
        \item $n_1$ -- number of individuals captured on first occasion
        \item $n_2$ -- number of individuals captured on second occasion
        \item $m_2$ -- number of recaptures
      \end{itemize}
    \item Estimator is $\hat{N} = n_1n_2/m_2$  
  \end{itemize}
  \pause
  \vfill
  Closed population models \\
  \begin{itemize}
    \item Usually better to have $J>2$ occasions
    \item Allows for assessment of behavioral effects, individual heterogeneity, etc\dots
  \end{itemize}
\end{frame}



\begin{frame}
  \frametitle{Mark-recapture data}
  \small
  Mark-recapture data are often called ``capture histories.'' Here's
  an example with $n=6$ animals captured on $J=3$ occasions. \\
  \centering
%  \vfill  
  \begin{tabular}{lccc}
    \hline
    & \multicolumn{3}{c}{Occasion} \\
    \cline{2-4}
    Individual & 1 & 2 & 3 \\
    \hline
    1 & 0 & 0 & 1 \\
    2 & 1 & 1 & 1 \\
    3 & 0 & 1 & 0 \\
    4 & 0 & 1 & 1 \\
    5 & 1 & 0 & 0 \\
    6 & 0 & 0 & 1 \\
    \hline
  \end{tabular}
  \pause
  \vfill
  \flushleft
  How do we estimate $p$ (and $N$) from these data? %\\
  \pause
%  \vfill
  You can get a sense for $p$ (and $N$) by looking at the data.
  \begin{itemize}
    \setlength\itemsep{.1pt}
    \item If $p\approx 1$, most individuals would be captured
      on all 3 occasions, and few would go undetected
    \item If $p\approx 0$, few individuals would be captured 
      more than once, and many would go undetected
  \end{itemize}
%  \pause
%  \vfill
%  Knowing $p$ helps us determine how many individuals we missed  
\end{frame}




% \begin{frame}
%   \frametitle{In-class exercise}
%   Building off the previous example\dots
%   \begin{enumerate}
%     \item Compute $\bar{p}$ for line-transect sampling when
%       $\sigma=50, 100, \mathrm{and}\, 200$, instead of $\sigma=25$.  
%     \item Repeat, but for point-transect sampling. 
%   \end{enumerate}
% \end{frame}



\begin{frame}
  \frametitle{\large Closed population model (if we knew $N$) }
  \small
  State model \\
  \vspace{6pt}
  {\centering
    There isn't one! $N$ is often treated as a constant, although we
    sometimes put a Poisson or binomial prior on it.  \\
  }
  \pause
  \vfill
  Observation model (supposing $N$ was known)
  \begin{equation*}
    y_{ij} \sim \mathrm{Bernoulli}(p) \;\; \mathrm{for}\, i=1,\dots,N 
  \end{equation*}
  \pause
%  \vfill
  \small
  Definitions \\
  {\footnotesize
  $N$ -- Population size \\
  \hangindent=0.8cm $y_{ij}$ -- Capture histories, indicating if
  individual $i$ was captured on occasion $j$ \\  
  $p$ -- Capture probability \\
  %}
  \pause
  \vfill
  The problem with this formulation is that we don't observe the ``all
  zero'' encounter histories (and thus we don't know $N$). \pause As a
  result, the Bernoulli assumption isn't valid, and we need to develop
  a model that describes how many individuals we failed to capture.
  }
\end{frame}





\begin{frame}
  \frametitle{Closed population estimation options}
  Conditional likelihood \\
  \begin{itemize}
    \item Estimate $p$, and then estimate $N$ as a derived
      quantity. %compute $\hat{N}=n/\hat{p}$
    \item Most software is based on the work by Huggins, which allows
      for continuous covariates. 
  \end{itemize}
  \pause
  \vfill
  Joint likelihood \\
  \begin{itemize}
    \item Estimate $N$ and $p$ jointly
    \item Joint likelihood can be written as
      \begin{itemize}
      \item $L(N,p;y,n) = p(y|n,p)p(n|N,p)$ or
      \item $L(N,p;y,n) = p(y,n|N,p)$
      \end{itemize}
  \end{itemize}
  \pause \vfill
  Data augmentation \\
  \begin{itemize}
    \item Tack on many ``all zero'' encounter histories and estimate
      how many of them actually occurred
    \item Usually, but not necessarily, used in Bayesian inference
  \end{itemize}
\end{frame}





% \begin{frame}
%   \frametitle{Joint likelihood, conditional-on-$n$}
%   \small
%   Another way of writing the observation model is to condition on the
%   number of individuals captured, and then use a
%   categorical distribution for the number of times individual $i$
%   was detected. 
%   \begin{gather*}
%     n \sim \mathrm{Binomial}\left(N, 1-\pi_0\right)                               \\
%     \tilde{y}_i \sim \mathrm{Categorical}(\pi_1, \dots, \pi_K) \;\;
%     \mathrm{for}\, i=1,\dots,n 
%   \end{gather*}
%   \pause
%   \centering
%   \vspace{6pt}
%   \begin{tabular}{ll}
%     \hline
%     Detections ($\tilde{y}_i$) & Multinomial cell probability                     \\
%     \hline
% %      0                       & $\pi_0 = (1-p)^J$                                \\
%       1                        & $\pi_1 = Jp^{1}(1-p)^{J-1}/(1-\pi_0)$            \\
%       2                        & $\pi_2 = {J\choose 2}p^{2}(1-p)^{J-2}/(1-\pi_0)$ \\
%       $\cdots$                 & $\cdots$                                         \\
%       J                        & $\pi_J = p^{J}/(1-\pi_0)$                        \\
%       \hline
%   \end{tabular}
%   \flushleft
%   \vspace{-6pt}
%   where $\pi_0=(1-p)^J$. Probs are zero-truncated binomials. \\ 
%   % \small
%   \pause
%   \vfill
%   Definitions \\
%   \scriptsize
%   $N$ -- Population size                                                          \\
%   $n$ -- Number of animals captured                                               \\
% %  $p^*$ -- probability of being captured at least once
% %  $y_{ij}$ -- encounter histories                                                \\
%   $\tilde{y}_i=\sum_{j=1}^J y_{ij}$ -- number of times individual $i$ was encounter out of $J$
%   occasions                                                                       \\
%   $\pi_j$ -- Probability of capturing an individual $k$ times \\
%   \pause
%   \vfill
%   \centering
%   This only works if $p$ doesn't change over time. \\
% \end{frame}



\begin{frame}
  \frametitle{Joint likelihood}
  % \footnotesize
  \small
  The joint likelihood is based on the multinomial distribution, with
  the ``all-zero'' encounter history being unobserved. \\  
  \begin{equation*}
    \{f_1, \dots, f_{K+1}\} \sim \mathrm{Multinomial}(N, \pi_1, \dots, \pi_{K+1}) \;\;
  \end{equation*}
  where $\{f_1, \dots, f_K\}$ are the frequencies of the observable capture
  histories. \\
  \vfill
  Here's an example with $J=3$ capture occasions.  \\
  \vfill
  \centering
    \begin{tabular}{ll}
      \hline
      Capture history       & Multinomial cell probability \\
      \hline
      100                   & $\pi_1=p_1(1-p_2)(1-p_3)$    \\
      010                   & $\pi_2=(1-p_1)p_2(1-p_3)$    \\
      001                   & $\pi_3=(1-p_1)(1-p_2)p_3$    \\
      110                   & $\pi_4=p_1p_2(1-p_3)$        \\
      101                   & $\pi_5=p_1(1-p_2)p_3$        \\
      011                   & $\pi_6=(1-p_1)p_2p_3$        \\
      111                   & $\pi_7 = p_1p_2p_3$          \\
      000                   & $\pi_0 = \prod_j 1-p_j$      \\
      \hline
    \end{tabular}
%   \pause
%   \vfill
%   \flushleft
%   Likelihood function for this formulation
%   \begin{equation*}
% %  \begin{multline*}
% %    L(N,p; y,n) =                                          \\
%     L(N,p; y,n) = \left\{\prod_{i=1}^n \prod_{j=1}^J p^{y_{ij}}(1-p)^{1-y_{ij}}\right\}
% %    \left\{\frac{N!}{(N-n)!}  \left(\prod_{j=1}^J(1-p)\right)^{N-n} \right\}
%     \frac{N!}{(N-n)!}  \left(\pi_0\right)^{N-n}
% %  \end{multline*}
%   \end{equation*}
\end{frame}




\begin{frame}
  \frametitle{Joint likelihood, conditional-on-$n$}
%  \frametitle{Conditional-on-$n$, multinomial cell probs}
  \footnotesize
  Here's another option (that's easy to implement in JAGS) with a conditional multinomial: \\
  \begin{gather*}
    n \sim \mathrm{Binomial}\left(N, 1-\pi_0\right)                      \\
    \{f_1, \dots, f_K\} \sim \mathrm{Multinomial}(n, \pi_1, \dots, \pi_K) \;\;
%    \mathrm{for}\, i=1,\dots,n                                           %\\
%    y_j = h_{k_i}
  \end{gather*}
  where $\{f_1, \dots, f_K\}$ are the observed frequencies of each
  capture history. \\
  \pause \vfill
  Example with $J=3$ capture occasions.                                          \\
%  \begin{columns}
%    \column{0.9\paperwidth}
  \scriptsize
  \vspace{6pt}
  \centering
    \begin{tabular}{ll}
      \hline
      Capture history & Multinomial cell probability        \\
      \hline
%      000 & $\pi_0 = \prod_j 1-p_j/(1-\pi_0)$                           \\
      100                   & $\pi_1=p_1(1-p_2)(1-p_3)/(1-\pi_0)$ \\
      010                   & $\pi_2=(1-p_1)p_2(1-p_3)/(1-\pi_0)$ \\
      001                   & $\pi_3=(1-p_1)(1-p_2)p_3/(1-\pi_0)$ \\
      110                   & $\pi_4=p_1p_2(1-p_3)/(1-\pi_0)$     \\
      101                   & $\pi_5=p_1(1-p_2)p_3/(1-\pi_0)$     \\
      011                   & $\pi_6=(1-p_1)p_2p_3/(1-\pi_0)$     \\
      111                   & $\pi_7 = p_1p_2p_3/(1-\pi_0)$       \\
      \hline
    \end{tabular}
    % \end{columns}
    \flushleft
  where $\pi_0=\prod_{j=1}^J 1-p_j$.                                     \\
\end{frame}




% \begin{frame}
%   \frametitle{Joint likelihood}
%   % \footnotesize
%   \small
%   Rather than condition on $n$, we can maximize the ``unconditional''
%   likelihood that includes the ``all zero'' encounter history,
%   weighted $n_0=N-n$ times. 
%   % \vfill
%   % \centering
%     % \begin{tabular}{ll}
%     %   \hline
%     %   Capture history ($h$) & Multinomial cell probability \\
%     %   \hline
%     %   000                   & $\pi_0 = \prod_j 1-p_j$      \\
%     %   100                   & $\pi_1=p_1(1-p_2)(1-p_3)$    \\
%     %   010                   & $\pi_2=(1-p_1)p_2(1-p_3)$    \\
%     %   001                   & $\pi_3=(1-p_1)(1-p_2)p_3$    \\
%     %   110                   & $\pi_4=p_1p_2(1-p_3)$        \\
%     %   101                   & $\pi_5=p_1(1-p_2)p_3$        \\
%     %   011                   & $\pi_6=(1-p_1)p_2p_3$        \\
%     %   111                   & $\pi_7 = p_1p_2p_3$          \\
%     %   \hline
%     % \end{tabular}
%   \pause
%   \vfill
%   \flushleft
%   Likelihood function for this formulation
%   \begin{equation*}
% %  \begin{multline*}
% %    L(N,p; y,n) =                                          \\
%     L(N,p; y,n) = \left\{\prod_{i=1}^n \prod_{j=1}^J p^{y_{ij}}(1-p)^{1-y_{ij}}\right\}
% %    \left\{\frac{N!}{(N-n)!}  \left(\prod_{j=1}^J(1-p)\right)^{N-n} \right\}
%     \frac{N!}{(N-n)!}  \left(\pi_0\right)^{N-n}
% %  \end{multline*}
%   \end{equation*}
% \end{frame}



\begin{frame}
  \frametitle{Model variations}
  \small
  More important than the estimation approach, is identification of
  the sources of variation in capture probability ($p$). \\ 
  \pause
  \vfill
  Otis et al. (1978) identified several model
  variations: 
  \begin{itemize}
    \small
    \item $M_0$ -- $p$ is constant
    \item $M_t$ -- unique $p$ for each capture occasion
    \item \hangindent=0.8cm $M_b$ -- behavioral response with $p$ different than
      recapture probability $c$
    \item $M_h$ -- individual heterogeneity in $p$
      \begin{itemize}
        \item Finite mixture models
        \item Continuous mixture models (not available in RMark)
      \end{itemize}
  \end{itemize}
  \pause \vfill
  These can be combined, but beware of identifiability issues. See
  Otis et al. (1978) for details.  \\
  \pause \vfill
  Later we'll talk about %another important class, 
  ``individual covariate'' models.  
\end{frame}




\begin{frame}
  \frametitle{Software options}
  \small
  Program MARK
  \begin{itemize}
  \footnotesize
    \item Has the most model types
    \item Written for Windows, but can be executed on other platforms  
  \end{itemize}
  R package `RMark'
  \begin{itemize}
  \footnotesize
    \item Function \inr{mark} runs MARK from R.
  \end{itemize}
  R package `marked'
  \begin{itemize}
  \footnotesize
    \item Includes CJS and JS models
  \end{itemize}
  R package `mra'
  \begin{itemize}
  \footnotesize
    \item Includes closed-population, CJS, and JS models
  \end{itemize}
  R package `Rcapture'
  \begin{itemize}
  \footnotesize
    \item Includes closed-population
  \end{itemize}
  R package `unmarked'
  \begin{itemize}
  \footnotesize
    \item Likelihood-based data augmentation with \inr{occu}
  \end{itemize}
  R package `secr'
  \begin{itemize}
  \footnotesize
    \item Designed for spatially explicit models, but see \inr{closedN}
  \end{itemize}
\end{frame}




\section{Simulation}

%\section{Model $M_0$}


%\subsection{Simulation}


\subsection{Model $M_0$}




\begin{frame}
  \frametitle{Outline}
  \Large
%  \tableofcontents[currentsection,currentsubsection]
  \tableofcontents[currentsection]
\end{frame}







<<include=FALSE,echo=FALSE>>=
set.seed(34889243)
@ 

\begin{frame}[fragile]
  \frametitle{Model $M_0$}
  \small
  Parameters
  \vspace{-6pt}
<<sim-M0-pars,size='scriptsize'>>=
N <- 100
p <- 0.2
@
  \pause
  \vfill
  All capture histories (for captured and uncaptured individuals)
  \vspace{-6pt}
<<sim-M0-ch,size='scriptsize'>>=
J <- 4  ## Occasions
y.all <- matrix(NA, N, J)
for(i in 1:N) {
    y.all[i,] <- rbinom(J, 1, p)
}
@
  \pause
  \vfill
  Observed capture histories (data)
  \vspace{-6pt}
<<sim-M0-y1,size='scriptsize'>>=
captured <- rowSums(y.all)>0
(n <- sum(captured))
y <- y.all[captured,]
y[1:3,]
@ 
\end{frame}



\begin{frame}[fragile]
  \frametitle{Summary stats}
  Capture history frequencies
<<M0-hist,size='scriptsize'>>=
histories <- apply(y, 1, paste, collapse="")
sort(table(histories))
@
\pause
\vfill
  Detection frequencies
<<M0-freq,size='scriptsize'>>=
y.tilde <- rowSums(y)
sort(table(y.tilde))
@   
\end{frame}



\subsection{Model $M_t$}


\begin{frame}[fragile]
  \frametitle{Model $M_t$ -- Temporal variation}
  Capture probability for each occasion
<<sim-Mt-pars,size='scriptsize'>>=
p.t <- c(0.3, 0.5, 0.2, 0.4)
@
  \pause
  \vfill
  All capture histories (for captured and uncaptured individuals)
  \vspace{-6pt}
<<sim-Mt-ch,size='scriptsize'>>=
y.all.Mt <- matrix(NA, N, J)
for(i in 1:N) {
    y.all.Mt[i,] <- rbinom(J, 1, p.t) }
@
  \pause
  \vfill
  Observed capture histories (data)
  \vspace{-6pt}
<<sim-Mt-y1,size='scriptsize'>>=
captured.Mt <- rowSums(y.all.Mt)>0
n.Mt <- sum(captured.Mt)
y.Mt <- y.all.Mt[captured.Mt,]
y.Mt[1:3,]
colSums(y.Mt)
@ 
\end{frame}



\subsection{Model $M_b$}

\begin{frame}[fragile]
  \frametitle{Model $M_b$ -- Behavioral response}
  Capture probability for each occasion
<<sim-Mb-pars,size='scriptsize'>>=
p.b <- 0.3
c <- 0.5  ## Trap happy
@
  \pause
  \vfill
  All capture histories (for captured and uncaptured individuals)
  \vspace{-6pt}
<<sim-Mb-ch,size='scriptsize'>>=
y.all.Mb <- matrix(NA, N, J)
prevcap <- matrix(FALSE, N, J)
for(i in 1:N) {
    y.all.Mb[i,1] <- rbinom(1, 1, p.b)
    for(j in 2:J) {
        prevcap[i,j] <- any(y.all.Mb[i,1:(j-1)]>0)
        prob <- ifelse(prevcap[i,j], c, p.b)
        y.all.Mb[i,j] <- rbinom(1, 1, prob)
    }
}
@
  \pause
  \vfill
  Observed capture histories (data)
  \vspace{-6pt}
<<sim-Mb-y1,size='scriptsize'>>=
captured.Mb <- rowSums(y.all.Mb)>0
n.Mb <- sum(captured.Mb)
y.Mb <- y.all.Mb[captured.Mb,]
## prevcap[1:3,]
@ 
\end{frame}



\subsection{Model $M_h$}



\begin{frame}[fragile]
  \frametitle{Model $M_h$ -- Finite mixture}
  There are many flavors of $M_h$. This one assumes there are two
  (unknown) groups of individuals with different capture probs. 
<<sim-Mhm-pars,size='scriptsize'>>=
mixture.prob <- 0.6
group <- rbinom(N, 1, mixture.prob)    ## Two groups
p.Mh.mix <- ifelse(group==0, 0.2, 0.7) ## Two-point mixture
@
  \pause
  \vfill
  All capture histories (for captured and uncaptured individuals)
  \vspace{-6pt}
<<sim-Mhm-ch,size='scriptsize'>>=
y.all.Mh.mix <- matrix(NA, N, J)
for(i in 1:N) {
    y.all.Mh.mix[i,] <- rbinom(J, 1, p.Mh.mix[i])
}
@
  \pause
  \vfill
  Observed capture histories (data)
  \vspace{-6pt}
<<sim-Mhm-y1,size='scriptsize'>>=
captured.Mh.mix <- rowSums(y.all.Mh.mix)>0
n.Mh.mix <- sum(captured.Mh.mix)
y.Mh.mix <- y.all.Mh.mix[captured.Mh.mix,]
@ 
\end{frame}



\begin{frame}[fragile]
  \frametitle{Model $M_h$ -- Individual heterogeneity}
  Here's another flavor of $M_h$: logit-normal distribution for
  $p$.  
<<sim-Mh-pars,size='scriptsize'>>=
logit.p.bar <- -1  ## Mean p on logit scale
logit.p.var <- 1   ## SD of p on logit scale
p.h <- plogis(rnorm(N, logit.p.bar, logit.p.var))
@
  \pause
  \vfill
  All capture histories (for captured and uncaptured individuals)
  \vspace{-6pt}
<<sim-Mh-ch,size='scriptsize'>>=
y.all.Mh <- matrix(NA, N, J)
for(i in 1:N) {
    y.all.Mh[i,] <- rbinom(J, 1, p.h[i])
}
@
  \pause
  \vfill
  Observed capture histories (data)
  \vspace{-6pt}
<<sim-Mh-y1,size='scriptsize'>>=
captured.Mh <- rowSums(y.all.Mh)>0
n.Mh <- sum(captured.Mh)
y.Mh <- y.all.Mh[captured.Mh,]
#y.Mh[1:3,]
@ 
\end{frame}





\section{Joint likelihood}



\begin{frame}
  \frametitle{Outline}
  \Large
  \tableofcontents[currentsection]
\end{frame}


% %% p(y,n|N,p)
% \begin{frame}[fragile]
%   \frametitle{Joint likelihood for $M_0$}
%   The joint likelihood has a multinomial form:
%   \begin{multline*}
%     L(N,p; y,n) = \\
%     \left\{\prod_{i=1}^n \prod_{j=1}^J p^{y_{ij}}(1-p)^{1-y_{ij}}\right\}
%     \left\{\frac{N!}{(N-n)!}  \left(\prod_{j=1}^J(1-p)\right)^{N-n} \right\}
%   \end{multline*}
%   \pause
%   \vfill
% % <<nll-M0,echo=TRUE,size='scriptsize'>>=
% nll.M0 <- function(pars, y) {           ## Negative log-likelihood
%     n <- nrow(y);       J <- ncol(y)
%     N <- exp(pars[1])
%     n0 <- N-n
%     if(n0<0) return(NA)
%     p <- plogis(pars[2])
%     ld.y1 <- sum(dbinom(y, 1, p, log=TRUE))
%     p0 <- (1-p)^J
%     ld.n0 <- lgamma(N+1)-lgamma(n0+1)+n0*log(p0)
%     nll <- -(ld.y1+ld.n0)
%     return(nll)
% }
% % @
% \end{frame}



% \begin{frame}[fragile]
%   \frametitle{Maximize joint likelihood for $M_0$}
% Minimized the negative log-likelihood
% % <<opt-nll-M0, size='scriptsize'>>=
% fm.M0 <- optim(c(log.N=4,logit.p=0), nll.M0, y=y, hessian=TRUE)
% fm.M0.est <- data.frame(Estimate=c(fm.M0$par[1], fm.M0$par[2]),
%                         SE=sqrt(diag(solve(fm.M0$hessian))))
% fm.M0.est

% % @
% \pause
% \vfill
% Back-transform the estimates
% % <<opt-nll-M0-back, size='scriptsize'>>=
% c(N.hat=exp(fm.M0$par[1]), p.hat=plogis(fm.M0$par[2]))
% % @
% \pause
% \vfill
% Compare to data-generating values
% % <<dg,size='scriptsize'>>=
% c(N=N, p=p)
% % @ 
% \end{frame}





% %% p(y|n,p)p(n|N,p)
% % <<eval=FALSE,include=FALSE,echo=FALSE>>=
% nll.M0.2 <- function(pars, y) {
%     n <- nrow(y);       J <- ncol(y)
%     N <- exp(pars[1])
%     n0 <- N-n
%     if(n0<0) return(NA)
%     p <- plogis(pars[2])
%     J <- ncol(y)
%     p.star <- 1-(1-p)^J

%     ydot <- rowSums(y)
%     lcd.y <- sum(dbinom(ydot, J, p, log=TRUE)-log(p.star))
%     ld.n <- lchoose(N, n)+n*log(p.star)+n0*log(1-p.star)
%     nll <- -(lcd.y+ld.n)
%     return(nll)
% }
% fm.M0.2 <- optim(c(5,0), nll.M0.2, y=y, hessian=TRUE)
% c(N=exp(fm.M0.2$par[1]), p=plogis(fm.M0.2$par[2]))
% % @ 



% %% p(y|n,p)
% % <<eval=FALSE,include=FALSE,echo=FALSE>>=

% nll.M0.cn <- function(pars, y) {
%     p <- plogis(pars[1])
%     J <- ncol(y)
%     p.star <- 1-(1-p)^J
%     ydot <- rowSums(y)
%     nll <- -sum(dbinom(ydot, J, p, log=TRUE)-log(p.star))
%     return(nll)
% }
% fm.M0.cn <- optim(0, nll.M0.cn, y=y, hessian=TRUE, method="Brent", lower=-10, upper=10)
% c(p=plogis(fm.M0.cn$par[1]))
% % @ 




% \begin{frame}[fragile]
%   \frametitle{R package `Rcapture'}
% <<Rcapture,size='scriptsize',warning=FALSE,message=FALSE>>=

% ## install.packages("Rcapture")
% library(Rcapture)
% closedp(y)
% @   
% \end{frame}




% \begin{frame}[fragile]
%   \frametitle{R package `mra'}
% <<mra,size='scriptsize',warning=FALSE,message=FALSE>>=

% ## install.packages("mra")
% library(mra)
% F.huggins.estim(~1, histories=y)
% @   
% \end{frame}



\begin{frame}
  \frametitle{R package `RMark'}
  Before you can use `RMark', you have to install MARK.  \\
  \vfill
  The main MARK page is here: \\
  {\color{blue} \url{ 
    http://www.phidot.org/software/mark/index.html
  }}  \\
  \vfill
  Instructions for Linux and Mac users: \\
  {\color{blue}
    \url{
      http://www.phidot.org/software/mark/rmark/linux/ \\
    }
    \vspace{6pt}
    \url{
      https://github.com/heathergaya/JAGS-NIMBLE-Tutorials/blob/master/Installing\%20RMark\%20on\%20Mac\%202022
    } } \\
  \vfill
  Lots of good information about closed population mark-recapture: \\
  {\color{blue} \footnotesize \url{ 
    http://www.phidot.org/software/mark/docs/book/pdf/chap14.pdf
  }}
\end{frame}



\begin{frame}[fragile]
  \frametitle{R package `RMark' -- Model $M_0$}
  \small
  Fit the model and set capture probability equal to recapture probability
  ($p=c$) using the \inr{share} argument.
<<RMark,size='scriptsize',warning=FALSE,results='hide',cache=TRUE,warning=FALSE,message=FALSE>>=
## install.packages("RMark") ## Must install MARK too!!
library(RMark)
y.ch <- data.frame(ch=apply(y, 1, paste, collapse=""))
mark.M0 <- mark(data=y.ch, model="Closed", silent=TRUE,
                model.parameters=list(p=list(formula=~1,share=TRUE)))
@
\pause
\vfill
Estimates of $p$ and $n_0$ (called $f_0$ in MARK)
<<RMark-pn0,size='scriptsize'>>=
mark.M0$results$real      
@   
\pause
\vfill
Estimate of $N$ 
<<RMark-N,size='scriptsize'>>=
mark.M0$results$derived   
@   
\end{frame}





\begin{frame}[fragile]
  \frametitle{R package `RMark' -- Model $M_t$}
<<RMark-Mt,size='scriptsize',warning=FALSE,results='hide',cache=TRUE>>=
yt.ch <- data.frame(ch=apply(y.Mt, 1, paste, collapse=""))
mark.Mt <- mark(data=yt.ch, model="Closed", silent=TRUE,
                model.parameters=list(p=list(formula=~time,share=TRUE)))
@
\pause
\vfill
Estimates of $p_j$ and $n_0$ (called $f_0$ in MARK)
<<RMark-pn0-Mt,size='scriptsize'>>=
mark.Mt$results$real      
@   
\pause
\vfill
Estimate of $N$ 
<<RMark-N-Mt,size='scriptsize'>>=
mark.Mt$results$derived   
@   
\end{frame}





\begin{frame}[fragile]
  \frametitle{R package `RMark' -- Model $M_b$}
<<RMark-Mb,size='scriptsize',warning=FALSE,results='hide',cache=TRUE>>=
yb.ch <- data.frame(ch=apply(y.Mb, 1, paste, collapse=""))
mark.Mb <- mark(data=yb.ch, model="Closed", silent=TRUE) ## Default model
@
\pause
\vfill
Estimates of $p$, $c$, and $n_0$ (called $f_0$ in MARK)
<<RMark-pn0-Mb,size='scriptsize'>>=
mark.Mb$results$real      
@   
\pause
\vfill
Estimate of $N$ 
<<RMark-N-Mb,size='scriptsize'>>=
mark.Mb$results$derived   
@   
\end{frame}





\begin{frame}[fragile]
  \frametitle{`RMark' -- Model $M_h$}
  This is a two-point mixture model. % using the conditional likelihood
%  approach of Huggins. 
<<RMark-Mh,size='scriptsize',warning=FALSE,results='hide',cache=FALSE>>=
yh.ch <- data.frame(ch=apply(y.Mh.mix, 1, paste, collapse=""))
mark.Mh <- mark(data=yh.ch, silent=TRUE, model="HetClosed", # "HugHet", 
                model.parameters=list(p=list(formula=~mixture,share=TRUE)))
@
\pause
\vfill
Estimates of $p$ and $\pi$, the proportion of individuals in group 2.
<<RMark-pn0-Mh,size='scriptsize'>>=
mark.Mh$results$real      
@   
\pause
\vfill
Estimate of $N$ 
<<RMark-N-Mh,size='scriptsize'>>=
mark.Mh$results$derived   
@   
\end{frame}





\section{Data augmentation}


%\section{Prediction}
%\subsection{Likelihood-based inference}


\begin{frame}
  \frametitle{Outline}
  \Large
  \tableofcontents[currentsection]
\end{frame}



\begin{frame}
  \frametitle{Data augmentation}
  Data augmentation is strange. \\
  \pause
  \vfill
  We add ``all zero'' capture histories to our data, then we try to
  estimate how many of them are real. \\ 
  \pause
  \vfill
  The total number of observed and augmented encounter histories is
  $M$. \\
  \pause
  \vfill
  We define the model in terms of a binary indicator variable $z_i$,
  such that $N=\sum_{i=1}^M z_i$. \\
  \pause
  \vfill
  We know $z_i=1$ for the $n$ captured individuals. \\
\end{frame}



\begin{frame}
  \frametitle{Data augmentation}
  \footnotesize
  We can think about the problem like this: \\
  \centering
  \vfill
  \begin{tabular}{lcccc}
    \hline
               & \multicolumn{3}{c}{Occasion} \\
    \cline{2-4}
    Individual & 1     & 2     & 3     & z    \\
    \hline
    1          & 0     & 0     & 1     & 1    \\
    2          & 1     & 1     & 1     & 1            \\
    3          & 0     & 1     & 0     & 1            \\
    4          & 0     & 1     & 1     & 1            \\
    5          & 1     & 0     & 0     & 1            \\
    \dots      & \dots & \dots & \dots      & 1        \\
    $n$        & 0     & 0     & 1     & 1            \\
    \hline
    $n+1$      & 0     & 0     & 0     & ?            \\
    $n+2$      & 0     & 0     & 0     & ?            \\
    \dots      & \dots & \dots & \dots     & ?        \\
    $N$        & 0     & 0     & 0     & ?            \\
    \hline
    $N+1$      & 0     & 0     & 0     & ?            \\
    $N+2$      & 0     & 0     & 0     & ?            \\
    \dots      & \dots & \dots & \dots     & ?        \\
    $M$      & 0     & 0     & 0     & ?            \\
    \hline
  \end{tabular}
\end{frame}



\begin{frame}
  \frametitle{Data augmentation}
  The model:
  \begin{gather*}
    z_i \sim \mathrm{Bern}(\psi) \\
    y_{ij} \sim \mathrm{Bern}(z_i \times p_{ij}) \\
    N=\sum_{i=1}^M z_i
  \end{gather*}
  \pause \vfill
  % A uniform prior on $\psi$ results in a discrete uniform prior on
  % $N$. We can change the prior for $N$ by changing the prior on
  % $\psi$, recognizing that $E(N)=M\psi$.
  Note that this looks exactly like an occupancy model. \\
  \pause \vfill
  But why bother with augmentation?
  \begin{itemize}
    \item DA works for \alert{all} varieties of mark-recapture models
    \item Makes it easy to incorporate
      individual-covariates\dots\pause including distance and
      location!   
  \end{itemize}
\end{frame}




% \subsection{Likelihood-based data augmentation}


\begin{frame}[fragile]
  \frametitle{Data augmentation}
  % \small
  % Normally, DA is used with Bayesian inference, but since it's exactly
  % the same model as a single-season occupancy model, we can also fit
  % it in `unmarked'.
  % \pause
  % \vfill
  First, let's augment the data simulated under model $M_b$, with
  $M=200$.
\vspace{-6pt}
<<aug-y,size='scriptsize'>>=
M <- 200
y.aug <- matrix(0, M, J)
y.aug[1:nrow(y.Mb),] <- y.Mb
@
\pause
\vfill
We also need to augment the \inr{prevcap} object.
\vspace{-6pt}
<<un-prevcap,size='scriptsize'>>=
prevcap.aug <- matrix(FALSE, M, J)
prevcap.aug[1:nrow(y.Mb),] <- prevcap[captured.Mb,]
prevcap.aug <- ifelse(prevcap.aug, "Yes", "No")
@
And we need a covariate indicating time (occasion)
\vspace{-6pt}
<<un-occ,size='scriptsize'>>=
occasion.aug <- matrix(as.character(1:J), M, J, byrow=TRUE)
@ 
\end{frame}


% \begin{frame}[fragile]
%   \frametitle{Model $M_0$ with `unmarked'}
%   \small
%   Create the unmarked frame
% <<un-umf,results='hide',size='scriptsize',warning=FALSE,message=FALSE>>=
% library(unmarked)
% umf <- unmarkedFrameOccu(y=y.aug,
%                          obsCovs=list(prevcap=prevcap.aug,
%                                       occasion=occasion.aug))
% @   
%   Fit the model  
% <<un-M0,size='scriptsize'>>=
% fm.M0 <- occu(~1~1, umf)
% fm.M0
% @   
% \end{frame}



% \begin{frame}[fragile]
%   \frametitle{Model $M_t$ with `unmarked'}
% <<un-Mt,size='scriptsize'>>=
% fm.Mt <- occu(~occasion~1, umf)
% fm.Mt
% @   
% \end{frame}



% \begin{frame}[fragile]
%   \frametitle{Model $M_b$ with `unmarked'}
% <<un-Mb,size='scriptsize'>>=
% fm.Mb <- occu(~prevcap~1, umf)
% fm.Mb
% @   
% \end{frame}


% \begin{frame}[fragile]
%   \frametitle{But how do we estimate $N$?}
%   First compute Empirical Bayes posterior probability that each
%   individual was ``real''. 
% <<un-re,size='footnotesize'>>=
% re.M0 <- ranef(fm.M0)
% re.Mt <- ranef(fm.Mt)
% re.Mb <- ranef(fm.Mb)
% @
% \pause
% \vfill
% Then we predict $N$, which can be thought of as the number of real
% individuals in the set of $M$ pseudo-individuals.
% <<un-N,size='footnotesize'>>=
% N.post.M0 <- predict(re.M0, func=sum, nsim=1000)
% N.post.Mt <- predict(re.Mt, func=sum, nsim=1000)
% N.post.Mb <- predict(re.Mb, func=sum, nsim=1000)
% @ 
% \end{frame}



% \begin{frame}[fragile]
%   \frametitle{Empirical Bayes posteriors of $N$}
% <<un-N-post, size='tiny',fig.height=3,out.width="100%",fig.show='hide', echo=-1>>=
% par(mfrow=c(1,3), mai=c(0.6,0.6,0.5,0.1))
% plot(table(N.post.M0), xlab="N", ylab="Posterior probability", main="M0",
%      xlim=c(75, 130), ylim=c(0,150)); abline(v=N, col="red")
% plot(table(N.post.Mt), xlab="N", ylab="Posterior probability", main="Mt",
%      xlim=c(75, 130), ylim=c(0,150)); abline(v=N, col="red")
% plot(table(N.post.Mb), xlab="N", ylab="Posterior probability", main="Mb",
%      xlim=c(75, 130), ylim=c(0,150)); abline(v=N, col="red")
% @
%   \begin{columns}
%     \begin{column}{0.95\paperwidth}
%       \includegraphics[width=\textwidth]{figure/un-N-post-1}
%     \end{column}
%   \end{columns}
%   \vfill
%   \pause
%   \footnotesize
%   We see that $M$ is sufficiently high because: $\Pr(N=M|y) \approx
%   0$. Otherwise, we would have to rerun it with a larger value of $M$.
% \end{frame}





% \subsection{Bayesian data augmentation}

% %\subsection{Bayesian inference}


% \begin{frame}
%   \frametitle{Outline}
%   \Large
%   \tableofcontents[currentsection,currentsubsection]
% \end{frame}



\begin{frame}
  \frametitle{Bayesian data augmentation}
  For Bayesian inference, we need priors on $\psi$ and $p$. 
  \begin{gather*}
    z_i \sim \mathrm{Bern}(\psi) \\
    y_{ij} \sim \mathrm{Bern}(z_i \times p) \\
    N = \sum_{i=1}^M z_i
  \end{gather*}
  \vfill
  A uniform prior on $\psi$ results in a discrete uniform prior on
  $N$. We can change the prior for $N$ by changing the prior on  
  $\psi$, recognizing:
  \[
    E(N)=M\psi
  \]
\end{frame}



\begin{frame}[fragile]
  \frametitle{Model $M_0$ -- data augmentation}
\vspace{-3pt}
<<bugs-M0-aug,size='footnotesize',comment='',background='lightblue'>>=
writeLines(readLines("M0-aug.jag"))
@
\end{frame}



\begin{frame}[fragile]
  \frametitle{Model $M_0$ -- data augmentation}
  Data
<<jd-M0-aug,size='scriptsize'>>=
y.aug <- matrix(0, M, J)
y.aug[1:n,] <- y
jags.data.M0 <- list(y=y.aug, M=M, J=J)
@
\pause
\vfill
  Inits and parameters
<<ji-M0-aug,size='scriptsize'>>=
ji.M0 <- function() list(z=rep(1,M), psi=runif(1), p=runif(1))
jp.M0 <- c("p", "psi", "N")
@
\pause
\vfill
MCMC
<<mcmc-M0-aug,size='scriptsize',results='hide',warning=FALSE,message=FALSE>>=
library(jagsUI)
jags.post.M0 <- jags.basic(data=jags.data.M0, inits=ji.M0,
                           parameters.to.save=jp.M0,
                           model.file="M0-aug.jag",
                           n.chains=3, n.adapt=100, n.burnin=0,
                           n.iter=2000, parallel=TRUE)
@ 
\end{frame}




\begin{frame}[fragile]
  \frametitle{Traceplots and density plots}
<<plot-mcmc-M0,size='footnotesize',out.width="0.7\\textwidth",fig.align='center',cache=TRUE>>=
plot(jags.post.M0[,jp.M0])
@ 
\end{frame}




% \begin{frame}[fragile]
%   \frametitle{Model $M_0$ -- without data augmentation}
%   Here's why practitioners like data augmentation 
% \vspace{-3pt}
% <<bugs-M0,size='footnotesize',comment='',background='lightblue'>>=
% writeLines(readLines("M0.jag"))
% @
% \end{frame}





% \begin{frame}[fragile]
%   \frametitle{Model $M_0$ -- without data augmentation}
%   Data
% <<jd-M0-noaug,size='scriptsize'>>=
% n0max <- 1000  ## Upper limit of prior on n0
% jags.data.M0.noaug <- list(y=y.aug, n=n, J=J,
%                            ## Prior probs for n0
%                            n0probs=rep(1/n0max, n0max), zero=0)
% @
% \pause
% \vfill
%   Inits and parameters
% <<ji-M0-noaug,size='scriptsize'>>=
% ji.M0.noaug <- function() list(n0=rpois(1, 5), p=runif(1, 0, 0.1))
% jp.M0.noaug <- c("p", "N")
% @
% \pause
% \vfill
% MCMC
% <<mcmc-M0-noaug,size='scriptsize',results='hide'>>=
% jags.post.M0.noaug <- jags.basic(data=jags.data.M0.noaug,
%                                  inits=ji.M0.noaug,
%                                  parameters.to.save=jp.M0.noaug,
%                                  model.file="M0.jag",
%                                  n.chains=3, n.adapt=100, n.burnin=0,
%                                  n.iter=2000, parallel=TRUE)
% @ 
% \end{frame}




% \begin{frame}[fragile]
%   \frametitle{Traceplots and density plots}
% <<plot-mcmc-M0-noaug,size='footnotesize',out.width="0.7\\textwidth",fig.align='center',cache=TRUE>>=
% plot(jags.post.M0.noaug[,jp.M0.noaug])
% @ 
% \end{frame}








% \begin{frame}[fragile]
%   \frametitle{Model $M_t$ -- data augmentation}
% \vspace{-3pt}
% <<bugs-Mt-aug,size='small',comment='',background='lightblue'>>=
% writeLines(readLines("Mt-aug.jag"))
% @
% \end{frame}






% \begin{frame}[fragile]
%   \frametitle{Model $M_t$ -- data augmentation}
%   Data, inits, parameters to monitor
% <<ji-Mt-aug,size='scriptsize'>>=
% jags.data.Mt <- jags.data.M0
% ji.Mt <- function() list(z=rep(1,M), psi=runif(1), p=runif(4))
% jp.Mt <- c("p", "psi", "N")
% @
% \pause
% \vfill
% MCMC
% <<mcmc-Mt-aug,size='scriptsize',results='hide'>>=
% jags.post.Mt <- jags.basic(data=jags.data.Mt, inits=ji.Mt,
%                            parameters.to.save=jp.Mt,
%                            model.file="Mt-aug.jag",
%                            n.chains=3, n.adapt=100, n.burnin=0,
%                            n.iter=2000, parallel=TRUE)
% @ 
% \end{frame}



% \begin{frame}[fragile]
%   \frametitle{Traceplots and density plots}
% <<plot-mcmc-Mt1,size='footnotesize',out.width="0.7\\textwidth",fig.align='center',cache=TRUE>>=
% plot(jags.post.Mt[,paste0("p[", 1:4, "]")])
% @ 
% \end{frame}


% \begin{frame}[fragile]
%   \frametitle{Model $M_t$ -- data augmentation}
% \vspace{-3pt}
% <<bugs-Mt-aug,size='small',comment='',background='lightblue'>>=
% writeLines(readLines("Mt-aug.jag"))
% @
% \end{frame}




\begin{frame}
  \frametitle{In-class exercise}
  \centering
  \large
  Write the BUGS model for $M_t$. \\
\end{frame}






\begin{frame}[fragile]
  \frametitle{Model $M_b$ -- data augmentation}
\vspace{-3pt}
<<bugs-Mb-aug,size='footnotesize',comment='',background='lightblue'>>=
writeLines(readLines("Mb-aug.jag"))
@
\end{frame}




\begin{frame}[fragile]
  \frametitle{Model $M_b$ -- data augmentation}
  Data, inits, parameters to monitor
<<ji-Mb-aug,size='scriptsize'>>=
jags.data.Mb <- jags.data.M0
jags.data.Mb$y[1:nrow(y.Mb),] <- y.Mb
jags.data.Mb$prevcap <- ifelse(prevcap.aug=="Yes", 1, 0)
ji.Mb <- function() list(z=rep(1,M), psi=runif(1), p=runif(1), c=runif(1))
jp.Mb <- c("p", "c", "psi", "N")
@
\pause
\vfill
MCMC
<<mcmc-Mb-aug,size='scriptsize',results='hide'>>=
jags.post.Mb <- jags.basic(data=jags.data.Mb, inits=ji.Mb,
                           parameters.to.save=jp.Mb,
                           model.file="Mb-aug.jag",
                           n.chains=3, n.adapt=100, n.burnin=0,
                           n.iter=2000, parallel=TRUE)
@ 
\end{frame}





\begin{frame}[fragile]
  \frametitle{Traceplots and density plots}
<<plot-mcmc-Mb,size='footnotesize',out.width="0.7\\textwidth",fig.align='center',cache=TRUE>>=
plot(jags.post.Mb[,jp.Mb])
@ 
\end{frame}



\begin{frame}[fragile]
  \frametitle{Model $M_h$ -- finite mixture}
\vspace{-3pt}
<<bugs-Mhm-aug,size='footnotesize',comment='',background='lightblue'>>=
writeLines(readLines("Mhm-aug.jag"))
@
\end{frame}



\begin{frame}[fragile]
  \frametitle{Model $M_h$ -- logit normal}
\vspace{-3pt}
<<bugs-Mh-aug,size='footnotesize',comment='',background='lightblue'>>=
writeLines(readLines("Mh-aug.jag"))
@
\end{frame}




%\section{Summary}


\begin{frame}
  \frametitle{Mark-recapture summary}
  We assume that variation in $p$ arises from changes over time,
  behavioral effects, or random individual heterogeneity. \\
  \pause \vfill
  Individual heterogeneity models pose estimation problems. \\
  \pause \vfill
  A solution is to use individual covariates to explain the variation,
  rather than random effects. \pause But what covariates are
  important? And how do we know the covariates values for uncaptured
  individuals? \\
  \pause \vfill
  With spatial capture-recapture (SCR) models we will use
  \alert{the unobserved distance between animals and traps} as a
  covariate, and we'll use a spatial point process model for
  animal locations.  
\end{frame}




\section{Assignment}




\begin{frame}[fragile]
  \frametitle{Assignment}
  \small
  % \footnotesize
  Create a self-contained R script or Rmarkdown file to do the
  following: 
  \vfill
  \begin{enumerate}
    \small
%    \footnotesize
%  \item Fit model $M_h$ in JAGS to the data simulated above
    \item Import the Canada warbler mark-recapture data ({\tt
        CAWAcaps\_2018.csv}) and fit the following models in RMark and
      JAGS\footnote{For JAGS, use $M=800$ but note if the posterior of
      $N$ pushes up against $M$.}:
      \begin{itemize}
        % \footnotesize
        \item Model $M_0$
        \item Model $M_t$ 
%        \item Model $M_b$
        \item Model $M_h$ -- Finite mixture
        \item Model $M_h$ -- Logit-normal (JAGS only)
      \end{itemize}
    \item Create a table reporting point estimates and 95\% CIs for
      $N$ for each model fit in RMark and JAGS. Which model has the
      lowest AICc? 
  \end{enumerate}
  \vfill
  Upload your {\tt .R} or {\tt .Rmd} file to ELC by Monday at 5:00 PM. 
\end{frame}





\end{document}

