\documentclass[color=usenames,dvipsnames]{beamer}
%\documentclass[color=usenames,dvipsnames,handout]{beamer}

\usepackage[roman]{../lectures}
%\usepackage[sans]{../lectures}


\hypersetup{pdfpagemode=UseNone,pdfstartview={FitV}}



% Load function to compile and open PDF
<<build-fun,include=FALSE,purl=FALSE>>=
source("../rnw2pdf.R")
@

% Compile and open PDF
<<buildit,include=FALSE,eval=FALSE>>=
rnw2pdf("lecture-dynamic-occupancy") 
rnw2pdf("lecture-dynamic-occupancy", tangle=TRUE)
@ 


<<knitr-theme,include=FALSE,purl=FALSE>>=
##knit_theme$set("navajo-night")
knit_theme$set("edit-kwrite")
@


%% New command for inline code that isn't to be evaluated
\definecolor{inlinecolor}{rgb}{0.878, 0.918, 0.933}
\newcommand{\inr}[1]{\colorbox{inlinecolor}{\texttt{#1}}}




\begin{document}






\begin{frame}[plain]
  \LARGE
%  \maketitle
  \centering
  {\huge Lecture 13 \\ Dynamic occupancy models} \\
  {\color{default} \rule{\textwidth}{0.1pt}}
  \vfill
  \large
  WILD(FISH) 8390 \\
  Estimation of Fish and Wildlife Population Parameters \\
  \vfill
  Richard Chandler \\
  University of Georgia \\
\end{frame}






\section{Overview}



\begin{frame}[plain]
  \frametitle{Outline}
  \Large
  \only<1>{\tableofcontents}%[hideallsubsections]}
  \only<2 | handout:0>{\tableofcontents[currentsection]}%,hideallsubsections]}
\end{frame}



\begin{frame}
  \frametitle{Overview}
  So far, we've focused exclusively on spatial variation in occupancy
  and abundance. \\  
  \pause
  \vfill
  But historically, the study of population dynamics was entirely
  focused on temporal variation. \\
  \pause
  \vfill
  Metapopulation models played a big role in emphasizing both spatial
  and temporal dynamics. \\
  \pause
  \vfill
  Dynamic occupancy models allow for inference on spatio-temporal
  occupancy resulting from local colonization and extinction
  processes. \\
\end{frame}





\begin{frame}
  \frametitle{Static (single-season) occupancy model}
  {\centering \color{blue} Refresher \\}
  \vfill
  \small
  The model for the state process is the same as logistic regression:
  \begin{gather*}
    \mathrm{logit}(\psi_i) = \beta_0 + \beta_1 x_{i1} + \beta_2 x_{i2} + \cdots \\
    z_i \sim \mathrm{Bern}(\psi_i)
  \end{gather*}
  \pause
  \vfill
  Model for the observation process conditional on the state process:
  \begin{gather*}
    \mathrm{logit}(p_{ij}) = \alpha_0 + \alpha_1 x_{ij1} + \alpha_2 x_{ij2} + \cdots \\
    y_{ij} \sim \mathrm{Bern}(z_i\times p_{ij})
  \end{gather*}
  \pause
  Definitions \\
  $\psi_i$ -- probability that the species occurs at site $i$ \\
  $z_i$ -- binary presence/absence variable at site $i$ \\
  $p_{ij}$ -- probability of detecting the species at site $i$ on occasion $j$ \\
  $y_{ij}$ -- binary detection/non-detection data
\end{frame}



\begin{frame}
  \frametitle{Dynamic occupancy model}
  \small
  Initial occupancy state (same as static model), for $k=1$.
  \begin{gather*}
    z_{i,1} \sim \mathrm{Bern}(\psi_{i,1})
  \end{gather*}
  \pause
%  \vfill
  Occupancy state dynamics, for $k=2, \dots, K$.
  \begin{gather*}
    \psi_{i,k} = z_{i,k-1}(1-\varepsilon) +  (1-z_{i,k-1})\gamma \\
    z_{i,k} \sim \mathrm{Bern}(\psi_{i,k})
  \end{gather*}
  \pause
%  \vfill
  Observation model
  \begin{gather*}
    y_{i,j,k} \sim \mathrm{Bern}(z_{i,k}\times p)
  \end{gather*}
  \pause
%  Definitions \\
  \footnotesize
  $\psi_{i,k}$ -- probability species occurs at site $i$ during primary period $k$ \\
  $z_{i,k}$ -- binary presence/absence variable \\
  $\varepsilon$ -- local extinction probability \\
  $\gamma$ -- local colonization probability \\
  $p$ -- probability of detecting the species if it's present \\
  $y_{i,j,k}$ -- detection data at site $i$ on secondary period $j$, primary period $k$ \\
  \pause \vfill
  \centering
  \small
  You can model $\psi_1$, $\varepsilon$, $\gamma$, and $p$ as
  functions of covariates \\
\end{frame}


%\section{Simulation}



\begin{frame}
  \frametitle{Colonization and extinction dynamics}
  \small
  After the initial time period, the probability that a site is
  occupied depends on the previous state and the two probabilities:
  \pause
  \begin{enumerate}
    \item<2-> Local colonization: $\gamma=\Pr(z_{i,k}=1|z_{i,k-1}=0)$
    \item<3-> Local extinction: $\varepsilon=\Pr(z_{i,k}=0|z_{i,k-1}=1)$
  \end{enumerate}
  {\centering
    \uncover<4->{\includegraphics[width=0.3\textwidth]{figure/royle_dorazio_9-1} \\
    \scriptsize From Royle and Dorazio (2008)}  \\
  }
  \vfill
  \uncover<5->{These probabilities can depend on spatio-temporal
    covariates and random effects. In spatially-explicit models, they
    depend on the states and distances to neighboring sites.}
\end{frame}


\section{Without covariates}


\begin{frame}
  \frametitle{Outline}
  \Large
  \tableofcontents[currentsection]
\end{frame}


\begin{frame}[fragile]
  \frametitle{Simulation without covariates}
  \small
%  No covariates
  \vfill
  \begin{enumerate}[<+->]
    \small
  \item Initial occupancy
<<sim-init,size='scriptsize',echo=-1>>=
set.seed(54598)
nSites <- 100
nPrimary <- 10
z <- psi <- matrix(NA, nSites, nPrimary)
psi[,1] <- 0.5  ## Initial occupancy prob
z[,1] <- rbinom(n=nSites, size=1, prob=psi[,1])
@
  \item Occupancy dynamics
<<nsim-dy,size='scriptsize'>>=
epsilon <- 0.3 ## Local extinction prob
gamma <- 0.2   ## Local colonization prob
for(k in 2:nPrimary) {
    psi[,k] <- z[,k-1]*(1-epsilon) + (1-z[,k-1])*gamma
    z[,k] <- rbinom(n=nSites, size=1, prob=psi[,k])    }
@   
  \item Data
<<sim-cov3,size='scriptsize'>>=
nSecondary <- 3    
p <- 0.2
y <- array(NA, c(nSites, nSecondary, nPrimary))
for(i in 1:nSites) {
    for(k in 1:nPrimary) {
        y[i,,k] <- rbinom(nSecondary, size=1, prob=z[i,k]*p)
    } }
@   
\end{enumerate}
\end{frame}




\begin{frame}[fragile]
  \frametitle{Simulated data}
  \begin{columns}
    \begin{column}{0.4\textwidth}
      \small
      Observations
%      \tiny
<<sim-nocov-dat,size='scriptsize'>>=
y[1:15,,1]
@ 
  \end{column}
  \begin{column}{0.6\textwidth}
    \pause
%    \scriptsize
    {\centering Summary stats \\}
    \vspace{24pt}
  Detections at each site \\
<<sim-nocov-ss1,size='scriptsize'>>=
siteDets <- rowSums(y) # Dets at each site
table(siteDets)        # Frequency
@
\pause
\vfill
\small
Detections each year \\
<<sim-nocov-ss2,size='scriptsize'>>=
yearDets <- apply(y, 3, sum)
yearDets
@
<<un,include=FALSE>>=
library(unmarked)
@ 
  \end{column}
  \end{columns}
\end{frame}



% \begin{frame}
%   \frametitle{Outline}
%   \Large
%   \tableofcontents[currentsection]
% \end{frame}



\subsection{Likelihood}



\begin{frame}[fragile]
  \frametitle{Prepare data in `unmarked'}
  \small
Notice the new argument \inr{numPrimary}:
<<un-umf,size='scriptsize'>>=
## Format as nSites by (nSec*nPrimary) matrix
y.wide <- matrix(y, nrow=nrow(y)) 
umf <- unmarkedMultFrame(y=y.wide, numPrimary=nPrimary)
@
\pause

<<wfac,size='scriptsize'>>=
summary(umf)
@ 
\end{frame}




\begin{frame}[fragile]
  \frametitle{Fit the model}
  \footnotesize
  Notice the 4 distinct formulas
<<un-fit,size='tiny'>>=
fm <- colext(~1,~1,~1,~1, umf)    
fm
@
\end{frame}



\begin{frame}[fragile]
  \frametitle{Compare estimate to actual}
  \begin{columns}
    \begin{column}{0.5\textwidth}
%    \footnotesize
    Estimates
<<un-compare,size='tiny'>>=
## backTransform(fm, type="psi")
coef(backTransform(fm, type="psi"))
coef(backTransform(fm, type="col"))
coef(backTransform(fm, type="ext"))
coef(backTransform(fm, type="det"))
@
    \end{column}
    \begin{column}{0.5\textwidth}
      Actual
<<un-actual,size='tiny'>>=
#c(initial=psi[1,1],col=gamma,ext=epsilon,det=p)
psi[1,1]
gamma
epsilon
p
@
    \end{column}
    \end{columns}
\end{frame}




\begin{frame}[fragile]
  \frametitle{Sites occupied}
<<re,size='scriptsize',fig.height=5,out.width='65%',fig.align='center',echo=-1>>=
par(mai=c(0.9, 0.9, 0.1, 0.1))  
re <- ranef(fm)
occupied.post <- predict(re, func=colSums, nsim=1000)
plot(1:nPrimary, rowMeans(occupied.post), type="b", pch=16,
     xlab="Time", ylab="Sites occupied", ylim=c(0, 70))
lines(1:nPrimary, colSums(z), type="b", col=4)
segments(1:nPrimary, apply(occupied.post, 1, quantile, prob=0.025),
         1:nPrimary, apply(occupied.post, 1, quantile, prob=0.975))
legend(1, 70, c("Actual", "Estimated"), pch=c(1,16), col=c(4,1), lty=1)
@   
\end{frame}









\subsection{Bayesian methods}



\begin{frame}[fragile]
  \frametitle{The BUGS model}
<<bugs,size='scriptsize',echo=FALSE>>=
writeLines(readLines("dynocc-model.jag"))
@ 
\end{frame}




\begin{frame}[fragile]
  \frametitle{Data, inits, and parameters}
  Put data in a named list
  \vspace{-12pt}
<<bugs-data,size='small'>>=
jags.data <- list(y=y, nSites=nSites,
                  J=nSecondary, K=nPrimary)
@
\pause
\vfill
  Initial values
  \vspace{-12pt}
<<bugs-inits,size='small'>>=
jags.inits <- function() {
    list(psi1=runif(1), epsilon=runif(1),
         gamma=runif(1), p=runif(1),
         z=matrix(1, nSites, nPrimary))
}
@ 
\pause
\vfill
  Parameters to monitor
  \vspace{-12pt}
<<bugs-pars,size='small'>>=
jags.pars <- c("psi1", "epsilon", "gamma", "p", "N")
@ 
\end{frame}


<<jagsUI,include=FALSE,results='hide'>>=
library(jagsUI)
library(coda)
@ 


\begin{frame}[fragile]
  \frametitle{MCMC}
  \small
<<bugs-mcmc,size='scriptsize',message=FALSE,cache=TRUE,results='hide'>>=
library(jagsUI)
jags.post.samples <- jags.basic(data=jags.data, inits=jags.inits,
                                parameters.to.save=jags.pars,
                                model.file="dynocc-model.jag",
                                n.chains=3, n.adapt=100, n.burnin=0,
                                n.iter=2000, parallel=TRUE)
@ 
\end{frame}



\begin{frame}[fragile]
  \frametitle{Summarize output}
<<bugs-sum,size='tiny'>>=
summary(jags.post.samples[,jags.pars[1:4]])
@ 
\end{frame}




\begin{frame}[fragile]
  \frametitle{Traceplots and density plots}
<<bugs-plot1,size='footnotesize',out.width="0.7\\textwidth",fig.align='center'>>=
plot(jags.post.samples[,jags.pars[1:4]])
@ 
\end{frame}
















\section{With covariates}


\begin{frame}
  \frametitle{Outline}
  \Large
  \tableofcontents[currentsection]
\end{frame}


\begin{frame}
  \frametitle{Dynamic occupancy models with covariates}
  There are three types of covariates that could be included:
  \begin{enumerate}
    \item Site covariates
      \begin{itemize}
        \item These vary among sites, but not among occasions
        \item Can be used to model $\psi_1$, $\varepsilon$, $\gamma$,
          and $p$
        \item Called \inr{siteCovs} in `unmarked'      
      \end{itemize}
    \item<2-> Primary sampling period covariates
      \begin{itemize}
        \item These vary among sites and among, but not within,
          primary periods 
        \item Can be used to model $\varepsilon$, $\gamma$, and $p$
        \item Called \inr{yearlySiteCovs} in `unmarked'
      \end{itemize}
    \item<3-> Secondary sampling period covariates
      \begin{itemize}
        \item These vary among sites and among and within
          primary periods 
        \item Can be used to model $p$
        \item Called \inr{obsCovs} in `unmarked'
      \end{itemize}
  \end{enumerate}
\end{frame}


\begin{frame}[fragile]
  \frametitle{Simulation with covariates}
  \small
%  No covariates
  \vfill
  \begin{enumerate}[<+->]
    \small
  \item Initial occupancy
<<sim-init-cov,size='tiny',echo=-1>>=
set.seed(5098)
beta0.psi <- -1; beta1.psi <- 1
elevation <- rnorm(nSites) ## site covariate
z2 <- psi2 <- matrix(NA, nSites, nPrimary)
psi2[,1] <- plogis(beta0.psi + beta1.psi*elevation)
z2[,1] <- rbinom(n=nSites, size=1, prob=psi2[,1])
@
  \item Occupancy dynamics
<<nsim-dy-cov,size='tiny'>>=
epsilon2 <- 0.3 ## Local extinction prob
temperature <- matrix(rnorm(nSites*nPrimary)*elevation, ## Primary period covariate
                      nrow=nSites) 
beta0.gamma <- -2; beta1.gamma <- -1
gamma2 <- plogis(beta0.gamma + beta1.gamma*temperature)
for(k in 2:nPrimary) {
    psi2[,k] <- z2[,k-1]*(1-epsilon2) + (1-z2[,k-1])*gamma2[,k-1]
    z2[,k] <- rbinom(n=nSites, size=1, prob=psi2[,k])
}
@   
  \item Data
<<sim-cov3-cov,size='tiny'>>=
p2 <- 0.2
y2 <- array(NA, c(nSites, nSecondary, nPrimary))
for(i in 1:nSites) {
    for(k in 1:nPrimary) {
        y2[i,,k] <- rbinom(nSecondary, size=1, prob=z2[i,k]*p2)
    } }
@   
\end{enumerate}
\end{frame}






\subsection{Likelihood}

% \begin{frame}
%   \frametitle{Outline}
%   \Large
%   \tableofcontents[currentsection]
% \end{frame}






\begin{frame}[fragile]
  \frametitle{Prepare data in `unmarked'}
  \footnotesize
Notice the new arguments \inr{numPrimary} and \inr{yearlySiteCovs}:
<<un-umf-cov,size='tiny'>>=
y2.wide <- matrix(y2, nrow=nrow(y2)) ## nSites by (nSec*nPrimary) matrix
umf2 <- unmarkedMultFrame(y=y2.wide, numPrimary=nPrimary, siteCovs=data.frame(elevation),
                          yearlySiteCovs=list(temp=temperature))
@
\pause

<<wfac-cov,size='tiny'>>=
summary(umf2)
@ 
\end{frame}




\begin{frame}[fragile]
  \frametitle{Fit the model}
  \footnotesize
  Notice the 4 distinct formulas
<<un-fit-cov,size='tiny'>>=
fm2 <- colext(~elevation,~temp,~1,~1, umf2)    
fm2
@
\end{frame}











\begin{frame}[fragile]
  \frametitle{Prediction in `unmarked'}
  Create \texttt{data.frame} with prediction covariates. 
<<preddat,size='footnotesize'>>=
pred.data <- data.frame(temp=seq(from=-5, to=4, length=50))
@
\pause
\vfill
Get predictions of $\gamma$ for each row of prediction data.
<<pred-gamma,size='footnotesize'>>=
gamma.pred <- predict(fm2, newdata=pred.data,
                      type='col', append=TRUE)
@
\end{frame}







\begin{frame}[fragile]
  \frametitle{Prediction in `unmarked'}
<<pred-gamma1,fig.height=5.5,size='tiny',out.width='80%',fig.align='center'>>=
plot(Predicted ~ temp, gamma.pred, type="l", ylab="Occurrence probability", col="blue",
     xlab="Standardized temperature", ylim=0:1, lwd=3) 
lines(lower ~ temp, gamma.pred, col="blue")
lines(upper ~ temp, gamma.pred, col="blue")
@   
\end{frame}









\subsection{Bayesian methods}



\begin{frame}
  \frametitle{Outline}
  \Large
  \tableofcontents[currentsection,currentsubsection]
\end{frame}




\begin{frame}[fragile]
  \frametitle{The BUGS model}
<<bugs-cov,size='tiny',echo=FALSE>>=
writeLines(readLines("dynocc-model-covars.jag"))
@ 
\end{frame}




\begin{frame}[fragile]
  \frametitle{Data, inits, and parameters}
  Put data in a named list
  \vspace{-12pt}
<<bugs-data-cov,size='scriptsize'>>=
jags.data.covs <- list(y=y2, nSites=nSites, elevation=elevation,
                       temp=temperature, J=nSecondary, K=nPrimary)
@
\pause
\vfill
  Initial values
  \vspace{-12pt}
<<bugs-inits-cov,size='scriptsize'>>=
jags.inits.covs <- function() {
    list(beta0.psi=rnorm(1), beta1.psi=rnorm(1), epsilon=runif(1),
         beta0.gamma=rnorm(1), beta1.gamma=rnorm(1), p=runif(1),
         z=matrix(1, nSites, nPrimary))
}
@ 
\pause
\vfill
  Parameters to monitor
  \vspace{-12pt}
<<bugs-pars-cov,size='scriptsize'>>=
jags.pars.covs <- c("beta0.psi", "beta1.psi", "epsilon",
                    "beta0.gamma", "beta1.gamma", "p", "N")
@ 
\end{frame}





\begin{frame}[fragile]
  \frametitle{MCMC}
  \small
<<bugs-mcmc-cov,size='scriptsize',message=FALSE,cache=TRUE,results='hide'>>=
library(jagsUI)
jags.post.samples.covs <- jags.basic(
    data=jags.data.covs, inits=jags.inits.covs,
    parameters.to.save=jags.pars.covs,
    model.file="dynocc-model-covars.jag",
    n.chains=3, n.adapt=100, n.burnin=0, n.iter=2000, parallel=TRUE)
@ 
\end{frame}



\begin{frame}[fragile]
  \frametitle{Summarize output}
<<bugs-sum-cov,size='tiny'>>=
summary(jags.post.samples.covs[,jags.pars.covs[1:6]])
@ 
\end{frame}




\begin{frame}[fragile]
  \frametitle{Traceplots and density plots}
<<bugs-plot1-cov,size='footnotesize',out.width="0.7\\textwidth",fig.align='center'>>=
plot(jags.post.samples.covs[,jags.pars.covs[1:3]])
@ 
\end{frame}




\begin{frame}[fragile]
  \frametitle{Traceplots and density plots}
<<bugs-plot2-cov,size='footnotesize',out.width="0.7\\textwidth",fig.align='center'>>=
plot(jags.post.samples.covs[,jags.pars.covs[4:6]])
@ 
\end{frame}




\begin{frame}[fragile]
  \frametitle{Sites occupied}
  Extract posterior samples of $N_t$ and compute summary stats.
<<N-post-covs,size='small'>>=
library(coda)
N.names <- grep("N\\[", varnames(jags.post.samples.covs)  )
N.post <- as.matrix(jags.post.samples.covs[,N.names])
N.post.mean <- colMeans(N.post)
N.post.lower <- apply(N.post, 2, quantile, prob=0.025)
N.post.upper <- apply(N.post, 2, quantile, prob=0.975)
@   
\end{frame}




\begin{frame}[fragile]
  \frametitle{Sites occupied}
<<N-post-covs-plot,size='scriptsize',fig.height=5,out.width="75%",fig.align="center",echo=-1>>=
par(mai=c(0.9, 0.9, 0.1, 0.1))  
plot(1:nPrimary, N.post.mean, type="b", ylim=c(0, 70), pch=16,
     xlab="Time", ylab="Sites occupied")
segments(1:nPrimary, N.post.lower, 1:nPrimary, N.post.upper)
lines(1:nPrimary, colSums(z2), type="b", col=4)
legend(1, 70, c("Actual", "Estimated"), pch=c(1,16), col=c(4,1), lty=1)
@   
\end{frame}






\begin{frame}[fragile]
  \frametitle{Temperature and colonization}
  Extract posterior samples of colonization coefficients, and then
  predict $\gamma$ for each posterior draw.
<<beta-post,size='footnotesize'>>=
beta.post <- as.matrix(jags.post.samples.covs[,c(
    "beta0.gamma","beta1.gamma")])
temperature.seq <- seq(-5, 5, length=50)
n.samples <- nrow(beta.post)
gamma.post <- matrix(NA, n.samples, length(temperature.seq))
for(i in 1:n.samples) {
    gamma.post[i,] <- plogis(beta.post[i,1] +
                             beta.post[i,2]*temperature.seq)
}
gamma.post.mean <- colMeans(gamma.post)
gamma.post.lower <- apply(gamma.post, 2, quantile, prob=0.025)
gamma.post.upper <- apply(gamma.post, 2, quantile, prob=0.975)
@   
\end{frame}




\begin{frame}[fragile]
  \frametitle{Temperature and colonization}
<<gamma-post-covs-plot,size='scriptsize',fig.height=5,out.width="75%",fig.align="center",echo=-1>>=
par(mai=c(0.9, 0.9, 0.1, 0.1))  
matplot(temperature.seq, t(gamma.post[seq(1,n.samples,10),]), type="l",
        xlab="Temperature (standardized)", ylab="Colonization prob", col=gray(0.9))
lines(temperature.seq, gamma.post.mean, lwd=3, col="blue")
lines(temperature.seq, gamma.post.lower, col="blue")
lines(temperature.seq, gamma.post.upper, col="blue")
@   
\end{frame}







\begin{frame}
  \frametitle{Concluding thoughts}
  Although we didn't demonstrate, these models are great for creating
  dynamic species distribution maps. \\
  \pause
  \vfill
  The spatially-explicit versions are also great for modeling
  metapopulation dynamics and viability. \\
  \pause
  \vfill
  Most of the assumptions that we covered for the static models apply,
  except that we've relaxed the closure assumption.
\end{frame}






\end{document}

