\documentclass[color=usenames,dvipsnames]{beamer}
%\documentclass[color=usenames,dvipsnames,handout]{beamer}

\usepackage[roman]{../lectures}
%\usepackage[sans]{../lectures}


% Compile and open PDF
<<buildit,include=FALSE,eval=FALSE,purl=FALSE>>=
source("../rnw2pdf.R")
rnw2pdf("lecture-Jolly-Seber") 
rnw2pdf("lecture-Jolly-Seber", tangle=TRUE)
@ 


<<knitr-theme,include=FALSE,purl=FALSE>>=
knit_theme$set("edit-kwrite")
@


%% New command for inline code that isn't to be evaluated
\definecolor{inlinecolor}{rgb}{0.878, 0.918, 0.933}
\newcommand{\inr}[1]{\colorbox{inlinecolor}{\texttt{#1}}}


\begin{document}



\begin{frame}[plain]
  \centering
  \LARGE
  % Lecture 17 \\
  Spatio-temporal variation in %\\
  survival, \\ recruitment, movement and abundance %with the \\
%  Jolly-Seber model \\
  \vfill
  \large
  WILD(FISH) 8390 \\
%%  Estimation of Fish and Wildlife Population Parameters \\
  Inference for Models of Fish and Wildlife Population Dynamics \\
  \vfill
  Richard Chandler \\
  University of Georgia \\
\end{frame}




%\section{Intro}



\begin{frame}[plain]
  \frametitle{Topics}
  \Large
  \only<1>{\tableofcontents}%[hideallsubsections]}
%  \only<2 | handout:0>{\tableofcontents[currentsection]}%,hideallsubsections]}
\end{frame}




\section{Intro}






\begin{frame}
  \frametitle{Overview}
%  \large
  {Jolly-Seber model}
  \begin{itemize}
    \normalsize
    \item Extend CJS model to allow for recruitment
    \item We no longer ``condition on first capture''
    \item Typically, we use the robust design
  \end{itemize}
  \pause \vfill
  Bigger picture
  \begin{itemize}
    \normalsize
    \item<2-> We're interested in modeling population dynamics
    \item<3-> This framework allows for inference on \alert{all} of the
      key processes 
    \item<4-> Potential to model spatial, temporal, and individual-level
      variation vital rates
    \item<5-> Density-dependence and biotic interactions could be
      modeled too
  \end{itemize}
\end{frame}




% \begin{frame}
%   \frametitle{Spatial population dynamics}
%   \small
%   {Initial abundance at location $s$}
%   \[
%     N_{s,1} \sim \mbox{Poisson}(\lambda_{s,1})
%   \]
%   \pause \vfill
%   Survival and recruitment (local population dynamics)
%   \begin{gather*}
%     S_{s,t} \sim \mbox{Binomial}(N_{s,t-1}, \phi) \\
%     R_{s,t} \sim \mbox{Poisson}(N_{s,t-1} \gamma)
%   \end{gather*}
%   \pause \vfill
%   % {Recruitment}
%   % \[
%   %   R_{s,t} \sim \mbox{Poisson}(N_{s,t-1} \gamma)
%   % \]
%   % \pause \vfill
%   Movement (emigration and immigration)
%   \begin{gather*}
%     E_{s,t} \sim \mathrm{Binomial}(S_{s,t}+R_{s,t}, \kappa) \\
%     \{M_{1,s,t}, \dots, M_{J,s,t}\} \sim \mathrm{Multinomial}(E_{s,t}, \{\pi_1, \dots, \pi_J\}) \\
%     I_{s,t} = \sum_{j=1}^J M_{j,s,t}
%   \end{gather*}
%   % \vfill
%   % Immigration
%   % \[
%   % \]
%   % \vfill
%   \pause
%   {Abundance}
%   \[
%     N_{s,t} = S_{s,t} + R_{s,t} - E_{s,t} + I_{s,t}
%   \]
% \end{frame}



%% \begin{frame}
%%   \frametitle{Non-spatial CJS model}
%%   {\bf State model}
%%   \[
%%     z_{i,t} \sim \mbox{Bernoulli}(z_{i,t-1} \times \phi)
%%   \]
%%   \vfill
%%   {\bf Observation model}
%%   \[
%%     y_{i,t} \sim \mbox{Bernoulli}(z_{i,t} \times p)
%%   \]
%%   \pause
%%   \vfill
%%   \small
%%   where \\
%%   \begin{itemize}
%%     \item $z_{i,t}$ is ``alive state'' of individual $i$ at time $t$
%%     \item $\phi$ is ``apparent survival''. Probability of being alive and not permanently emigrating.
%%     \item $y_{i,t}=1$ if individual was encountered. $y_{i,t}=0$ otherwise.
%%   \end{itemize}
%% \end{frame}








% \section{Spatial JS}






% \begin{frame}
%   \frametitle{Spatial model}
%   \large
%   {Extensions}
%   \begin{itemize}
%     \item Individuals heterogeneity in vital rates
%     \item Spatial heterogeneity in vital rates
%     \item Density dependence
%     \item Dispersal
%   \end{itemize}
% \end{frame}




\begin{frame}
  \frametitle{\Large Individual-based spatial population dynamics}
  {Initial State}
  \begin{gather*}
    z_{i,1} \sim \mbox{Bernoulli}(\psi) \\
    {\bm s}_{i,1} \propto \lambda_1(\bs)
  \end{gather*}
  \vfill
  Survival and Recruitment
  \[
    z_{i,t} \sim
    \begin{cases}
      \mbox{Bernoulli}(z_{i,t-1}\phi) & \quad \text{if previously recruited} \\
      \mbox{Bernoulli}(\gamma'_t) & \quad \text{if not yet recruited} 
    \end{cases}
  \]
  \vfill
  Movement (Assuming random walk)
  \[
    \bsit %\sim %\mathrm{Norm}(\bsitp, \tau^2)  
    \begin{cases}
      \sim \mbox{Norm}(\bsitp, \tau^2) & \quad \text{if previously recruited} \\
      \propto \lambda_t(\bs) & \quad \text{if not yet recruited} 
    \end{cases}
  \]
  \vfill
  Abundance ($M$ is the upper bound of data augmentation)
  \[
    N_t = \sum_{i=1}^M z_{i,t}
  \]
\end{frame}





\begin{frame}[fragile]
  \frametitle{Simulating spatial JS data with robust design}
%  \scriptsize % \tiny %\small
  {Parameters and data dimensions}
<<sim-pars,size='scriptsize'>>=
T <- 10      # years/primary periods
K <- 3       # 3 secondary sampling occasion
lambda <- 25 # Expected value of abundance in year 1
M <- 500     # Easiest way to simulate data is using data augmentation
phi <- 0.7   # Apparent survival
gamma <- 0.3 # Per-capital recruitment rate
p0 <- 0.4    # Baseline capture prob
sigma <- 0.1 # Scale parameter of encounter rate function
@
\pause
{Traps, activity centers, and capture probability}
<<sim-p,size='scriptsize'>>=
set.seed(340)
co <- seq(0.25, 0.75, length=5)
x <- cbind(rep(co, each=5), rep(co, times=5))
J <- nrow(x)  ## nTraps
xlim <- ylim <- c(0,1)
## Activity centers, no dispersal
s <- cbind(runif(M, xlim[1], xlim[2]), runif(M, ylim[1], ylim[2]))
d <- p <- matrix(NA, M, J)
for(i in 1:M) {
    d[i,] <- sqrt((s[i,1]-x[,1])^2 + (s[i,2]-x[,2])^2)
    p[i,] <- p0*exp(-d[i,]^2/(2*sigma^2)) } # capture prob 
@
\end{frame}





\begin{frame}[fragile]
  \frametitle{Simulating spatial JS data with robust design}
{Generate $z$}
%\scriptsize
<<sim-SR,size='scriptsize'>>=
set.seed(034)
z <- recruitable <- died <- recruited <- matrix(0, M, T)
z[,1] <- rbinom(M, 1, lambda/M) # alive at t=1
recruitable[,1] <- 1-z[,1]
N <- integer(T)
N[1] <- sum(z[,1])
for(t in 2:T) {
    ER <- N[t-1]*gamma # expected number of recruits
    prevA <- sum(recruitable[,t-1]) # Number available to be recruited
    gammaPrime <- ER/prevA
    if(gammaPrime > 1) stop("M isn't big enough")
    z[,t] <- rbinom(M, 1, (1-recruitable[,t-1])*z[,t-1]*phi +
                          recruitable[,t-1]*gammaPrime)
    recruitable[,t] <- recruitable[,t-1]*(1-z[,t])
    N[t] <- sum(z[,t])  }
@
\pause
\vfill
{\normalsize Populaton size, mortalities, and recruits}
<<sim-N,size='scriptsize'>>=
died <- (z[,1:(T-1)]==1) & (z[,2:T]==0)
recruited <- (z[,1:(T-1)]==0) & (z[,2:T]==1)
Deaths <- colSums(died)
Recruits <- colSums(recruited)
everAlive <- sum(rowSums(z)>0)
@
\end{frame}




\begin{frame}[fragile]
  \frametitle{Visualize dynamics}
<<dynamics1,size='tiny',fig.height=5,fig.align='center',out.width='90%',echo=-1>>=
par(mai=c(0.9,0.9,0.1,0.1))
plot(1:T, N, type="b", xlab="Year", ylab="", ylim=c(0, 50), pch=16)
lines(2:T, Deaths, type="b", col="red2", pch=16); lines(2:T, Recruits, type="b", col="seagreen2", pch=16)
legend(1, 50, c("Abundance","Mortalities","Recruits"), lty=1, pch=16, col=c("black","red2","seagreen2"))
@   
\end{frame}






\begin{frame}[fragile]
  \frametitle{Simulating spatial JS data with robust design}
{Generate encounter histories for all $M$ individuals}
<<sim-yall,size='footnotesize'>>=
yall.bern <- array(NA, c(M, J, K, T))   ## For Bernoulli
yall <- array(NA, c(M, J, T))           ## For Binomial
for(i in 1:M) {
    for(t in 1:T) {
        for(j in 1:J) {
            yall.bern[i,j,1:K,t] <- rbinom(K, 1, z[i,t]*p[i,j])
            yall[i,j,t] <- rbinom(1, K, z[i,t]*p[i,j])
        }
    }
}
@
\pause
\vfill
{\normalsize Discard individuals that were never captured}
<<sim-y,size='footnotesize'>>=
y.bern <- yall.bern[rowSums(yall.bern)>0,,,]
y <- yall[rowSums(yall)>0,,]
str(y)
@
\end{frame}






% \begin{frame}[fragile]
%   \frametitle{Time series}
% %  \tiny
% <<NDR,size='tiny',out.width='60%',fig.align='center'>>=
% plot(1:T, N, ylim=c(0, 50), type="o", pch=16,
%      xlab="Year", ylab="")
% lines(2:T, Deaths[-1], col="red", type="o", pch=16)
% lines(2:T, Recruits[-1], col="blue", type="o", pch=16)
% legend(1, 50, c("Population size", "Deaths", "Recruits"),
%        col=c("black", "red", "blue"), pch=16, lty=1)
% @
% % \vspace{-3mm}
% % \begin{center}
% %   \includegraphics[width=0.8\textwidth]{Open-JS-NDR}
% % \end{center}
% \end{frame}




\section{Likelihood inference}



\begin{frame}[plain]
  \frametitle{Topics}
  \Large
  \tableofcontents[currentsection]
\end{frame}




\begin{frame}[fragile]
  \frametitle{Likelihood analysis of spatial JS model}
Begin by making a mask in `secr'
<<mask,size='scriptsize',out.width="60%",fig.align="center",results='hide',message=FALSE>>=
library(openpopscr)
trap.df <- data.frame(x*1000); colnames(trap.df) <- c("x","y")
traps <- read.traps(data=trap.df, detector="proximity")
mask <- make.mask(traps=traps, buffer=250)
plot(mask); points(traps, pch=3, col="blue", lwd=2)
@   
\end{frame}


\begin{frame}[fragile]
  \frametitle{Likelihood analysis of spatial JS model}
Format for `secr' (with robust design)
<<JS-model-new,size='scriptsize'>>=
y.secr <- y.bern
year <- rep(slice.index(y.bern, 4), y.secr)  ## Primary period
day <- rep(slice.index(y.bern, 3), y.secr)   ## Secondary period 
caps <- data.frame(session=1,
                   animal=rep(slice.index(y.bern, 1), y.secr),
                   occasion=(year-1)*K+day,
                   trap=rep(slice.index(y.bern, 2), y.secr))
capthist <- make.capthist(captures=caps, traps=traps, noccasions=T*K)
@
\vfill
Then format for `openpopscr'
<<format-openpop,size='scriptsize'>>=
js.data <- ScrData$new(capthist, mask, primary=rep(1:T, each=K))
@ 
\end{frame}


\begin{frame}[fragile]
  \frametitle{Likelihood analysis}
Create the model object and then fit it
<<js-mod-fit,size='scriptsize',results='hide',cache=TRUE,eval=TRUE,warning=FALSE,message=FALSE>>=
start <- get_start_values(js.data, model = "JsModel")
mod <- JsModel$new(list(lambda0~1, sigma~1, D~1, phi~1, beta~1), js.data,
                   start=start)
mod$fit()
@   
Back-transform
<<js-mod-est,size='tiny',eval=TRUE>>=
mod$get_par("lambda0", k = 1, j = 1) ## Baseline capture probability
mod$get_par("sigma", k = 1, j = 1)   ## Scale parameter of the detection function
mod$get_par("D")                     ## Superpopulation density
mod$get_par("beta", k = 1, m=1)      ## Proportion of superpop alive in year 1
mod$get_par("phi", k = 1, m=1)       ## Survival
@ 
\end{frame}



\begin{frame}[fragile]
  \frametitle{Density estimates}
<<js-density,size='small'>>=
mod$estimates()$D
@   
\end{frame}



\section{Bayesian inference}




\begin{frame}[plain]
  \frametitle{Topics}
  \Large
  \tableofcontents[currentsection]
\end{frame}



\begin{frame}[fragile]
  \frametitle{Spatial JS model in \jags}
%  \vspace{-3mm}
%  \tiny \fbox{\parbox{\linewidth}{\verbatiminput{JS-spatial.jag}}}
%  \tiny {\parbox{\linewidth}{\pagecolor{ProcessBlue}\verbatiminput{JS-spatial.jag}}}
  \tiny
<<jagsmod1,size='tiny',comment='',echo=FALSE,background='lightblue'>>=
writeLines(readLines("JS-spatial.jag"))
@ 
\end{frame}



<<load-jagsUI-coda,include=FALSE>>=
library(jagsUI)
library(coda)
@ 


\begin{frame}[fragile]
  \frametitle{Bayesian analysis}
%  \footnotesize
  {Data augmentation}
<<sim-aug,size='scriptsize'>>=
M <- nrow(y) + 50   ## Trial and error
yz <- array(0, c(M, J, T))
yz[1:nrow(y),,] <- y
jags.data1 <- list(y=yz, M=M, x=x, J=J, K=K, T=T, xlim=xlim, ylim=ylim)
@
\pause
\vfill
  {\normalsize Initial values and parameters to monitor}
<<zi,size='scriptsize'>>=
zi <- matrix(0, M, T)
zi[1:nrow(y),] <- 1
ji1 <- function() list(phi=0.01, gamma=0.001, z=zi)
jp1 <- c("phi", "gamma", "p0", "sigma", "N", "Deaths", "Recruits", "Ntot")
@
\pause
\vfill
  {\normalsize Fit the model}
<<jags-run,size='scriptsize',results='hide',cache=TRUE>>=
library(jagsUI)
jags.post.samples1 <- jags.basic(data=jags.data1, inits=ji1,
                                 parameters.to.save=jp1,
                                 model.file="JS-spatial.jag",
                                 n.chains=3, n.adapt=100, n.burnin=0,
                                 n.iter=2000, parallel=TRUE)
@
\end{frame}




\begin{frame}[fragile]
  \frametitle{Is $M$ high enough?}
<<Ntot,size='tiny',out.width='70%',fig.align='center'>>=
hist(as.matrix(jags.post.samples1[,"Ntot"]), xlab="Total population size",
     ylab="", main="", freq=FALSE, xlim=c(nrow(y), M))
abline(v=M, lwd=3, col="blue")
@
\end{frame}






\begin{frame}[fragile]
  \frametitle{Posterior distributions}
<<jc1,out.width='60%',fig.align='center',size='scriptsize'>>=
plot(jags.post.samples1[,c("phi", "gamma", "p0", "sigma")])
@
% \begin{center}
%   \fbox{\includegraphics[width=0.7\textwidth]{Open-JS-jc1}}
% \end{center}
\end{frame}






\begin{frame}[fragile]
  \frametitle{Posterior distributions}
<<jcN1-4,include=FALSE,echo=FALSE>>=
plot(jags.post.samples1[,c("N[1]", "N[2]", "N[3]", "N[4]")])
@
<<jcN5-8,include=FALSE,echo=FALSE>>=
plot(jags.post.samples1[,c("N[5]", "N[6]", "N[7]", "N[8]")])
@
\begin{center}
  \fbox{\includegraphics[width=0.45\textwidth]{figure/jcN1-4-1}}
  \fbox{\includegraphics[width=0.45\textwidth]{figure/jcN5-8-1}}
\end{center}
\end{frame}





\begin{frame}[fragile]
  \frametitle{Actual and estimated abundance}
  Extract and summarize posterior samples of $N_t$
<<N-post-samples,size='scriptsize'>>=
Npost <- as.matrix(jags.post.samples1[,paste("N[", 1:10, "]", sep="")])
Nmed <- apply(Npost, 2, median)
Nupper <- apply(Npost, 2, quantile, prob=0.975)
Nlower <- apply(Npost, 2, quantile, prob=0.025)
@
  \pause
  \vfill
  Plot
<<Npost,size='scriptsize',fig.height=5,fig.show='hide',echo=-1>>=
par(mai=c(0.9,0.9,0.1,0.1))  
plot(1:T, N, type="b", ylim=c(0, 60), xlab="Time",
     ylab="Abundance", pch=16)
arrows(1:T, Nlower, 1:T, Nupper, angle=90, code=3,
       length=0.05, col=gray(0.7))
points(1:T, Nmed, pch=16, col=gray(0.7))
legend(1, 60, c("Actual", "Estimated"),
       col=c("black", gray(0.7)), lty=c(NA,1), pch=c(16,16))
@
\end{frame}





\begin{frame}
  \frametitle{Actual and estimated abundance}
%  \vspace{-4mm}
  \begin{center}
    \includegraphics[width=\textwidth]{figure/Npost-1}
  \end{center}
\end{frame}






\begin{frame}[fragile]
  \frametitle{Actual and estimated recruits}
  Extract and summarize posterior samples of $R_t$
<<R-post-samples,size='scriptsize'>>=
Rpost <- as.matrix(jags.post.samples1[,paste("Recruits[",1:9,"]",sep="")])
Rmed <- apply(Rpost, 2, median)
Rupper <- apply(Rpost, 2, quantile, prob=0.975)
Rlower <- apply(Rpost, 2, quantile, prob=0.025)
@
  \pause
  \vfill
  Plot
<<Rpost,size='scriptsize',fig.height=5,fig.show='hide',echo=-1>>=
par(mai=c(0.9,0.9,0.1,0.1))  
plot(1:(T-1), Recruits, type="b", ylim=c(0, 30), xlab="Time",
     ylab="Recruits", pch=16, col="seagreen2")
arrows(1:(T-1), Rlower, 1:(T-1), Rupper, angle=90, code=3,
       length=0.05, col=gray(0.7))
points(1:(T-1), Rmed, pch=16, col=gray(0.7))
legend(1, 30, c("Actual", "Estimated"),
       col=c("seagreen2", gray(0.7)), lty=c(NA,1), pch=c(16,16))
@
\end{frame}





\begin{frame}
  \frametitle{Actual and estimated recruits}
%  \vspace{-4mm}
  \begin{center}
    \includegraphics[width=\textwidth]{figure/Rpost-1}
  \end{center}
\end{frame}




\begin{frame}[fragile]
  \frametitle{Actual and estimated mortalities}
  Extract and summarize posterior samples of $D_t=N_t-S_t$
<<D-post-samples,size='scriptsize'>>=
Dpost <- as.matrix(jags.post.samples1[,paste("Deaths[", 1:9, "]", sep="")])
Dmed <- apply(Dpost, 2, median)
Dupper <- apply(Dpost, 2, quantile, prob=0.975)
Dlower <- apply(Dpost, 2, quantile, prob=0.025)
@
  \pause
  \vfill
  Plot
<<Dpost,size='scriptsize',fig.height=5,fig.show='hide',echo=-1>>=
par(mai=c(0.9,0.9,0.1,0.1))  
plot(1:(T-1), Deaths, type="b", ylim=c(0, 30), xlab="Time",
     ylab="Mortalities", pch=16, col="red2")
arrows(1:(T-1), Dlower, 1:(T-1), Dupper, angle=90, code=3,
       length=0.05, col=gray(0.7))
points(1:(T-1), Dmed, pch=16, col=gray(0.7))
legend(1, 30, c("Actual", "Estimated"),
       col=c("red2", gray(0.7)), lty=c(NA,1), pch=c(16,16))
@
\end{frame}





\begin{frame}
  \frametitle{Actual and estimated mortalities}
%  \vspace{-4mm}
  \begin{center}
    \includegraphics[width=\textwidth]{figure/Dpost-1}
  \end{center}
\end{frame}








\begin{frame}
  \frametitle{Summary}
  This is perhaps the most general approach to modeling population
  dynamics, especially when the model includes a movement process. \\
  \pause \vfill
  Requires a lot of data on marked individuals, but it should be no
  surprise that we need a lot of data to understand complex
  processes. \\ 
  \pause \vfill
  Integrated population models can be used to draw inferences using
  this model and a combination of data on marked and unmarked
  individuals. \\ 
\end{frame}




\end{document}





% \section{Spatial JS with density-dependence}







% \begin{frame}
%   \frametitle{Density-dependent recruitment}
%   \large
%   {Logistic}
%   \[
%      \gamma_t = \gamma_{max}(1 - N_{t-1}/K)
%   \]
%   \vfill
%   {Log-linear}
%   \[
%      \gamma_t = \nu_0\exp(-\nu_1 N_{t-1})
%   \]
%   \vfill
%   {Log-linear (alt version)}
%   \[
%     \log(\gamma_t) = \nu_0 + \nu_1 N_{t-1}
%   \]
% \end{frame}






% \begin{frame}[fragile]
%   \frametitle{Density-dependent recruitment}
%   \tiny
% <<dd1,fig.height=5,out.width='90%',fig.align='center'>>=
% N <- 0:50
% nu0 <- 2
% nu1 <- 0.05
% plot(N, nu0*exp(-nu1*N), type="l", ylim=c(0,2), ylab="Per-capita Recruitment")
% @
% %\vspace{-4mm}
% %\begin{center}
% %  \includegraphics[width=\textwidth]{figure/dd1-1}
% %\end{center}
% \end{frame}




% \begin{frame}[fragile]
%   \frametitle{Simulating spatial JS data with robust design}
%   \scriptsize % \tiny %\small
%   {Parameters and data dimensions}
% <<sim-pars-robust>>=
% T <- 10      # years/primary periods
% K <- 3       # 3 secondary sampling occasion
% ## Is it necessary to be far from equilibrium to detect density-dependence?
% ## Equilibrium here is where (1-phi) == gamma, where gamma is function of N
% N0 <- 10     # Abundance in year 1
% M <- 500     # Easiest way to simulate data is using data augmentation
% phi <- 0.7   # Apparent survival
% ##gamma <- 0.3 # Per-capital recruitment rate
% nu0 <- 2
% nu1 <- 0.05
% p0 <- 0.4
% sigma <- 0.1
% @
% \pause
% {Traps, activity centers, and detection probability}
% <<sim-p-robust>>=
% set.seed(3479)
% co <- seq(0.25, 0.75, length=5)
% x <- cbind(rep(co, each=5), rep(co, times=5))
% J <- nrow(x)
% xlim <- ylim <- c(0,1)
% s <- cbind(runif(M, xlim[1], xlim[2]), runif(M, ylim[1], ylim[2]))
% d <- p <- matrix(NA, M, J)
% for(i in 1:M) {
%     d[i,] <- sqrt((s[i,1]-x[,1])^2 + (s[i,2]-x[,2])^2)
%     p[i,] <- p0*exp(-d[i,]^2/(2*sigma^2))
% }
% @
% \end{frame}





% \begin{frame}[fragile]
%   \frametitle{Simulating spatial JS data with robust design}
% {Generate $z$}
% \scriptsize
% <<sim-RS-robust>>=
% set.seed(3401)
% z2 <- recruitable <- died <- recruited <- matrix(0, M, T)
% z2[1:N0,1] <- 1 # First N0 are alive
% recruitable[(N0+1):M,1] <- 1
% for(t in 2:T) {
%     prevN <- sum(z2[,t-1]) # number alive at t-1
%     gamma <- nu0*exp(-nu1*prevN) ## Density dependent recruitment rate
%     ER <- prevN*gamma # expected number of recruits
%     prevA <- sum(recruitable[,t-1]) # Number available to be recruited
%     gammaPrime <- ER/prevA
%     if(gammaPrime > 1)
%         stop("M isn't big enough")
%     for(i in 1:M) {
%         z2[i,t] <- rbinom(1, 1, z2[i,t-1]*phi + recruitable[i,t-1]*gammaPrime)
%         recruitable[i,t] <- 1 - max(z2[i,1:(t)]) # to be recruited
%         died[i,t] <- z2[i,t-1]==1 & z2[i,t]==0
%         recruited[i,t] <- z2[i,t]==1 & z2[i,t-1]==0
%     }
% }
% @
% \pause
% \vfill
% {\normalsize Populaton size, mortalities, and recruits}
% <<sim-N-robust>>=
% N2 <- colSums(z2) # Population size
% Deaths2 <- colSums(died)
% Recruits2 <- colSums(recruited)
% everAlive2 <- sum(rowSums(z2)>0)
% @
% \end{frame}









% \begin{frame}[fragile]
%   \frametitle{Simulating spatial JS data with robust design}
% {Generate encounter histories for all $M$ individuals}
% \footnotesize
% <<sim-yall-robust>>=
% yall <- array(NA, c(M, J, K, T))
% for(i in 1:M) {
%     for(t in 1:T) {
%         for(j in 1:J) {
%             yall[i,j,1:K,t] <- rbinom(K, 1, z2[i,t]*p[i,j])
%         }
%     }
% }
% @
% \pause
% \vfill
% {\normalsize Discard individuals that were never captured}
% <<sim-y-robust>>=
% detected <- rowSums(yall) > 0
% y2 <- yall[detected,,,]
% str(y2)
% @
% \end{frame}






% \begin{frame}[fragile]
%   \frametitle{Time series}
%   \tiny
% <<NDR-DD,include=FALSE,echo=FALSE,fig.width=8,fig.height=6>>=
% plot(1:T, N2, ylim=c(0, 50), type="o", pch=16,
%      xlab="Year", ylab="")
% lines(2:T, Deaths2[-1], col="red", type="o", pch=16)
% lines(2:T, Recruits2[-1], col="blue", type="o", pch=16)
% legend(1, 50, c("Population size", "Deaths", "Recruits"),
%        col=c("black", "red", "blue"), pch=16, lty=1)
% @
% \vspace{-3mm}
% \begin{center}
%   \includegraphics[width=\textwidth]{figure/NDR-DD-1}
% \end{center}
% \end{frame}



% \begin{frame}[fragile]
%   \frametitle{Spatial CJS model in \jags}
%   \vspace{-5mm}
%   \tiny \fbox{\parbox{\linewidth}{\verbatiminput{JS-spatial-DD.jag}}}
% \end{frame}





% \begin{frame}[fragile]
%   \frametitle{\jags}
% %  \footnotesize
%   {Data augmentation}
%   \scriptsize
% <<aug-robust>>=
% M2 <- nrow(y2) + 75
% yz2 <- array(0, c(M2, J, K, T))
% yz2[1:nrow(y2),,,] <- y2
% @
% \pause
% \vfill
%   {\normalsize Initial values for $z$ matrix}
% <<zi-robust>>=
% zi <- matrix(0, M2, T)
% ##zi[1:nrow(y2),] <- 1
% zi[1:nrow(y2),] <- z2[detected,] ## cheating
% ji2 <- function() list(phi=0.01, z=zi)
% @
% \pause
% \vfill
%   {\normalsize Fit the model}
% <<jags-run-robust,results='hide',cache=TRUE>>=
% jd2 <- list(y=yz2, M=M2, x=x,
%             J=J, K=K, T=T, xlim=xlim, ylim=ylim)
% jp2 <- c("phi", "nu0", "nu1", "p0", "sigma", "N", "Deaths", "Recruits", "Ntot")
% library(rjags)
% jm2 <- jags.model("JS-spatial-DD.jag", jd2, ji2, n.chains=1, n.adapt=2)
% jc2 <- coda.samples(jm2, jp2, 5)
% ##jc2.2 <- coda.samples(jm2, jp2, 15000)
% @
% \end{frame}




% \begin{frame}[fragile]
%   \frametitle{Posterior distributions}
% <<jc2,include=FALSE,echo=FALSE>>=
% plot(jc2[,c("phi", "nu0", "nu1")])
% @
% \begin{center}
%   \fbox{\includegraphics[width=0.7\textwidth]{figure/jc2-1}}
% \end{center}
% \end{frame}










% \begin{frame}[fragile]
%   \frametitle{Actual and estimated abundance}
%   {Extract and summarize posterior samples of $N_t$}
%   \footnotesize
% <<N-post-samples>>=
% Npost <- as.matrix(jc2[,paste("N[", 1:10, "]", sep="")])
% Nmed <- apply(Npost, 2, median)
% Nupper <- apply(Npost, 2, quantile, prob=0.975)
% Nlower <- apply(Npost, 2, quantile, prob=0.025)
% @
%   \pause
%   \vfill
%   {\normalsize Plot}
% <<Npost,include=FALSE>>=
% plot(1:T, N2, type="o", col="blue", ylim=c(0, 100), xlab="Time",
%      ylab="Abundance")
% points(1:T, Nmed)
% arrows(1:T, Nlower, 1:T, Nupper, angle=90, code=3, length=0.05)
% legend(1, 100, c("Actual abundance", "Estimated abundance"),
%        col=c("blue", "black"), lty=c(1,1), pch=c(1,1))
% @
% \end{frame}





% \begin{frame}
%   \frametitle{Actual and estimated abundance}
%   \vspace{-4mm}
%   \begin{center}
%     \includegraphics[width=0.8\textwidth]{figure/Npost-1}
%   \end{center}
% \end{frame}










\begin{frame}
  \frametitle{Summary}
  \large
  {Key points}
  \begin{itemize}[<+->]
    \item Spatial Jolly-Seber models make it possible to fit
      spatio-temporal models of population dynamics to standard data
    \item We could have movement just like we did with CJS models
    \item Lots of tricks for speeding up MCMC
    \begin{itemize}
      \item Replace \inr{ER[t] <- N[t]*gamma} with \inr{ER[t] <- EN[t]*gamma} where \inr{EN} is the expected value of $N$.
      \item Repalce \inr{recruitable[i,t-1]*gammaPrime[t-1]} with \inr{Erecruitable[i,t-1]*gammaPrime[t-1]}, which again is expected value rather than the realized value
      \item These tricks result in approximations, but they should be very close to desired inferences. 
    \end{itemize}
  \end{itemize}
\end{frame}



% \begin{frame}
%   \frametitle{Assignment}
%   {\large For next week}
%   \begin{enumerate}[\bf (1)]
%     \item Work on analysis of your own data and your final paper, which should include:
%       \begin{itemize}
%         \item Introduction
%         \item Methods (including model description)
%         \item Results
%         \item Discussion
%       \end{itemize}
%     \item Paper should be a minimum of 4 pages, single-spaced, 12-pt font
%   \end{enumerate}
% \end{frame}






\end{document}








