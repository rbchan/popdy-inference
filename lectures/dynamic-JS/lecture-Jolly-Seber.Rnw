\documentclass[color=usenames,dvipsnames]{beamer}
%\documentclass[color=usenames,dvipsnames,handout]{beamer}

%\usepackage[roman]{../../../pres1}
\usepackage[sans]{../../../pres1}



% Compile and open PDF
<<buildit,include=FALSE,eval=FALSE,purl=FALSE>>=
source("../rnw2pdf.R")
rnw2pdf("lecture-Jolly-Seber") 
rnw2pdf("lecture-Jolly-Seber", tangle=TRUE)
@ 


<<knitr-theme,include=FALSE,purl=FALSE>>=
knit_theme$set("edit-kwrite")
@


%% New command for inline code that isn't to be evaluated
\definecolor{inlinecolor}{rgb}{0.878, 0.918, 0.933}
\newcommand{\inr}[1]{\colorbox{inlinecolor}{\texttt{#1}}}


\newcommand{\bxt}{${\bm x}_j$}
\newcommand{\bx}{{\bm x}}
\newcommand{\bxj}{{\bm x}_j}
\newcommand{\bst}{${\bm s}_i$}
\newcommand{\bs}{{\bm s}}
\newcommand{\bsi}{{\bm s}_i}
\newcommand{\ed}{\|\bx - \bs\|}
\newcommand{\cs}{\mathcal{S} }


\begin{document}




\begin{frame}[plain]
  \begin{center}
    \LARGE {\bf \color{RoyalBlue}{Spatial Jolly-Seber Model}} \par
    \vspace{0.8cm}
%    \color{Gray}{
%    \Large {Spatial Capture-Recapture Workshop} \\ % \par
%    \large Athens, GA -- March 2015 \\
    \large WILD 8300 -- Spatial Capture-Recapture \par
    \vspace{0.2cm}
    March 30, 2016
%  \includegraphics[width=0.3\textwidth]{figs/scrbook} \\
%    }
  \end{center}
\end{frame}




%\section{Intro}



\begin{frame}[plain]
  \frametitle{Topics}
  \Large
  \only<1>{\tableofcontents}%[hideallsubsections]}
%  \only<2 | handout:0>{\tableofcontents[currentsection]}%,hideallsubsections]}
\end{frame}




\section{Intro}









\begin{frame}
  \frametitle{Overview}
  \large
  {\bf Jolly-Seber model}
  \begin{itemize}
    \item Extends CJS model to allow for recruitment
    \item We no longer ``condition on first capture''
    \item Typically, we use the robust design
  \end{itemize}
\end{frame}




\begin{frame}
  \frametitle{Stochastic population dynamics without dispersal}
  {\bf Initial Abundance}
  \[
    N_1 \sim \mbox{Poisson}(\lambda)
  \]
  \vfill
  {\bf Survival}
  \[
    S_t \sim \mbox{Binomial}(N_{t-1}, \phi)
  \]
  \vfill
  {\bf Recruitment}
  \[
    R_t \sim \mbox{Poisson}(N_{t-1} \gamma)
  \]
  \vfill
  {\bf Abundance}
  \[
    N_t = S_t + R_t
  \]
\end{frame}





%% \section{Non-spatial CJS}






%% \begin{frame}
%%   \frametitle{Non-spatial CJS model}
%%   {\bf State model}
%%   \[
%%     z_{i,t} \sim \mbox{Bernoulli}(z_{i,t-1} \times \phi)
%%   \]
%%   \vfill
%%   {\bf Observation model}
%%   \[
%%     y_{i,t} \sim \mbox{Bernoulli}(z_{i,t} \times p)
%%   \]
%%   \pause
%%   \vfill
%%   \small
%%   where \\
%%   \begin{itemize}
%%     \item $z_{i,t}$ is ``alive state'' of individual $i$ at time $t$
%%     \item $\phi$ is ``apparent survival''. Probability of being alive and not permanently emigrating.
%%     \item $y_{i,t}=1$ if individual was encountered. $y_{i,t}=0$ otherwise.
%%   \end{itemize}
%% \end{frame}








\section{Spatial JS}






\begin{frame}
  \frametitle{Spatial model}
  \large
  {\bf Extensions}
  \begin{itemize}
    \item Individuals heterogeneity in vital rates
    \item Spatial heterogeneity in vital rates
    \item Density dependence
    \item Dispersal
  \end{itemize}
\end{frame}




\begin{frame}
  \frametitle{Spatial Model using Data Augmentation}
  {\bf Initial State}
  \[
    z_{i,1} \sim \mbox{Bernoulli}(\psi)
  \]
  \vfill
  {\bf Survival and Recruitment}
  \[
    z_{i,t} \sim \mbox{Bernoulli}(z_{i,t-1}\phi + \mbox{recruitable}_{i,t-1}\gamma')
  \]
  \vfill
  {\bf Abundance}
  \[
    N_t = \sum_{i=1}^M z_{i,t}
  \]
  \pause
  \vfill
  {\centering \bf Dispersal could be added using approaches discussed last week \par}
\end{frame}





\begin{frame}[fragile]
  \frametitle{Simulating spatial JS data with robust design}
  \scriptsize % \tiny %\small
  {\bf Parameters and data dimensions}
<<sim-pars>>=
T <- 10      # years/primary periods
K <- 3       # 3 secondary sampling occasion
N0 <- 25     # Abundance in year 1
M <- 500     # Easiest way to simulate data is using data augmentation
phi <- 0.7   # Apparent survival
gamma <- 0.3 # Per-capital recruitment rate
p0 <- 0.4
sigma <- 0.1
@
\pause
{\bf Traps, activity centers, and detection probability}
<<sim-p>>=
set.seed(340)
co <- seq(0.25, 0.75, length=5)
X <- cbind(rep(co, each=5), rep(co, times=5))
J <- nrow(X)
xlim <- ylim <- c(0,1)
s <- cbind(runif(M, xlim[1], xlim[2]), runif(M, ylim[1], ylim[2]))
d <- p <- matrix(NA, M, J)
for(i in 1:M) {
    d[i,] <- sqrt((s[i,1]-X[,1])^2 + (s[i,2]-X[,2])^2)
    p[i,] <- p0*exp(-d[i,]^2/(2*sigma^2))
}
@
\end{frame}





\begin{frame}[fragile]
  \frametitle{Simulating spatial JS data with robust design}
{\bf Generate $z$}
\scriptsize
<<sim-SR>>=
set.seed(034)
z <- recruitable <- died <- recruited <- matrix(0, M, T)
z[1:N0,1] <- 1 # First N0 are alive
recruitable[(N0+1):M,1] <- 1
for(t in 2:T) {
    prevN <- sum(z[,t-1]) # number alive at t-1
    ER <- prevN*gamma # expected number of recruits
    prevA <- sum(recruitable[,t-1]) # Number available to be recruited
    gammaPrime <- ER/prevA
    if(gammaPrime > 1)
        stop("M isn't big enough")
    for(i in 1:M) {
        z[i,t] <- rbinom(1, 1, z[i,t-1]*phi + recruitable[i,t-1]*gammaPrime)
        recruitable[i,t] <- 1 - max(z[i,1:(t)]) # to be recruited
        died[i,t] <- z[i,t-1]==1 & z[i,t]==0
        recruited[i,t] <- z[i,t]==1 & z[i,t-1]==0
    }
}
@
\pause
\vfill
{\bf \normalsize Populaton size, mortalities, and recruits}
<<sim-N>>=
N <- colSums(z) # Population size
Deaths <- colSums(died)
Recruits <- colSums(recruited)
everAlive <- sum(rowSums(z)>0)
@
\end{frame}









\begin{frame}[fragile]
  \frametitle{Simulating spatial JS data with robust design}
{\bf Generate encounter histories for all $M$ individuals}
\footnotesize
<<sim-yall>>=
yall <- array(NA, c(M, J, K, T))
for(i in 1:M) {
    for(t in 1:T) {
        for(j in 1:J) {
            yall[i,j,1:K,t] <- rbinom(K, 1, z[i,t]*p[i,j])
        }
    }
}
@
\pause
\vfill
{\bf \normalsize Discard individuals that were never captured}
<<sim-y>>=
detected <- rowSums(yall) > 0
y <- yall[detected,,,]
str(y)
@
\end{frame}






\begin{frame}[fragile]
  \frametitle{Time series}
  \tiny
<<NDR,include=FALSE,echo=FALSE>>=
plot(1:T, N, ylim=c(0, 50), type="o", pch=16,
     xlab="Year", ylab="")
lines(2:T, Deaths[-1], col="red", type="o", pch=16)
lines(2:T, Recruits[-1], col="blue", type="o", pch=16)
legend(1, 50, c("Population size", "Deaths", "Recruits"),
       col=c("black", "red", "blue"), pch=16, lty=1)
@
\vspace{-3mm}
\begin{center}
  \includegraphics[width=0.8\textwidth]{Open-JS-NDR}
\end{center}
\end{frame}



\begin{frame}[fragile]
  \frametitle{Spatial CJS model in \jags}
  \vspace{-5mm}
  \tiny \fbox{\parbox{\linewidth}{\verbatiminput{JS-spatial.jag}}}
\end{frame}





\begin{frame}[fragile]
  \frametitle{\jags}
%  \footnotesize
  {\bf Data augmentation}
  \scriptsize
<<sim-aug>>=
M <- nrow(y) + 50
yz <- array(0, c(M, J, K, T))
yz[1:nrow(y),,,] <- y
@
\pause
\vfill
  {\bf \normalsize Initial values for $z$ matrix}
<<zi>>=
zi <- matrix(0, M, T)
zi[1:nrow(y),] <- 1
ji1 <- function() list(phi=0.01, gamma=0.01, z=zi)
@
\pause
\vfill
  {\bf \normalsize Fit the model}
<<jags-run,eval=FALSE,results='hide'>>=
jd1 <- list(y=yz, M=M, X=X,
            J=J, K=K, T=T, xlim=xlim, ylim=ylim)
jp1 <- c("phi", "gamma", "p0", "sigma", "N", "Deaths", "Recruits", "Ntot")
library(rjags)
jm1 <- jags.model("JS-spatial.jag", jd1, ji1, n.chains=1, n.adapt=500)
jc1 <- coda.samples(jm1, jp1, 1000)
@
\end{frame}




\begin{frame}
  \frametitle{Is $M$ big enough?}
<<Ntot,include=TRUE,echo=FALSE>>=
hist(as.matrix(jc1[,"Ntot"]), xlab="Total population size", ylab="", main="", freq=FALSE, xlim=c(nrow(y), M))
abline(v=M, lwd=3, col="blue")
@
\end{frame}






\begin{frame}[fragile]
  \frametitle{Posterior distributions}
<<jc1,include=FALSE,echo=FALSE>>=
plot(jc1[,c("phi", "gamma", "p0", "sigma")])
@
\begin{center}
  \fbox{\includegraphics[width=0.7\textwidth]{Open-JS-jc1}}
\end{center}
\end{frame}






\begin{frame}[fragile]
  \frametitle{Posterior distributions}
<<jcN1-4,include=FALSE,echo=FALSE>>=
plot(jc1[,c("N[1]", "N[2]", "N[3]", "N[4]")])
@
<<jcN5-8,include=FALSE,echo=FALSE>>=
plot(jc1[,c("N[5]", "N[6]", "N[7]", "N[8]")])
@
\begin{center}
  \fbox{\includegraphics[width=0.45\textwidth]{Open-JS-jcN1-4}}
  \fbox{\includegraphics[width=0.45\textwidth]{Open-JS-jcN5-8}}
\end{center}
\end{frame}
















\section{Spatial JS with density-dependence}









\begin{frame}
  \frametitle{Density-dependent recruitment}
  \large
  {\bf Logistic}
  \[
     \gamma_t = \gamma_{max}(1 - N_{t-1}/K)
  \]
  \vfill
  {\bf Log-linear}
  \[
     \gamma_t = \nu_0\exp(-\nu_1 N_{t-1})
  \]
  \vfill
  {\bf Log-linear (alt version)}
  \[
    \log(\gamma_t) = \nu_0 + \nu_1 N_{t-1}
  \]
%<<>>=
%gompertz <- function(N, a, b, c) {
%    x <- numeric(length(N))
%    for(i in N) {
%        x[i] <- a*exp(-b*exp(-c*i))
%    }
%    return(x)
%}
%gompertz(1:10, a=1, b=1, c=1)
%##plot(gompertz(1:10, a=2, b=1, c=.11))
%@
\end{frame}






\begin{frame}[fragile]
  \frametitle{Density-dependent recruitment}
  \tiny
<<dd1,include=FALSE,fig.width=8,fig.height=6,echo=FALSE>>=
N <- 0:50
nu0 <- 2
nu1 <- 0.05
plot(N, nu0*exp(-nu1*N), type="l", ylim=c(0,2), ylab="Per-capita Recruitment")
@
\vspace{-4mm}
\begin{center}
  \includegraphics[width=\textwidth]{Open-JS-dd1}
\end{center}
\end{frame}
















\begin{frame}[fragile]
  \frametitle{Simulating spatial JS data with robust design}
  \scriptsize % \tiny %\small
  {\bf Parameters and data dimensions}
<<sim-pars-robust>>=
T <- 10      # years/primary periods
K <- 3       # 3 secondary sampling occasion
## Is it necessary to be far from equilibrium to detect density-dependence?
## Equilibrium here is where (1-phi) == gamma, where gamma is function of N
N0 <- 10     # Abundance in year 1
M <- 500     # Easiest way to simulate data is using data augmentation
phi <- 0.7   # Apparent survival
##gamma <- 0.3 # Per-capital recruitment rate
nu0 <- 2
nu1 <- 0.05
p0 <- 0.4
sigma <- 0.1
@
\pause
{\bf Traps, activity centers, and detection probability}
<<sim-p-robust>>=
set.seed(3479)
co <- seq(0.25, 0.75, length=5)
X <- cbind(rep(co, each=5), rep(co, times=5))
J <- nrow(X)
xlim <- ylim <- c(0,1)
s <- cbind(runif(M, xlim[1], xlim[2]), runif(M, ylim[1], ylim[2]))
d <- p <- matrix(NA, M, J)
for(i in 1:M) {
    d[i,] <- sqrt((s[i,1]-X[,1])^2 + (s[i,2]-X[,2])^2)
    p[i,] <- p0*exp(-d[i,]^2/(2*sigma^2))
}
@
\end{frame}





\begin{frame}[fragile]
  \frametitle{Simulating spatial JS data with robust design}
{\bf Generate $z$}
\scriptsize
<<sim-RS-robust>>=
set.seed(3401)
z2 <- recruitable <- died <- recruited <- matrix(0, M, T)
z2[1:N0,1] <- 1 # First N0 are alive
recruitable[(N0+1):M,1] <- 1
for(t in 2:T) {
    prevN <- sum(z2[,t-1]) # number alive at t-1
    gamma <- nu0*exp(-nu1*prevN) ## Density dependent recruitment rate
    ER <- prevN*gamma # expected number of recruits
    prevA <- sum(recruitable[,t-1]) # Number available to be recruited
    gammaPrime <- ER/prevA
    if(gammaPrime > 1)
        stop("M isn't big enough")
    for(i in 1:M) {
        z2[i,t] <- rbinom(1, 1, z2[i,t-1]*phi + recruitable[i,t-1]*gammaPrime)
        recruitable[i,t] <- 1 - max(z2[i,1:(t)]) # to be recruited
        died[i,t] <- z2[i,t-1]==1 & z2[i,t]==0
        recruited[i,t] <- z2[i,t]==1 & z2[i,t-1]==0
    }
}
@
\pause
\vfill
{\bf \normalsize Populaton size, mortalities, and recruits}
<<sim-N-robust>>=
N2 <- colSums(z2) # Population size
Deaths2 <- colSums(died)
Recruits2 <- colSums(recruited)
everAlive2 <- sum(rowSums(z2)>0)
@
\end{frame}









\begin{frame}[fragile]
  \frametitle{Simulating spatial JS data with robust design}
{\bf Generate encounter histories for all $M$ individuals}
\footnotesize
<<sim-yall-robust>>=
yall <- array(NA, c(M, J, K, T))
for(i in 1:M) {
    for(t in 1:T) {
        for(j in 1:J) {
            yall[i,j,1:K,t] <- rbinom(K, 1, z2[i,t]*p[i,j])
        }
    }
}
@
\pause
\vfill
{\bf \normalsize Discard individuals that were never captured}
<<sim-y-robust>>=
detected <- rowSums(yall) > 0
y2 <- yall[detected,,,]
str(y2)
@
\end{frame}






\begin{frame}[fragile]
  \frametitle{Time series}
  \tiny
<<NDR-DD,include=FALSE,echo=FALSE,fig.width=8,fig.height=6>>=
plot(1:T, N2, ylim=c(0, 50), type="o", pch=16,
     xlab="Year", ylab="")
lines(2:T, Deaths2[-1], col="red", type="o", pch=16)
lines(2:T, Recruits2[-1], col="blue", type="o", pch=16)
legend(1, 50, c("Population size", "Deaths", "Recruits"),
       col=c("black", "red", "blue"), pch=16, lty=1)
@
\vspace{-3mm}
\begin{center}
  \includegraphics[width=\textwidth]{Open-JS-NDR-DD}
\end{center}
\end{frame}



\begin{frame}[fragile]
  \frametitle{Spatial CJS model in \jags}
  \vspace{-5mm}
  \tiny \fbox{\parbox{\linewidth}{\verbatiminput{JS-spatial-DD.jag}}}
\end{frame}





\begin{frame}[fragile]
  \frametitle{\jags}
%  \footnotesize
  {\bf Data augmentation}
  \scriptsize
<<aug-robust>>=
M2 <- nrow(y2) + 75
yz2 <- array(0, c(M2, J, K, T))
yz2[1:nrow(y2),,,] <- y2
@
\pause
\vfill
  {\bf \normalsize Initial values for $z$ matrix}
<<zi-robust>>=
zi <- matrix(0, M2, T)
##zi[1:nrow(y2),] <- 1
zi[1:nrow(y2),] <- z2[detected,] ## cheating
ji2 <- function() list(phi=0.01, z=zi)
@
\pause
\vfill
  {\bf \normalsize Fit the model}
<<jags-run-robust,eval=FALSE,results='hide'>>=
jd2 <- list(y=yz2, M=M2, X=X,
            J=J, K=K, T=T, xlim=xlim, ylim=ylim)
jp2 <- c("phi", "nu0", "nu1", "p0", "sigma", "N", "Deaths", "Recruits", "Ntot")
library(rjags)
jm2 <- jags.model("JS-spatial-DD.jag", jd2, ji2, n.chains=1, n.adapt=200)
jc2 <- coda.samples(jm2, jp2, 5000)
##jc2.2 <- coda.samples(jm2, jp2, 15000)
@
\end{frame}




\begin{frame}[fragile]
  \frametitle{Posterior distributions}
<<jc2,include=FALSE,echo=FALSE>>=
plot(jc2[,c("phi", "nu0", "nu1")])
@
\begin{center}
  \fbox{\includegraphics[width=0.7\textwidth]{Open-JS-jc1}}
\end{center}
\end{frame}










\begin{frame}[fragile]
  \frametitle{Actual and estimated abundance}
  {\bf Extract and summarize posterior samples of $N_t$}
  \footnotesize
<<N-post-samples>>=
Npost <- as.matrix(jc2[,paste("N[", 1:10, "]", sep="")])
Nmed <- apply(Npost, 2, median)
Nupper <- apply(Npost, 2, quantile, prob=0.975)
Nlower <- apply(Npost, 2, quantile, prob=0.025)
@
  \pause
  \vfill
  {\bf \normalsize Plot}
<<Npost,include=FALSE>>=
plot(1:T, N2, type="o", col="blue", ylim=c(0, 100), xlab="Time",
     ylab="Abundance")
points(1:T, Nmed)
arrows(1:T, Nlower, 1:T, Nupper, angle=90, code=3, length=0.05)
legend(1, 100, c("Actual abundance", "Estimated abundance"),
       col=c("blue", "black"), lty=c(1,1), pch=c(1,1))
@
\end{frame}





\begin{frame}
  \frametitle{Actual and estimated abundance}
  \vspace{-4mm}
  \begin{center}
    \includegraphics[width=0.8\textwidth]{Open-JS-Npost}
  \end{center}
\end{frame}










\begin{frame}
  \frametitle{Summary}
  \large
  {\bf Key points}
  \begin{itemize}[<+->]
    \item Spatial Jolly-Seber models make it possible to fit
      spatio-temporal models of population dynamics to standard data
    \item We could have movement just like we did with CJS models
  \end{itemize}
\end{frame}



\begin{frame}
  \frametitle{Assignment}
  {\bf \large For next week}
  \begin{enumerate}[\bf (1)]
    \item Work on analysis of your own data and your final paper, which should include:
      \begin{itemize}
        \item Introduction
        \item Methods (including model description)
        \item Results
        \item Discussion
      \end{itemize}
    \item Paper should be a minimum of 4 pages, single-spaced, 12-pt font
  \end{enumerate}
\end{frame}






\end{document}








