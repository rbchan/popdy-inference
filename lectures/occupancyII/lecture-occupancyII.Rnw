\documentclass[color=usenames,dvipsnames]{beamer}
%\documentclass[color=usenames,dvipsnames,handout]{beamer}

\usepackage[roman]{../lectures}
%\usepackage[sans]{../lectures}

\mode<handout>{
  \usetheme{default}
%  \setbeamercolor{background canvas}{bg=black!5}
% \pgfpagesuselayout{4 on 1}[letterpaper,landscape,border shrink=2.5mm]
%  \pgfpagesuselayout{2 on 1}[letterpaper,border shrink=10mm]
}

\hypersetup{pdfpagemode=UseNone,pdfstartview={FitV}}

%%% TODO: Add something about missing values

\title{Occupancy models: covariates and prediction }
\author{Richard Chandler}


% Load function to compile and open PDF
<<build-fun,include=FALSE,purl=FALSE>>=
source("../rnw2pdf.R")
@

% Compile and open PDF
<<buildit,include=FALSE,eval=FALSE>>=
rnw2pdf("lecture-occupancyII")
rnw2pdf("lecture-occupancyII", tangle=TRUE)
@ 


<<knitr-theme,include=FALSE,purl=FALSE>>=
##knit_theme$set("navajo-night")
knit_theme$set("edit-kwrite")
@



%<<knitr-setup,include=FALSE,purl=FALSE>>=
%##opts_chunk$set(comment=NA)
%@


%% New command for inline code that isn't to be evaluated
\definecolor{inlinecolor}{rgb}{0.878, 0.918, 0.933}
\newcommand{\inr}[1]{\colorbox{inlinecolor}{\texttt{#1}}}




\begin{document}






\begin{frame}[plain]
  \LARGE
  \centering
  {\huge Occupancy models: covariates and prediction} \\
  {\color{default} \rule{\textwidth}{0.1pt}}
  \vfill
  \large
  WILD(FISH) 8390 \\
%  Estimation of Fish and Wildlife Population Parameters \\
   Inference for Models of Fish and Wildlife Population Dynamics \\
  \vfill
  \large
  Richard Chandler \\
  University of Georgia \\
\end{frame}






\section{Overview}



\begin{frame}[plain]
  \frametitle{Outline}
  \Large
  \only<1>{\tableofcontents}%[hideallsubsections]}
  \only<2 | handout:0>{\tableofcontents[currentsection]}%,hideallsubsections]}
\end{frame}



\begin{frame}
  \frametitle{Overview}
  We almost always have covariates, which are also called explanatory
  variables, predictors, independent variables, etc\dots \\
  \pause
  \vfill
  Explaining variation in occupancy and detection probability with
  covariates is central to reliable prediction and scientific
  investigation. \\  
  \pause
  \vfill
  In static occupancy models, there are two types of covariates:
  \begin{enumerate}
    \item \textcolor{blue}{Site covariates} vary among sites
      but not among occasions
    \item \textcolor{Bittersweet}{Observation covariates} may vary among
      sites and occasions
  \end{enumerate}
  \pause
  \vfill
  In both cases, covariates can be continuous or categorical. \\
  \pause
  \vfill
  \centering
  {Observation covariates cannot be used to describe variation
    in occupancy because occupancy is assumed to be \\ constant over
    time.} \\ 
\end{frame}





% \begin{frame}
%   \frametitle{Example}
%   \begin{enumerate}
%     \item \textcolor{blue}{Site covariates} vary among sites
%       but not among occasions
%     \item \textcolor{Bittersweet}{Observation covariates} may vary among
%       sites and occasions
%   \end{enumerate}
  
%   Define the following as Site or Observation covariates (or both?):
%   \begin{itemize}
%     \item{Temperature}
%     \item{Distance to Stream}
%     \item{Wind}
%     \item{Others?}
%   \end{itemize}  
% \end{frame}
    


\begin{frame}
  \frametitle{Covariates}
  \small
  State model
  \begin{gather*}
    \mathrm{logit}(\psi_i) = \beta_0 + \beta_1 {\color{blue} x_{i1}} +
    \beta_2 {\color{blue} x_{i2}} + \cdots \\
    z_i \sim \mathrm{Bern}(\psi_i)
  \end{gather*}
  \pause
  \vfill
  Observation model
  \begin{gather*}
    \mathrm{logit}(p_{ij}) = \alpha_0 + \alpha_1 {\color{blue} x_{i1}}
    + \alpha_2 {\color{Bittersweet} w_{ij}} + \cdots \\
    y_{ij} \sim \mathrm{Bern}(z_i\times p_{ij})
  \end{gather*}
  \pause
  %  \vfill
  %  \small
  % Definitions \\
  % $\psi_i$ -- probability that the species occurs at site $i$ \\
  % $z_i$ -- binary presence/absence variable at site $i$ \\
  % $p_{ij}$ -- probability of detecting the species at site $i$ on occasion $j$ \\
  % $y_{ij}$ -- binary detection/non-detection data
  \vfill
  $\color{blue} x_1$ and $\color{blue} x_2$ are site covariates. \\
  \pause \hspace{12pt} Examples: elevation, forest cover, distance to water. \\
  \pause
  \vspace{12pt}
  $\color{Bittersweet} w$ is an observation covariate. \\
  \pause \hspace{12pt} Examples: time of day, observer, wind.
\end{frame}


\section{Simulation}



\begin{frame}
  \frametitle{Outline}
  \Large
  \tableofcontents[currentsection]
\end{frame}


\begin{frame}[fragile]
  \frametitle{Simulation}
  \small
  Two continuous covariates and one categorical covariate with 2 levels
  \vfill
  \begin{enumerate}[<+->]
  \item Covariates
<<sim-cov1,size='scriptsize'>>=
nSites <- 200; nVisits <- 4; set.seed(83) # Make it reproducible
elev <- rnorm(nSites,5000,500) # Site covariate (continuous)
forest <- rnorm(nSites,100,10) # Another continuous site covariate
temp <- matrix(sample(c("Cold", "Hot"), size=nSites*nVisits,
                      replace=TRUE),
               nrow=nSites, ncol=nVisits) # Categorical obs covar
tempHot <- ifelse(temp=="Hot", 1, 0)      # Dummy variable
@
  \item Coefficients, $\psi$, and $p$
<<nsim-cov2,size='scriptsize'>>=
beta0 <- 5; beta1 <- -0.001; beta2 <- 0
psi <- plogis(beta0 + beta1*elev + beta2*forest)
alpha0 <- -6.5; alpha1 <- 0.001; alpha2 <- 2
p <- plogis(alpha0 + alpha1*elev + alpha2*tempHot)
@   
  \item Simulate occupancy and detection data
<<sim-cov3,size='scriptsize'>>=
z <- rbinom(nSites, size=1, psi)            ## pres/absence
y <- matrix(NA, nrow=nSites, ncol=nVisits)
for(i in 1:nSites) {
    y[i,] <- rbinom(nVisits, size=1, prob=z[i]*p[i,]) }
@   
\end{enumerate}
\end{frame}




\begin{frame}[fragile]
  \frametitle{Prediction in `unmarked'}
<<sim-sitch,fig.width=7,fig.height=5,size='tiny',out.width='90%',fig.align='center',echo=FALSE>>=
par(mai=c(0.9,0.9,0.1,0.1))  
plot(function(x) plogis(beta0+beta1*x), from=min(elev), to=max(elev),
     ylab="Probability", col="blue", ylim=0:1, xlab="Elevation", lwd=2)
plot(function(x) plogis(alpha0+alpha1*x), from=min(elev), to=max(elev),
     col="orange", add=TRUE)
legend(5000, 1, c("Occupancy (psi)", "Detection (p)"), lty=c(1, 1),
       col=c("blue", "orange"), lwd=2, cex=1.2)
@
%\pause
\footnotesize
\centering
Expect problems if you ignore imperfect detection in this case \\
\end{frame}




\begin{frame}[fragile]
  \frametitle{Simulated data}
  \begin{columns}
    \begin{column}{0.4\textwidth}
      \small
      Observations
%      \tiny
<<sim-nocov-dat,size='scriptsize'>>=
y[1:20,]
@ 
  \end{column}
  \begin{column}{0.6\textwidth}
    \pause
%    \scriptsize
    {\centering Summary stats \\}
%    \vspace{24pt}
  Detections at each site \\
<<sim-nocov-ss1,size='scriptsize'>>=
siteDets <- rowSums(y) # Dets at each site
table(siteDets)        # Frequency
@
\pause
\vfill
\small
Proportion of sites known to be occupied \\
<<sim-nocov-ss2,size='scriptsize'>>=
naiveOccupancy <- sum(siteDets>0)/nSites
naiveOccupancy 
@
<<un,include=FALSE>>=
library(unmarked)
@ 
%    \vspace{12pt}
    {\centering Actual occupancy \\}
<<sim-z,size='scriptsize'>>=
sum(z) / nSites
@            
  \end{column}
  \end{columns}
\end{frame}



\section{Prediction}



\begin{frame}
  \frametitle{Outline}
  \Large
  \tableofcontents[currentsection]
\end{frame}



\subsection{Likelihood-based methods}



\begin{frame}[fragile]
  \frametitle{Prepare data in `unmarked'}
  \small
Notice the two new arguments \inr{siteCovs} and \inr{obsCovs}: 
<<un-umf,size='tiny',warning=FALSE>>=
umf <- unmarkedFrameOccu(y=y, siteCovs=data.frame(elev,forest), obsCovs=list(temp=temp))
@
\pause
%\vfill
%Reformat $temp$ as a factor: %, but it's formatted as a matrix of
%characters, we have to reformat it:
%Summary
<<wfac,size='tiny'>>=
summary(umf)
@ 
\end{frame}



\begin{frame}[fragile]
  \frametitle{Standardizing}
  It's almost always a good idea to standardize \alert{continuous} covariates. \\
  \pause
  \vfill
  Standardizing involves subtracting the mean and then dividing by the standard deviation. \\
  \pause
%  \vfill
<<umf-zcov,size='footnotesize'>>=
mean.elev <- mean(elev); mean.forest <- mean(forest)
sd.elev <- sd(elev); sd.forest <- sd(forest)
elev_s <- (elev-mean.elev)/sd.elev
forest_s <- (forest-mean.forest)/sd.forest
siteCovs(umf)$elev_s <- elev_s
siteCovs(umf)$forest_s <- forest_s
@
%  \pause
%  \vfill
%  If all of your site covariates are continuous, you can use this
%  shortcut with the \inr{scale} function:
%<<umf-zcovs>>=
%siteCovs(umf) <- scale(siteCovs(umf))
%@
  \pause
%  \vfill
  Standardizing makes it easier to find the maximum likelihood
  estimates (MLEs) and it facilitates comparison of estimates.  \\
  \pause
  \vfill
  We just have to remember to back-transform covariates when graphing
  predictions.
\end{frame}




\begin{frame}[fragile]
  \frametitle{Fit the model}
  \footnotesize
<<un-fit,size='scriptsize'>>=
fm <- occu(~elev_s+temp ~elev_s+forest_s, umf) # Standardized covariates
fm
@
% \pause
% \vfill
% Compare to actual parameter values:
% <<un-compare,size='tiny'>>=
% rbind('Occupancy coefs (beta)'=c(beta0, beta1, beta2),
%       'Detection coefs (alpha)'=c(alpha0, alpha1, alpha2))
% @ 
\end{frame}






\begin{frame}[fragile]
  \frametitle{Prediction in `unmarked'}
  Create a data frame with prediction covariates. We'll let elevation
  vary while holding the other two covariates constant. \\
  Important that we predict using the standardized covariates. We can
  still graph on the original scales.
<<preddat,size='footnotesize'>>=
pred.data <- data.frame(elev_s=seq(from=-3, to=3, length=50),
                        forest_s=0, temp='Hot') # Standardized
pred.data$elev <- pred.data$elev_s*sd.elev+mean.elev # Orig scale
pred.data$forest <- pred.data$forest_s*sd.forest+mean.forest 
@
\pause
\vfill
Get predictions of $\psi$ for each row of prediction data.
<<predpsi,size='footnotesize'>>=
psi.pred <- predict(fm, newdata=pred.data,
                    type='state', append=TRUE)
@
\pause
\vfill
Get predictions of $p$ for each row of prediction data.
<<predp,size='footnotesize'>>=
p.pred <- predict(fm, newdata=pred.data,
                  type='det', append=TRUE)
@
\end{frame}



\begin{frame}[fragile]
  \frametitle{Prediction in `unmarked'}
  \small
  View $\psi$ predictions
<<psi-head,size='footnotesize'>>=
print(head(psi.pred), digits=2)
@
\pause
\vfill
  View $p$ predictions
<<p-head,size='footnotesize'>>=
print(head(p.pred), digits=2)
@
\end{frame}






\begin{frame}[fragile]
  \frametitle{Standardized elevation}
<<pred-psi1,fig.width=7,fig.height=5,size='tiny',out.width='80%',fig.align='center',echo=-1>>=
par(mai=c(0.9,0.9,0.1,0.1))  
plot(Predicted ~ elev_s, psi.pred, type="l", ylab="Occurrence probability", col="blue",
     xlab="Elevation (standardized)", ylim=0:1) 
lines(lower ~ elev_s, psi.pred, col="grey"); lines(upper ~ elev_s, psi.pred, col="grey")
@   
\end{frame}




\begin{frame}[fragile]
  \frametitle{Elevation on original scale}
<<pred-psi1s,fig.width=7,fig.height=5,size='tiny',out.width='80%',fig.align='center',echo=-1>>=
par(mai=c(0.9,0.9,0.1,0.1))  
plot(Predicted ~ elev, psi.pred, type="l", ylab="Occurrence probability", col="blue",
     xlab="Elevation (original scale)", ylim=0:1)
lines(lower ~ elev, psi.pred, col="grey"); lines(upper ~ elev, psi.pred, col="grey")
@   
\end{frame}



\begin{frame}[fragile]
  \frametitle{Estimated vs actual occupancy}
<<psi-actual-est,fig.width=7,fig.height=5,size='tiny',out.width='90%',fig.align='center',echo=FALSE>>=
par(mai=c(0.9,0.9,0.1,0.1))  
plot(Predicted ~ elev, psi.pred, type="l", ylab="Occurrence probability", col="blue",
     xlab="Elevation (original scale)", ylim=0:1)
lines(lower ~ elev, psi.pred, col="grey"); lines(upper ~ elev, psi.pred, col="grey")
plot(function(x) plogis(beta0 + beta1*x),
     from=min(psi.pred$elev), to=max(psi.pred$elev), add=TRUE,
     lwd=2)
legend(5800, 1, c("Actual", "Estimated"), lwd=c(2,1), col=c("black", "blue"))
@   
\end{frame}






% \begin{frame}[fragile]
%   \frametitle{Prediction in `unmarked'}
% <<pred-p1,fig.width=7,fig.height=5,size='tiny',out.width='80%',fig.align='center',echo=-1>>=
% par(mai=c(0.9,0.9,0.1,0.1))  
% plot(Predicted ~ elev_s, p.pred, type="l", ylab="Detection probability", col="purple",
%      xlab="Original scale covariate (elev)", ylim=0:1, xaxt="n")
% axis(side=1, at=elev_s.ticks, labels=round(elev_s.ticks*sd(elev)+mean(elev),1)) ## Backtransform elev_s
% lines(lower ~ elev_s, p.pred, col="grey")
% lines(upper ~ elev_s, p.pred, col="grey")
% @   
% \end{frame}


% \begin{frame}[fragile]
%   \frametitle{Prediction in `unmarked'}
% <<pred-plot1,fig.width=7,fig.height=5.5,size='scriptsize',out.width='80%',fig.align='center'>>=
% plot(Predicted ~ elev, psi.pred, type="l", ylab="Probability", col="blue")
% ## lines(Predicted ~ elev, p.pred, col="grey")
% legend(-3, 0.75, c("psi", ""), lty=c(1, NA), col=c("blue", NA))
% @   
% \end{frame}





% \begin{frame}[fragile]
%   \frametitle{R package `unmarked'}
%   How many sites were occupied? \pause
%   We can answer this using posterior prediction.
% <<bup-hist,size='tiny',fig.width=7,fig.height=5,out.width='0.7\\textwidth',fig.align='center'>>=
% nsim <- 1000
% sites.occupied.post <- predict(z.post, func=function(x) sum(x), nsim=nsim)
% par(mai=c(0.9,0.9,0.1,0.1))
% plot(table(sites.occupied.post)/nsim, lwd=5, xlab="Sites occupied",
%     ylab="Empirical Bayes posterior probability")
% abline(v=sum(z), col="red") ## Actual number occupied
% @   
% \end{frame}






%% \begin{frame}
%%   \frametitle{In-class exercise}
%%   \small
%%   \begin{enumerate}
%%     \item Fit this model (to the simulated data):
%%       \begin{gather*}
%%         \mathrm{logit}(\psi_i) = \beta_0 + \beta_1 {\color{blue} x_{i1}} \\
%%         z_i \sim \mathrm{Bern}(\psi_i) \\
%% %      \end{gather*}
%% %      \begin{gather*}
%%         \mathrm{logit}(p_{ij}) = \alpha_0 + \alpha_1 {\color{blue} x_{i1}} +
%%         \alpha_2 {\color{Bittersweet} w_{ij}} \\
%%         y_{ij} \sim \mathrm{Bern}(z_i\times p_{ij})
%%       \end{gather*}
%% %      \pause
%%     \item Predict $p$ again by letting (standardized) $x_1$ vary, but
%%       this time, predict for the case where $w$=`Cold'.
%%     \item Graph $p$ as a function of $x_1$.
%%     \item (Bonus) What happens when a covariate is missing for a site or observation?
%%   \end{enumerate}
%% \end{frame}




\subsection{Bayesian methods}



\begin{frame}[fragile]
  \frametitle{The BUGS model}
<<bugs,size='scriptsize',echo=FALSE,background='beige',comment=''>>=
writeLines(readLines("occupancy-model-covs.jag"))
@ 
\end{frame}



%% TODO: Add something here about priors and prior predictive checks



\begin{frame}[fragile]
  \frametitle{Data, inits, and parameters}
  Put data in a named list
  \vspace{-12pt}
<<bugs-data,size='small'>>=
jags.data <- list(y=y, elev=elev_s, forest=forest_s,
                  tempHot=tempHot,
                  nSites=nSites, nOccasions=nVisits)
@
\pause
\vfill
  Initial values
  \vspace{-12pt}
<<bugs-inits,size='small'>>=
jags.inits <- function() {
    list(beta0=rnorm(1), alpha0=rnorm(1), z=rep(1, nSites))
}
@ 
\pause
\vfill
  Parameters to monitor
  \vspace{-12pt}
<<bugs-pars,size='small'>>=
jags.pars <- c("beta0", "beta1", "beta2",
               "alpha0", "alpha1", "alpha2",
               "sitesOccupied")
@ 
\end{frame}





\begin{frame}[fragile]
  \frametitle{MCMC}
  \small
<<bugs-mcmc,size='scriptsize',message=FALSE,cache=FALSE>>=
library(jagsUI)
jags.post.samples <- jags.basic(data=jags.data, inits=jags.inits,
                                parameters.to.save=jags.pars,
                                model.file="occupancy-model-covs.jag",
                                n.chains=3, n.adapt=100, n.burnin=0,
                                n.iter=2000, parallel=TRUE)
@ 
\end{frame}



\begin{frame}[fragile]
  \frametitle{Summarize output}
<<bugs-sum,size='tiny'>>=
summary(jags.post.samples)
@ 
\end{frame}




\begin{frame}[fragile]
  \frametitle{Traceplots and density plots}
<<bugs-plot1,size='footnotesize',out.width="0.7\\textwidth",fig.align='center'>>=
plot(jags.post.samples[,1:3])
@ 
\end{frame}



\begin{frame}[fragile]
  \frametitle{Traceplots and density plots}
<<bugs-plot2,size='footnotesize',out.width="0.7\\textwidth",fig.align='center'>>=
plot(jags.post.samples[,c(4:6,8)])
@ 
\end{frame}


\begin{frame}
  \frametitle{Bayesian prediction}
  Every MCMC iteration represents a sample from the posterior
  distribution. \\
  \pause
  \vfill
  Each sample of the occupancy and detection coefficients can be used
  to make a prediction. \\
  \pause
  \vfill
  The collection of predictions can be used to summarize the posterior 
  predictive distribution. \\
  \pause
  \vfill
  We will look at the distribution of prediction lines. \\  
\end{frame}


\begin{frame}[fragile]
  \frametitle{Bayesian prediction}
  \small
  First, extract the $\psi$ coefficients
<<psi-coefs,size='scriptsize'>>=
psi.coef.post <- as.matrix(jags.post.samples[,c("beta0","beta1","beta2")])
head(psi.coef.post, n=4)
@
  \pause
  \vfill
  Create prediction matrix, one row for each MCMC iteration.
%  Columns represent covariate values. 
<<psi-predmat,size='scriptsize'>>=
n.iter <- nrow(psi.coef.post)  
psi.post.pred <- matrix(NA, nrow=n.iter, ncol=nrow(pred.data))
@   
  \pause
  \vfill
  Predict $\psi$ for each MCMC iteration.
%  using covariate values from \inr{pred.data}. 
<<psi-pred-bayes,size='scriptsize'>>=
for(i in 1:n.iter) {
    psi.post.pred[i,] <- plogis(psi.coef.post[i,"beta0"] +
                                psi.coef.post[i,"beta1"]*pred.data$elev_s)
}
@ 
\end{frame}



\begin{frame}[fragile]
  \frametitle{Bayesian prediction}
  Prediction line for first posterior sample
<<psi-pred1,size='scriptsize',fig.align='center',out.width='80%',fig.height=5,dev='png',dpi=200>>=
plot(pred.data$elev, psi.post.pred[1,], type="l", xlab="Elevation",
     ylab="Occurrence probability", ylim=c(0, 1), col=gray(0.8))
@
\end{frame}



\begin{frame}[fragile]
  \frametitle{Bayesian prediction}
  All samples from the posterior predictive distribution
<<psi-pred-post,size='scriptsize',fig.align='center',out.width='80%',fig.height=5,echo=-1,dev='png',cache=FALSE,dpi=200>>=
plot(pred.data$elev, psi.post.pred[1,], type="l", xlab="elev",
     ylab="Occurrence probability", ylim=c(0, 1), col=gray(0.8))
for(i in 1:n.iter) {
    lines(pred.data$elev, psi.post.pred[i,], col=gray(0.8))
}
@ 
\end{frame}





\begin{frame}[fragile]
  \frametitle{Bayesian prediction}
  Now with posterior mean and 95\% CI
<<psi-pred-post-meanCI,size='tiny',fig.align='center',out.width='80%',fig.height=5,echo=-(1:2),dev='png',cache=FALSE,dpi=200>>=
plot(pred.data$elev, psi.post.pred[1,], type="l", xlab="elev",
     ylab="Occurrence probability", ylim=c(0, 1), col=gray(0.8))
for(i in 1:n.iter) {
    lines(pred.data$elev, psi.post.pred[i,], col=gray(0.8))
}
pred.post.mean <- colMeans(psi.post.pred)
pred.post.lower <- apply(psi.post.pred, 2, quantile, prob=0.025)
pred.post.upper <- apply(psi.post.pred, 2, quantile, prob=0.975)
lines(pred.data$elev, pred.post.mean, col="blue")
lines(pred.data$elev, pred.post.lower, col="blue", lty=2)
lines(pred.data$elev, pred.post.upper, col="blue", lty=2)
@ 
\end{frame}




\begin{frame}
  \frametitle{Summary of static occupancy models}
  \small
  Assumptions are made explicit by the model description, but it's worth emphasizing that: 
  \begin{itemize}[<+->]
    \item<2-> Occupancy is assumed to remain constant at each site during the sampling period
    \item<3-> The definition of a `site' is critical, but can difficult in
      some situations, such as in camera studies.
    \item<4-> Abundance is assumed to be unimportant
    \item<5-> Observations are assumed to be independent, conditional
      on latent variables and covariates
  \end{itemize}
  \vfill
  \uncover<6->{  
    These assumptions can be relaxed if we have enough data. 
  }
  \begin{itemize}
    \item<7-> Dynamic occupancy models
    \begin{itemize}
      \item Occupancy evolves as a function of local colonization
        and extinction
    \end{itemize}
    \item<8-> $N$-mixture models
    \begin{itemize}
      \item Focus is on local abundance, rather than presence/absence
    \end{itemize}
  \end{itemize}
  \vfill
  \uncover<9->{We'll talk more about design issues later}
\end{frame}



\section{Assignment}




\begin{frame}
  \frametitle{Assignment}
  % \small
  \footnotesize
  Create a self-contained R script or Rmarkdown file
  to do the following:
  \vfill
  \begin{enumerate}
%    \small
    \footnotesize
    % \item Fit 3 covariate models in `unmarked' to the Canada Warbler data. 
    %   \begin{itemize}
    %     \footnotesize
    %     \item Response: \texttt{cawa1, cawa2, cawa3, cawa4}
    %     \item Site covs: \texttt{Elevation, Wind, Noise}
    %   \end{itemize}
    \item Fit an occupancy model in `unmarked' to the Ruffed Grouse
      data ({\tt grouse\_data.csv}). Use all three covariates, with
      elevation and forest cover affecting occupancy and day of the
      year affecting detection probability.
      \begin{itemize}
        \footnotesize
        \item Response: \texttt{grouse1, grouse2, grouse3}
        \item Site covs: Elevation (\texttt{elev}), forest cover ({\tt fc})
        \item Obs cov: Day of the year (\texttt{doy.1, doy.2, doy.3})
      \end{itemize}
    \item Make one prediction graph for occupancy and one for
      detection.  
    \item Create the same graphs as above, but using Bayesian methods.
    %% \item Compare the likelihood and Bayesian predictions. Are they
    %%   similar?   
    \end{enumerate}
    \vfill
    Upload your {\tt .R} or {\tt .Rmd} file to ELC by 5:00pm on Tuesday. 
\end{frame}





\end{document}

