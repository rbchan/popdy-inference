\documentclass[color=usenames,dvipsnames]{beamer}
%\documentclass[color=usenames,dvipsnames,handout]{beamer}

\usepackage[roman]{../lectures}
%\usepackage[sans]{../lectures}


\hypersetup{pdfpagemode=UseNone,pdfstartview={FitV}}



% Load function to compile and open PDF
<<build-fun,include=FALSE,purl=FALSE>>=
source("../rnw2pdf.R")
@

% Compile and open PDF
<<buildit,include=FALSE,eval=FALSE>>=
rnw2pdf("lecture-distsamp-HDS")
rnw2pdf("lecture-distsamp-HDS", tangle=TRUE)
@ 


<<knitr-theme,include=FALSE,purl=FALSE>>=
knit_theme$set("edit-kwrite")
@


% New command for inline code that isn't to be evaluated
\definecolor{inlinecolor}{rgb}{0.878, 0.918, 0.933}
\newcommand{\inr}[1]{\colorbox{inlinecolor}{\texttt{#1}}}




\begin{document}




\begin{frame}[plain]
  \LARGE
  \centering
  {
    \LARGE Hierarchical distance sampling: \\
    \Large simulation, fitting, and prediction %, and random effects \\
  }
  {\color{default} \rule{\textwidth}{0.1pt} }
  \vfill
  \large
  WILD(FISH) 8390 \\
  Estimation of Fish and Wildlife Population Parameters \\
  \vfill
  \large
  Richard Chandler \\
  University of Georgia \\
\end{frame}






\section{Overview}



\begin{frame}[plain]
  \frametitle{Outline}
  \Large
  \only<1>{\tableofcontents}%[hideallsubsections]}
  \only<2 | handout:0>{\tableofcontents[currentsection]}%,hideallsubsections]}
\end{frame}



\begin{frame}
  \frametitle{Distance sampling overview}
  Distance sampling is one of the oldest wildlife sampling methods. \\
  \pause
  \vfill
  It's based on the simple idea that detection probability should
  decline with distance between an animal and a transect. \\
  \pause
  \vfill
  If we can estimate the function describing how $p$ declines with
  distance $x$, we can estimate abundance\dots \pause if certain
  assumptions hold, as always. \\
\end{frame}



\begin{frame}
  \frametitle{Distance sampling overview}
  The simplest estimator of abundance is 
  \[
    \hat{N} = \frac{n}{\hat{p}}
  \]
  where $n$ is the number of individuals detected, $p$ is detection
  probability, and $E(n)=Np$. \\
  \pause
  \vfill
  In distance sampling, detection probability is a \alert{function} of
  distance, rather than a constant, such that all individuals have
  unique detection probabilities. \\
  \pause
  \vfill
  As a result, we have to replace
  $p$ with \alert{average} detection probability:
  \[
    \hat{N} = \frac{n}{\hat{\bar{p}}}
  \]
  \pause
  \vfill
  How do we compute average detection probability ($\bar{p}$)?
\end{frame}



\begin{frame}
  \frametitle{Detection functions}
  To estimate average detection probability ($\bar{p}$), we need:
  \begin{itemize}
    \item A detection function $g(x)$ describing how $p$ declines with
      distance.
    \item A probability distribution $p(x)$ describing the
      distances of all animals (detected and not detected). 
  \end{itemize}
  \pause
  \vfill
  \centering
  The most common detection functions are: \\
  \vspace{6pt}
  \begin{tabular}{lc}
%    \centering
    \hline
    Detection function & $g(x)$ \\
    \hline
    Half normal & $\exp(-x^2 / (2\sigma^2))$ \\
    Negative exponential & $\exp(-x/\sigma)$ \\
    Hazard rate & $1-\exp(-(x/a)^{-b})$ \\
    \hline
  \end{tabular}
\end{frame}


\begin{frame}[fragile]
  \frametitle{Half-normal}
  \footnotesize
  \[
    g(x,\sigma) = \exp(-x^2/(2\sigma^2))
  \]
  \vspace{-12pt}
  \centering
<<hn,size='scriptsize',fig.width=7,fig.height=5,out.width="70%",echo=-1>>=
par(mai=c(0.9,0.9,0.1,0.1))  
sigma1 <- 25; sigma2 <- 50
plot(function(x) exp(-x^2/(2*sigma1^2)), from=0, to=100, 
     xlab="Distance (x)", ylab="Detection probability (p)")
plot(function(x) exp(-x^2/(2*sigma2^2)), from=0, to=100, add=TRUE, col=4)
legend(70, 1, c("sigma=25", "sigma=50"), lty=1, col=c("black","blue"))
@ 
\end{frame}




\begin{frame}[fragile]
  \frametitle{Negative exponential}
  \footnotesize
  \[
    g(x,\sigma) = \exp(-x/\sigma)
  \]
  \vspace{-12pt}
  \centering
<<nexp,size='scriptsize',fig.width=7,fig.height=5,out.width="70%",echo=-1>>=
par(mai=c(0.9,0.9,0.1,0.1))  
sigma1 <- 25; sigma2 <- 50
plot(function(x) exp(-x/sigma1), from=0, to=100, 
     xlab="Distance (x)", ylab="Detection probability (p)")
plot(function(x) exp(-x/sigma2), from=0, to=100, add=TRUE, col=4)
legend(70, 1, c("sigma=25", "sigma=50"), lty=1, col=c("black","blue"))
@ 
\end{frame}





\begin{frame}[fragile]
  \frametitle{Hazard rate}
  \footnotesize
  \[
    g(x,a,b) = 1-\exp(-(x/a)^{-b})
  \]
  \vspace{-12pt}
  \centering
<<haz,size='scriptsize',fig.width=7,fig.height=5,out.width="70%",echo=-1>>=
par(mai=c(0.9,0.9,0.1,0.1))  
a1 <- 25; a2 <- 50; b1 <- 2; b2 <- 10
plot(function(x) 1-exp(-(x/a1)^(-b1)), from=0, to=100, 
     xlab="Distance (x)", ylab="Detection probability (p)", ylim=0:1)
plot(function(x) 1-exp(-(x/a2)^(-b2)), from=0, to=100, add=TRUE, col=4)
legend(70, 1, c("a=25, b=2", "a=50, b=10"), lty=1, col=c("black","blue"))
@ 
\end{frame}



\begin{frame}
  \frametitle{Average detection probability ($\bar{p}$)}
  Regardless of the chosen detection function, average detection
  probability is defined as: 
  \[
%     \bar{p} = \int g(x)p(x) \; \mathrm{d}x
%     \bar{p} = \int_{b_1}^{b_2} g(x)p(x) \; \mathrm{d}x
     \bar{p} = \int_{0}^{B} g(x)p(x) \; \mathrm{d}x
   \]
%   where $b_1$ and $b_2$ are the limits of the distance interval.
   where $B$ is the width of the transect.
  \pause
  \vfill
  All that remains is the specification of $p(x)$, the
  distribution of distances (between animals and the transect).
  \pause
  \vfill
  To understand why $p(x)$ is needed, think about it this way:
  \begin{itemize}
    \item If most animals are close to the transect, $\bar{p}$ would
      be high
    \item If most animals are far from the transect, $\bar{p}$ would
      be low
  \end{itemize}
  % \pause
  % \vfill
  % The standard assumption (for line transects) is that animals are
  % uniformly distributed with respect to the transect
\end{frame}



\begin{frame}
  \frametitle{What should we use for $p(x)$?}
  What distribution should we use for the distances between animals
  and transects?
  \pause
  \vfill
  In \alert{line-transect sampling}, it is often assumed that animals
  are uniformly distributed with respect to the transect.
  \begin{itemize}
    \item Consequently, $p(x) = 1/B$, where $x$ is the
      \alert{perpendicular} distance between animal and transect
    \item This is guaranteed by random transect placement
    \item Can also be justified if animals are neither attracted to
      the transects or avoid them. 
  \end{itemize}
  \pause
  \vfill
  In \alert{point-transect sampling}, we make the same assumptions,
  but we recognize that area increases with distance from a point.
  \begin{itemize}
    \item Consequently, $p(x) = 2x/B^2$ (see pg. 408 in AHM)
    \item Here, $x$ is the \alert{radial} distance to an animal
  \end{itemize}
\end{frame}




\begin{frame}[fragile]
  \frametitle{Computing $\bar{p}$ for line transects}
  Half-normal detection function and line-transect sampling.
  \vspace{-6pt}
<<pbar-hn,size='footnotesize'>>=
B <- 100                                         # Transect width
g <- function(x, sigma=25) exp(-x^2/(2*sigma^2)) # g(x)
pdf <- function(x) 1/B                           # p(x), constant
@
\pause
\vfill
  Do the integration
  \vspace{-6pt}
<<pbar-hn-int,size='footnotesize'>>=
gp <- function(x) g(x)*pdf(x)
(pbar <- integrate(gp, lower=0, upper=B)$value)
@ 
\pause
\vfill
  Note the equivalence
  \vspace{-6pt}
<<pbar-hn-int2,size='footnotesize'>>=
(pbar <- integrate(g, lower=0, upper=B)$value / B)
(pbar <- (pnorm(B,0,25) - pnorm(0,0,25)) / dnorm(0,0,25) / B)
@
\pause
\vfill
\centering
31.3\% chance of detecting an individual within 100 m. \\
\end{frame}



\begin{frame}[fragile]
  \frametitle{Computing $\bar{p}$ for point transects}
  Half-normal detection function and point-transect sampling.
  \vspace{-6pt}
<<pbar-hn-pt,size='footnotesize'>>=
B <- 100                                         # Transect width
g <- function(x, sigma=25) exp(-x^2/(2*sigma^2)) # g(x)
pdf <- function(x) 2*x/B^2                       # p(x)
@
\pause
\vfill
  Do the integration
  \vspace{-6pt}
<<pbar-hn-int-pt,size='footnotesize'>>=
gp <- function(x) g(x)*pdf(x)
(pbar <- integrate(gp, lower=0, upper=B)$value)
@ 
\pause
\vfill
  Note the equivalence
  \vspace{-6pt}
<<pbar-hn-int2-pt,size='footnotesize'>>=
sigma <- 25
(pbar <- (sigma^2*(1-exp(-B^2/(2*sigma^2))) -
          sigma^2*(1-exp(-0^2/(2*sigma^2)))) * 2*pi/(pi*B^2))
@
\pause
\vfill
\centering
12.5\% chance of detecting an individual within 100 m. \\
\end{frame}





\begin{frame}
  \frametitle{In-class exercise}
  Building off the previous example\dots
  \begin{enumerate}
    \item Compute $\bar{p}$ for line-transect sampling when
      $\sigma=50, 100, \mathrm{and}\, 200$, instead of $\sigma=25$.  
    \item Repeat, but for point-transect sampling. 
  \end{enumerate}
\end{frame}




\begin{frame}
  \frametitle{\large Conventional vs hierarchical distance sampling}
  \alert{Conventional} distance sampling
  \begin{itemize}
    \item Focus is on estimation of detection function parameters and density
    \item No model for spatial variation in density
    \item Data are individual-level distances
    \item We'll deal with CDS in more depth as a prelude to
      spatial-capture recapture
  \end{itemize}
  \pause
  \vfill
  \alert{Hierarchical} distance sampling
  \begin{itemize}
    \item Focus is on estimation of detection function parameters and
      spatial variation in abundance/density
    \item Data are counts of individuals in each distance bin
    \item Multinomial $N$-mixture model with a unique function for
      computing the multinomial cell probabilities 
  \end{itemize}
\end{frame}




\begin{frame}
  \frametitle{Hierarchical distance sampling}
  \small
  State model (with Poisson assumption)
  \begin{gather*}
    \mathrm{log}(\lambda_i) = \beta_0 + \beta_1 {\color{blue} w_{i1}} +
    \beta_2 {\color{blue} w_{i2}} + \cdots \\
    N_i \sim \mathrm{Poisson}(\lambda_i)
  \end{gather*}
  \pause
  Observation model
  \begin{gather*}
    \mathrm{log}(\sigma_{i}) = \alpha_0 + \alpha_1 {\color{blue} w_{i1}}
    + \alpha_2 {\color{blue} w_{i3}} + \cdots \\
    \{y_{i1}, \dots, y_{iK}\}  \sim \mathrm{Multinomial}(N_i,
    \pi(b_1, \dots, b_{J+1}, x, \sigma_i))
  \end{gather*}
  \pause
  \small
  Definitions \\
  $\lambda_i$ -- Expected value of abundance at site $i$ \\
  $N_i$ -- Realized value of abundance at site $i$ \\
  $\sigma_{i}$ -- Scale parameter of detection function $g(x)$ at site $i$ \\
  $\pi(x,b,\sigma_i)$ -- Function computing multinomial cell probs \\
  $y_{ij}$ -- count for distance bin $j$ (final count is unobserved) \\
  $\color{blue} w_1$, $\color{blue} w_2$, $\color{blue} w_3$ -- site covariates %\hfill %\\
\end{frame}











%\section{Simulation}

\section{Line transects}






\subsection{Simulation}

\begin{frame}
  \frametitle{Outline}
  \Large
%  \tableofcontents[currentsection,currentsubsection]
  \tableofcontents[currentsection]
\end{frame}



\begin{frame}
  \frametitle{Multinomial cell probs for line transects}
  \small
  Definitions needed for computing \alert{bin-specific} $\bar{p}$ and
  multinomial cell probabilities. 
  \begin{itemize}
  \small
    \setlength\itemsep{1pt}
    \item $y_{ij}$ -- number of individuals detected at site $i$ in bin $j$
    \item $\sigma_i$ -- scale parameter of detection function $g(x)$
    \item $b_1, \dots, b_{J+1}$ -- Distance break points defining $J$ distance intervals
    \item $\bar{p}_j = \int_{b_j}^{b_{j+1}} g(x,\sigma)p(x|b_j\le x<b_{j+1})\, \mathrm{d}x$
    \item $p(x|b_j\le x<b_{j+1}) = 1/(b_{j+1}-b_j)$
    \item $\psi_j=\Pr(b_j\le x<b_{j+1})=(b_{j+1}-b_j)/B$ % -- Pr(occuring in distance bin $j$)
  \end{itemize}
  \pause \vfill
  \footnotesize
  \begin{columns}
    \column{0.9\paperwidth}
    \begin{tabular}{lc}
      \hline
      \centering
      Description                       & Multinomial cell probability \\
      \hline
      Pr(occurs and detected in first distance bin)  & $\pi_1 = \psi_1\bar{p}_1$   \\
      Pr(occurs and detected in second distance bin)  & $\pi_2 = \psi_2\bar{p}_2$   \\
      {\centering $\cdots$}             & $\cdots$                     \\
      Pr(occurs and detected in last distance bin)  & $\pi_J = \psi_J\bar{p}_J$   \\
      Pr(not detected)                  & $\pi_{K} = 1-\sum_{j=1}^J \pi_j$          \\
      \hline
    \end{tabular}
  \end{columns}
\end{frame}






<<include=FALSE,echo=FALSE>>=
set.seed(34889243)
@ 

\begin{frame}[fragile]
  \frametitle{Line transects, no covariates}
  \small
  Abundance
  \vspace{-6pt}
<<sim-hds-nocov1,size='scriptsize'>>=
nSites <- 100; lambda1 <- 2.6  ## Expected value of N
N1 <- rpois(n=nSites, lambda=lambda1)
@
  \pause
  \vfill
  Multinomial cell probabilities
  \vspace{-6pt}
<<sim-hds-nocov2,size='scriptsize'>>=
J <- 5                     # distance bins
sigma <- 50                # scale parameter
B <- 100; L <- 100         # transect widths (B) and lengths (L)
b <- seq(0, B, length=J+1) # distance break points
psi <- diff(b)/B           # Pr(x is in bin j)
pbar1 <- numeric(J)        # average detection probability
pi1 <- numeric(J+1)        # multinomial cell probs
for(j in 1:J) {
    pbar1[j] <- integrate(function(x) exp(-x^2/(2*sigma^2)),
                          lower=b[j], upper=b[j+1])$value / diff(b)[j]
    pi1[j] <- pbar1[j]*psi[j]
}
pi1[J+1] <- 1-sum(pi1[1:J])
@
  \pause
  \vfill
  Detections in each distance interval
  \vspace{-6pt}
<<sim-hds-y1,size='scriptsize'>>=
y1.all <- matrix(NA, nrow=nSites, ncol=J+1)
for(i in 1:nSites) {
    y1.all[i,] <- rmultinom(n=1, size=N1[i], prob=pi1)    }
y1 <- y1.all[,1:J]  ## Drop final cell
@ 
\end{frame}



\begin{frame}[fragile]
  \frametitle{Observed distances}
  \centering
<<dist-hist2,fig.height=5,out.width="90%",size='scriptsize',echo=-1>>=
par(mai=c(0.9,0.9,0.1,0.1))  
plot(b[-(J+1)]+10, colSums(y1), type="h", lwd=80, lend=2, col="tan",
     xlim=c(0,100), ylim=c(0, 70), xlab="Distance", ylab="Detections")
@   
\end{frame}




\begin{frame}[fragile]
  \frametitle{Line transects, covariates}
  \small
  Abundance
  \vspace{-6pt}
<<sim-hds-cov1,size='scriptsize'>>=
elevation <- rnorm(nSites)  
beta0 <- 2; beta1 <- 1
lambda2 <- exp(beta0 + beta1*elevation)
N2 <- rpois(n=nSites, lambda=lambda2)
@
  \pause
  \vfill
  Multinomial cell probabilities
  \vspace{-6pt}
<<sim-hds-cov2,size='scriptsize'>>=
noise <- rnorm(nSites)
alpha0 <- 3; alpha1 <- -0.5
sigma2 <- exp(alpha0 + alpha1*noise)
pi2 <- matrix(NA, nSites, J+1) # multinomial cell probs
for(i in 1:nSites) {
  for(j in 1:J) {
      pi2[i,j] <- integrate(function(x) exp(-x^2/(2*sigma2[i]^2)),
          lower=b[j], upper=b[j+1])$value / (b[j+1]-b[j]) * psi[j] }
  pi2[i,J+1] <- 1-sum(pi2[i,1:J]) } 
@
  \pause
  \vfill
  Detections in each distance interval
  \vspace{-6pt}
<<sim-hds-y2,size='scriptsize'>>=
y2.all <- matrix(NA, nrow=nSites, ncol=J+1)
for(i in 1:nSites) {
    y2.all[i,] <- rmultinom(n=1, size=N2[i], prob=pi2[i,])    }
y2 <- y2.all[,1:J]
@ 
\end{frame}






\begin{frame}[fragile]
  \frametitle{Simulated data}
  \begin{columns}
    \begin{column}{0.4\textwidth}
      \small
      Observations
%      \tiny
  \vspace{-6pt}
<<sim-nocov-dat,size='tiny'>>=
y2[1:25,]
@ 
  \end{column}
  \begin{column}{0.6\textwidth}
    \pause
%    \scriptsize
    {\centering Summary stats \\}
    \vspace{24pt}
    \small
    Proportion of sites known to be occupied
    \vspace{-6pt}
<<sim-nocov-ss1,size='scriptsize'>>=
# Max count at each site
maxCounts <- apply(y2, 1, max) 
naiveOccupancy <- sum(maxCounts>0)/nSites
naiveOccupancy 
@
  \pause
  \vfill
  \small
  Total detections in each distance interval
  \vspace{-6pt}
<<sim-nocov-ss2,size='scriptsize'>>=
colSums(y2)
@
  \pause
  \vfill
  Naive abundance
  \vspace{-6pt}
<<sim-nocov-ss3,size='scriptsize'>>=
sum(y2)
@
<<un,include=FALSE>>=
library(unmarked)
@ 
  \end{column}
  \end{columns}
\end{frame}









%\section{Prediction}
\subsection{Likelihood-based inference}


\begin{frame}
  \frametitle{Outline}
  \Large
  \tableofcontents[currentsection]
\end{frame}






\begin{frame}[fragile]
  \frametitle{Prepare data in `unmarked'}
  \small
  Note the new arguments.
  \vspace{-6pt}
<<un-umf,size='tiny'>>=
umf <- unmarkedFrameDS(y=y2, siteCovs=data.frame(elevation,noise), dist.breaks=b,
                       tlength=rep(L, nSites), survey="line", unitsIn="m")
@
\pause
<<wfac,size='tiny'>>=
summary(umf)
@ 
\end{frame}



\begin{frame}[fragile]
  \frametitle{Fit the model}
  \footnotesize
<<un-fit,size='tiny'>>=
## fm <- distsamp(~noise ~elevation, umf, keyfun="exp")     # negative exp
## fm <- distsamp(~noise ~elevation, umf, keyfun="hazard")  # hazard rate
fm <- distsamp(~noise ~elevation, umf, keyfun="halfnorm")   # half-normal
fm
@
\pause
\vfill
Compare to actual parameter values:
\vspace{-6pt}
<<un-compare,size='tiny'>>=
c(beta0=beta0, beta1=beta1); c(alpha0=alpha0, alpha1=alpha1)
@ 
\end{frame}








\begin{frame}[fragile]
  \frametitle{Prediction in `unmarked'}
  \small
  Create \texttt{data.frame} with prediction covariates. 
  \vspace{-6pt}
<<preddat,size='footnotesize'>>=
pred.data <- data.frame(noise=seq(-3, 3, length=20))
@
\pause
\vfill
Get predictions of $\sigma$ for each row of prediction data.
  \vspace{-6pt}
<<predpsi,size='footnotesize'>>=
sigma.pred <- predict(fm, newdata=pred.data,
                      type='det', append=TRUE)
@
\pause
\vfill
  View $\sigma$ predictions
  \vspace{-6pt}
<<psi-head,size='footnotesize'>>=
print(head(sigma.pred), digits=2)
@
\end{frame}





\begin{frame}[fragile]
  \frametitle{Prediction in `unmarked'}
<<pred-sigma,fig.width=7,fig.height=5,size='tiny',out.width='80%',fig.align='center',echo=-c(1)>>=
par(mai=c(0.9,0.9,0.1,0.1))
plot(Predicted ~ noise, sigma.pred, ylab="Scale parameter (sigma)",
     ylim=c(0,100), xlab="Noise level", type="l")
lines(lower ~ noise, sigma.pred, col="grey")
lines(upper ~ noise, sigma.pred, col="grey")
@   
\end{frame}





\begin{frame}[fragile]
  \frametitle{Prediction in `unmarked'}
<<pred-sigma2,fig.width=7,fig.height=5,size='tiny',out.width='80%',fig.align='center',echo=-c(1,5:10)>>=
par(mai=c(0.9,0.9,0.1,0.1))
plot(Predicted ~ noise, sigma.pred, ylab="Scale parameter (sigma)",
     ylim=c(0,100), xlab="Noise level", type="l")
lines(lower ~ noise, sigma.pred, col="grey")
lines(upper ~ noise, sigma.pred, col="grey")
arrows((log(40)-3.137)/-0.369, 40, 0.1, 63, len=0.1, col="blue")
points((log(40)-3.137)/-0.369, 40, col="orange", pch=16, cex=2)
par( fig=c(0.5,0.95,0.55,0.95), new=TRUE)#, mar=c(0,0,0,0) )
plot(function(x) exp(-x^2/(2*40^2)), 0, 100, xlab="Dist", ylab="p",
     col="orange", lwd=2)
@   
\end{frame}






\begin{frame}[fragile]
  \frametitle{Prediction in `unmarked'}
<<pred-sigma2-2,fig.width=7,fig.height=5,size='tiny',out.width='80%',fig.align='center',echo=-c(1,5:10)>>=
par(mai=c(0.9,0.9,0.1,0.1))
plot(Predicted ~ noise, sigma.pred, ylab="Scale parameter (sigma)",
     ylim=c(0,100), xlab="Noise level", type="l")
lines(lower ~ noise, sigma.pred, col="grey")
lines(upper ~ noise, sigma.pred, col="grey")
arrows((log(15)-3.137)/-0.369, 15, 1.1, 55, len=0.1, col="blue")
points((log(15)-3.137)/-0.369, 15, col="red", pch=16, cex=2)
par( fig=c(0.5,0.95,0.55,0.95), new=TRUE)#, mar=c(0,0,0,0) )
plot(function(x) exp(-x^2/(2*15^2)), 0, 100, xlab="Dist", ylab="p",
     col="red", lwd=2)
@   
\end{frame}






\subsection{Bayesian inference}


\begin{frame}
  \frametitle{Outline}
  \Large
  \tableofcontents[currentsection,currentsubsection]
\end{frame}





\begin{frame}[fragile]
  \frametitle{\normalsize Conditional-on-$N$ and $n_i=\sum_{j=1}^{J} y_{i,j}$}
\vspace{-3pt}
<<bugs-line,size='tiny',echo=FALSE,comment='',background='lightblue'>>=
writeLines(readLines("distsamp-line-mod.jag"))
@
\end{frame}





\begin{frame}[fragile]
  \frametitle{Data, inits, and parameters}
  Put data in a named list
  \vspace{-12pt}
<<bugs-data2,size='footnotesize'>>=
jags.data.line <- list(y=y2, n=rowSums(y2),
                       b=b,           # Distance break points
                       psi=diff(b)/B, # Pr(occuring in bin j)
                       elevation=elevation, noise=noise,
                       nSites=nSites, nBins=J)
@
\pause
\vfill
  Initial values
  \vspace{-12pt}
<<bugs-inits,size='footnotesize'>>=
jags.inits.line <- function() {
    list(lambda.intercept=runif(1), alpha0=rnorm(1, 5),
         N=rowSums(y2)+rpois(nrow(y2), 2))
}
@ 
\pause
\vfill
  Parameters to monitor
  \vspace{-12pt}
<<bugs-pars,size='small'>>=
jags.pars.line <- c("beta0", "beta1",
                    "alpha0", "alpha1", "totalAbundance")
@ 
\end{frame}





\begin{frame}[fragile]
  \frametitle{MCMC}
  \small
<<bugs-mcmc-line,size='scriptsize',message=FALSE,cache=TRUE,results='hide'>>=
library(jagsUI)
jags.post.line <- jags.basic(data=jags.data.line, inits=jags.inits.line,
                             parameters.to.save=jags.pars.line,
                             model.file="distsamp-line-mod.jag",
                             n.chains=3, n.adapt=100, n.burnin=0,
                             n.iter=2000, parallel=TRUE)
@ 
\vfill
<<jags-sum-line,size='scriptsize',cache=TRUE>>=
round(summary(jags.post.line)$quantile, digits=3)
@ 
\end{frame}


\begin{frame}[fragile]
  \frametitle{Traceplots and density plots}
<<bugs-plot1-rem2,size='footnotesize',out.width="0.7\\textwidth",fig.align='center',cache=TRUE>>=
plot(jags.post.line[,jags.pars.line[1:3]])
@ 
\end{frame}



\begin{frame}[fragile]
  \frametitle{Traceplots and density plots}
<<bugs-plot2-rem2,size='footnotesize',out.width="0.7\\textwidth",fig.align='center',cache=TRUE>>=
plot(jags.post.line[,jags.pars.line[4:5]])
@ 
\end{frame}




\section{Point transects}

\subsection{Simulation}


\begin{frame}
  \frametitle{Outline}
  \Large
  \tableofcontents[currentsection,currentsubsection]
\end{frame}



\begin{frame}
  \frametitle{Multinomial cell probs for point transects}
  \small
  Definitions needed for computing \alert{bin-specific} $\bar{p}$ and
  multinomial cell probabilities. 
  \begin{itemize}
    \small
    \setlength\itemsep{1pt}
    \item $y_{ij}$ -- number of individuals detected at site $i$ in bin $j$
    \item $\sigma_i$ -- scale parameter of detection function $g(x)$
    \item $b_1, \dots, b_J$ -- Distance break points defining $J$
      distance intervals
    \item $a_1, \dots, a_J$ -- Area of annulus $j$
    \item $\bar{p}_j = \int_{b_j}^{b_{j+1}} g(x,\sigma)p(x|b_j\le x<b_{j+1})\, \mathrm{d}x$
    \item $p(x|b_j\le x<b_{j+1}) = 2\pi x/a_j$
    \item $\psi_j=\Pr(b_j\le x<b_{j+1})=a_j/(\pi B^2)$
  \end{itemize}
  \pause \vfill
  \footnotesize
  \begin{columns}
    \column{0.9\paperwidth}
    \begin{tabular}{lc}
      \hline
      \centering
      Description                       & Multinomial cell probability \\
      \hline
      Pr(occurs and detected in first distance bin)  & $\pi_1 = \psi_1\bar{p}_1$   \\
      Pr(occurs and detected in second distance bin)  & $\pi_2 = \psi_2\bar{p}_2$   \\
      {\centering $\cdots$}             & $\cdots$                     \\
      Pr(occurs and detected in last distance bin)  & $\pi_J = \psi_J\bar{p}_J$   \\
      Pr(not detected)                  & $\pi_{K} = 1-\sum_{j=1}^J \pi_j$          \\
      \hline
    \end{tabular}
  \end{columns}
\end{frame}



<<include=FALSE,echo=FALSE>>=
set.seed(34889243)
@ 

\begin{frame}[fragile]
  \frametitle{Point transects, no covariates}
  \small
  Abundance
  \vspace{-6pt}
<<sim-hds-nocovN3-pt,size='scriptsize'>>=
nSites <- 100; lambda1 <- 2.6  ## Expected value of N
N3 <- rpois(n=nSites, lambda=lambda1)
@
  \pause
  \vfill
  Multinomial cell probabilities
  \vspace{-6pt}
<<sim-hds-nocov3-pt,size='scriptsize'>>=
J <- 5                     # distance bins
sigma <- 50                # scale parameter
B <- 100                   # plot radius (B)
b <- seq(0, B, length=J+1) # distance break points
area <- pi*b^2             # area of each circle
psi <- (area[-1]-area[-(J+1)]) / area[J+1]
pbar3 <- numeric(J)        # average detection probability
pi3 <- numeric(J+1)        # multinomial cell probs
for(j in 1:J) {
    pbar3[j] <- integrate(function(x) exp(-x^2/(2*sigma^2))*x,
                          lower=b[j], upper=b[j+1])$value *
                          (2*pi/diff(area)[j])
    pi3[j] <- pbar3[j]*psi[j] }; pi3[J+1] <- 1-sum(pi3[1:J])
@
  \pause
  \vfill
  Detections in each distance interval
  \vspace{-6pt}
<<sim-hds-y3,size='scriptsize'>>=
y3.all <- matrix(NA, nrow=nSites, ncol=J+1)
for(i in 1:nSites) {
    y3.all[i,] <- rmultinom(n=1, size=N3[i], prob=pi3)    }
y3 <- y3.all[,1:J]  ## Drop final cell
@ 
\end{frame}



\begin{frame}[fragile]
  \frametitle{Observed distances}
  \centering
<<dist-hist3,fig.height=5,out.width="90%",size='scriptsize',echo=-1>>=
par(mai=c(0.9,0.9,0.1,0.1))  
plot(b[-(J+1)]+10, colSums(y3), type="h", lwd=80, lend=2, col="tan",
     xlim=c(0,100), ylim=c(0, 70), xlab="Distance", ylab="Detections")
@   
\end{frame}




\begin{frame}[fragile]
  \frametitle{Point transects, covariates}
  \small
  Abundance
  \vspace{-6pt}
<<sim-hds-covN4-pt,size='scriptsize'>>=
elevation <- rnorm(nSites)  
beta0 <- 2; beta1 <- 1
lambda4 <- exp(beta0 + beta1*elevation)
N4 <- rpois(n=nSites, lambda=lambda4)
@
  \pause
  \vfill
  Multinomial cell probabilities
  \vspace{-6pt}
<<sim-hds-cov4-pt,size='scriptsize'>>=
noise <- rnorm(nSites)
alpha0 <- 3; alpha1 <- -0.5
sigma4 <- exp(alpha0 + alpha1*noise)
pi4 <- matrix(NA, nSites, J+1) # multinomial cell probs
for(i in 1:nSites) {
  for(j in 1:J) {
      pi4[i,j] <- integrate(function(x) exp(-x^2/(2*sigma4[i]^2))*x,
          lower=b[j], upper=b[j+1])$value*(2*pi/diff(area)[j])*psi[j] }
  pi4[i,J+1] <- 1-sum(pi4[i,1:J]) } 
@
  \pause
  \vfill
  Detections in each distance interval
  \vspace{-6pt}
<<sim-hds-y4-pt,size='scriptsize'>>=
y4.all <- matrix(NA, nrow=nSites, ncol=J+1)
for(i in 1:nSites) {
    y4.all[i,] <- rmultinom(n=1, size=N4[i], prob=pi4[i,])    }
y4 <- y4.all[,1:J]
@ 
\end{frame}






\begin{frame}[fragile]
  \frametitle{Simulated data}
  \begin{columns}
    \begin{column}{0.4\textwidth}
      \small
      Observations
%      \tiny
  \vspace{-6pt}
<<sim-nocov-dat4-pt,size='tiny'>>=
y4[1:25,]
@ 
  \end{column}
  \begin{column}{0.6\textwidth}
    \pause
%    \scriptsize
    {\centering Summary stats \\}
    \vspace{24pt}
    \small
    Proportion of sites known to be occupied
    \vspace{-6pt}
<<sim-nocov-ssO-pt,size='scriptsize'>>=
# Max count at each site
maxCounts <- apply(y4, 1, max) 
naiveOccupancy <- sum(maxCounts>0)/nSites
naiveOccupancy 
@
  \pause
  \vfill
  \small
  Total detections in each distance interval
  \vspace{-6pt}
<<sim-nocov-ss4-pt,size='scriptsize'>>=
colSums(y4)
@
  \pause
  \vfill
  Naive abundance
  \vspace{-6pt}
<<sim-nocov-ss4sum-pt,size='scriptsize'>>=
sum(y4)
@
  \end{column}
  \end{columns}
\end{frame}






\subsection{Likelihood-based inference}


\begin{frame}[fragile]
  \frametitle{Prepare data in `unmarked'}
  \small
  Note the new arguments.
  \vspace{-6pt}
<<un-umf-pt,size='tiny'>>=
umf4 <- unmarkedFrameDS(y=y4, siteCovs=data.frame(elevation,noise), dist.breaks=b,
                       survey="point", unitsIn="m")
@
\pause
<<wfac-pt,size='tiny'>>=
summary(umf4)
@ 
\end{frame}



\begin{frame}[fragile]
  \frametitle{Fit the model}
  \footnotesize
<<un-fit-pt,size='tiny'>>=
## fm4 <- distsamp(~noise ~elevation, umf4, keyfun="exp")     # negative exp
## fm4 <- distsamp(~noise ~elevation, umf4, keyfun="hazard")  # hazard rate
fm4 <- distsamp(~noise ~elevation, umf4, keyfun="halfnorm")   # half-normal
fm4
@
\pause
\vfill
Compare to actual parameter values:
\vspace{-6pt}
<<un-compare-pt,size='tiny'>>=
c(beta0=beta0, beta1=beta1); c(alpha0=alpha0, alpha1=alpha1)
@ 
\end{frame}





\subsection{Bayesian inference}




\begin{frame}
  \frametitle{Outline}
  \Large
  \tableofcontents[currentsection,currentsubsection]
\end{frame}



\begin{frame}[fragile]
  \frametitle{\normalsize Conditional-on-$N$ and $n_i=\sum_{j=1}^{J} y_{i,j}$}
\vspace{-3pt}
<<bugs-pt,size='tiny',echo=FALSE,comment='',background='lightblue'>>=
writeLines(readLines("distsamp-point-mod.jag"))
@
\end{frame}





\begin{frame}[fragile]
  \frametitle{Data, inits, and parameters}
  Put data in a named list
  \vspace{-12pt}
<<bugs-data-pt,size='footnotesize'>>=
jags.data.pt <- list(y=y4, n=rowSums(y4), area=diff(area),
                     b=b,           # Distance break points
                     psi=psi,       # Pr(occuring in bin j)
                     elevation=elevation, noise=noise,
                     nSites=nSites, nBins=J)
@
\pause
\vfill
  Initial values
  \vspace{-12pt}
<<bugs-inits-pt,size='footnotesize'>>=
jags.inits.pt <- function() {
    list(lambda.intercept=runif(1), alpha0=rnorm(1, 5),
         N=rowSums(y4)+rpois(nrow(y4), 2))
}
@ 
\pause
\vfill
  Parameters to monitor
  \vspace{-12pt}
<<bugs-pars-pt,size='small'>>=
jags.pars.pt <- c("beta0", "beta1",
                  "alpha0", "alpha1", "totalAbundance")
@ 
\end{frame}





\begin{frame}[fragile]
  \frametitle{MCMC}
  \small
<<bugs-mcmc-pt,size='scriptsize',message=FALSE,cache=TRUE,results='hide'>>=
jags.post.pt <- jags.basic(data=jags.data.pt, inits=jags.inits.pt,
                           parameters.to.save=jags.pars.pt,
                           model.file="distsamp-point-mod.jag",
                           n.chains=3, n.adapt=100, n.burnin=0,
                           n.iter=2000, parallel=TRUE)
@ 
\vfill
<<jags-sum-pt,size='scriptsize',cache=TRUE>>=
round(summary(jags.post.pt)$quantile, digits=3)
@ 
\end{frame}




\section{Summary}


\begin{frame}
  \frametitle{Distance sampling summary}
  Assumptions
  \begin{itemize}
    \small
    \item Animals don't move during the survey
    \item Animals are uniformly distributed with respect to the
      transects
    \item Detection is certain on the transect, i.e. $p=1$ when $x=0$. 
    \item Detections are independent
  \end{itemize}
  \pause
  \vfill
  \small
  If these assumptions can be met, distance sampling is a powerful
  method allowing for inference about abundance and density using data
  from a single visit. \\
\end{frame}




\section{Assignment}




\begin{frame}[fragile]
  \frametitle{Assignment}
  % \small
  \footnotesize
  Create a self-contained R script or Rmarkdown file to do the following:
  \vfill
  \begin{enumerate}
%    \small
    \footnotesize
    \item Fit a distance sampling model with a half-normal detection
      function and the following covariates to the black-throated blue
      warbler data ({\tt btbw\_data\_distsamp.csv}) in `unmarked' and
      `JAGS':   
      \begin{itemize}
        \footnotesize
        \item Density covariates: {\tt Elevation, UTM.N, UTM.W}
        \item Detection covariates: {\tt Wind, Noise}
        \item Response: {\scriptsize \tt btbw0\_20, btbw20\_40, btbw40\_60, btbw60\_80, btbw80\_100}
      \end{itemize}
    \item Using the model fitted in `unmarked', create two graphs of
      the predictions, one for density and the other for the scale
      parameter ($\sigma$).
    \item Compare the half-normal model to two other models with the
      same covariates, but with negative exponential and hazard
      rate detection functions. Which has the lowest AIC? 
  \end{enumerate}
  \pause
  \vfill
  Suggestions:
  \begin{itemize}
    \item Convert response variables to matrix with \inr{as.matrix}
    \item Standardize covariates
  \end{itemize}
  \pause
  \vfill
  Upload your {\tt .R} or {\tt .Rmd} file to ELC before Tuesday. 
\end{frame}





\end{document}

