\documentclass[color=usenames,dvipsnames]{beamer}
%\documentclass[color=usenames,dvipsnames,handout]{beamer}

\usepackage[roman]{../lectures}
%\usepackage[sans]{../lectures}
%\usepackage{mathrsfs}

\hypersetup{pdfpagemode=UseNone,pdfstartview={FitV}}



% Load function to compile and open PDF
<<build-fun,include=FALSE,purl=FALSE>>=
source("../rnw2pdf.R")
@

% Compile and open PDF
<<buildit,include=FALSE,eval=FALSE>>=
rnw2pdf("lecture-distsamp-HDS")
rnw2pdf("lecture-distsamp-HDS", tangle=TRUE)
@ 


<<knitr-theme,include=FALSE,purl=FALSE>>=
knit_theme$set("edit-kwrite")
@


% New command for inline code that isn't to be evaluated
\definecolor{inlinecolor}{rgb}{0.878, 0.918, 0.933}
\newcommand{\inr}[1]{\colorbox{inlinecolor}{\texttt{#1}}}




\begin{document}




\begin{frame}[plain]
  \LARGE
  \centering
  {
    \LARGE Lecture 9 -- Hierarchical distance sampling: \\
    \Large simulation, fitting, prediction, and random effects \\
  }
  {\color{default} \rule{\textwidth}{0.1pt} }
  \vfill
  \large
  WILD(FISH) 8390 \\
  Estimation of Fish and Wildlife Population Parameters \\
  \vfill
  \large
  Richard Chandler \\
  University of Georgia \\
\end{frame}






\section{Overview}



\begin{frame}[plain]
  \frametitle{Outline}
  \Large
  \only<1>{\tableofcontents}%[hideallsubsections]}
  \only<2 | handout:0>{\tableofcontents[currentsection]}%,hideallsubsections]}
\end{frame}



\begin{frame}
  \frametitle{Distance sampling overview}
  Distance sampling is one of the oldest wildlife sampling methods. \\
  \pause
  \vfill
  It's based on the simple idea that detection probability should
  decline with distance between an an animal and a transect. \\
  \pause
  \vfill
  If we can estimate the function describing how $p$ declines with
  distance $x$, we can estimate abundance \pause (if certain assumptions
  hold, as always). \\
\end{frame}



\begin{frame}
  \frametitle{Distance sampling overview}
  The simplest estimator of abundance is 
  \[
    \hat{N} = \frac{n}{\hat{p}}
  \]
  where $n$ is the number of individuals detected, $p$ is detection
  probability, and $E(n)=Np$. \\
  \pause
  \vfill
  In distance sampling, detection probability is a \alert{function} of
  distance, rather than a constant, such that all individuals have
  unique detection probabilities. \\
  \pause
  \vfill
  As a result, we have to replace
  $p$ with \alert{average} detection probability:
  \[
    \hat{N} = \frac{n}{\hat{\bar{p}}}
  \]
  \pause
  \vfill
  How do we compute average detection probability ($\bar{p}$)?
\end{frame}



\begin{frame}
  \frametitle{Detection functions}
  To estimate average detection probability ($\bar{p}$), we need:
  \begin{itemize}
    \item A detection function $g(x)$ describing how $p$ declines with
      distance.
    \item A probability distribution $p(x)$ describing the
      distances of all animals (detected and not detected). 
  \end{itemize}
  \pause
  \vfill
  \centering
  The most common functions are: \\
  \vspace{6pt}
  \begin{tabular}{lc}
%    \centering
    \hline
    Detection function & $g(x)$ \\
    \hline
    Half normal & $\exp(-x^2 / (2\sigma^2))$ \\
    Negative exponential & $\exp(-x/\sigma)$ \\
    Hazard rate & $1-\exp(-(x/a)^{-b})$ \\
    \hline
  \end{tabular}
\end{frame}


\begin{frame}[fragile]
  \frametitle{Half-normal}
  \footnotesize
  \[
    g(x,\sigma) = \exp(-x^2/(2\sigma^2))
  \]
  \vspace{-12pt}
  \centering
<<hn,size='scriptsize',fig.width=7,fig.height=5,out.width="70%",echo=-1>>=
par(mai=c(0.9,0.9,0.1,0.1))  
sigma1 <- 25; sigma2 <- 50
plot(function(x) exp(-x^2/(2*sigma1^2)), from=0, to=100, 
     xlab="Distance (x)", ylab="Detection probability (p)")
plot(function(x) exp(-x^2/(2*sigma2^2)), from=0, to=100, add=TRUE, col=4)
legend(70, 1, c("sigma=25", "sigma=50"), lty=1, col=c("black","blue"))
@ 
\end{frame}




\begin{frame}[fragile]
  \frametitle{Negative exponential}
  \footnotesize
  \[
    g(x,\sigma) = \exp(-x/\sigma)
  \]
  \vspace{-12pt}
  \centering
<<nexp,size='scriptsize',fig.width=7,fig.height=5,out.width="70%",echo=-1>>=
par(mai=c(0.9,0.9,0.1,0.1))  
sigma1 <- 25; sigma2 <- 50
plot(function(x) exp(-x/sigma1), from=0, to=100, 
     xlab="Distance (x)", ylab="Detection probability (p)")
plot(function(x) exp(-x/sigma2), from=0, to=100, add=TRUE, col=4)
legend(70, 1, c("sigma=25", "sigma=50"), lty=1, col=c("black","blue"))
@ 
\end{frame}





\begin{frame}[fragile]
  \frametitle{Hazard rate}
  \footnotesize
  \[
    g(x,a,b) = 1-\exp(-(x/a)^{-b})
  \]
  \vspace{-12pt}
  \centering
<<haz,size='scriptsize',fig.width=7,fig.height=5,out.width="70%",echo=-1>>=
par(mai=c(0.9,0.9,0.1,0.1))  
a1 <- 25; a2 <- 50; b1 <- 2; b2 <- 10
plot(function(x) 1-exp(-(x/a1)^(-b1)), from=0, to=100, 
     xlab="Distance (x)", ylab="Detection probability (p)", ylim=0:1)
plot(function(x) 1-exp(-(x/a2)^(-b2)), from=0, to=100, add=TRUE, col=4)
legend(70, 1, c("a=25, b=2", "a=50, b=10"), lty=1, col=c("black","blue"))
@ 
\end{frame}



\begin{frame}
  \frametitle{Average detection probability ($\bar{p}$)}
  Regardless of the chosen detection function, average detection
  probability is defined as: 
  \[
%     \bar{p} = \int g(x)p(x) \; \mathrm{d}x
     \bar{p} = \int_{b_1}^{b_2} g(x)p(x) \; \mathrm{d}x
   \]
   where $b_1$ and $b_2$ are the limits of the distance interval.
  \pause
  \vfill
  All that remains is the specification of $p(x)$, the
  distribution of distances (between animals and the transect).
  \pause
  \vfill
  To understand why $p(x)$ is needed, think about it this way:
  \begin{itemize}
    \item If most animals are close to the transect, $\bar{p}$ would
      be high
    \item If most animals are far from the transect, $\bar{p}$ would
      be low
  \end{itemize}
  % \pause
  % \vfill
  % The standard assumption (for line transects) is that animals are
  % uniformly distributed with respect to the transect
\end{frame}



\begin{frame}
  \frametitle{What should we use for $p(x)$?}
  What distribution should we use for the distances between animals
  and transects?
  \pause
  \vfill
  In \alert{line-transect sampling}, it is often assumed that animals
  are uniformly distributed with respect to the transect.
  \begin{itemize}
    \item Consequently, $p(x) = 1/B$ where $B$ is the width of the
      transect.
    \item This is guaranteed by random transect placement
    \item Can also be justified if animals are neither attracted to
      the transects or avoid them. 
  \end{itemize}
  \pause
  \vfill
  In \alert{point-transect sampling}, we make the same assumptions,
  but we recognize that area increases with distance from a point.
  \begin{itemize}
    \item Consequently, $p(x) = 2x/B^2$ (see pg. 408 in AHM)
  \end{itemize}
\end{frame}




\begin{frame}[fragile]
  \frametitle{Computing $\bar{p}$}
  Half-normal detection function and line-transect sampling.
  \vspace{-12pt}
<<pbar-hn,size='footnotesize'>>=
B <- 100                                         # Transect width
g <- function(x, sigma=25) exp(-x^2/(2*sigma^2)) # g(x)
pdf <- function(x) 1/B                           # p(x), constant
@
\pause
\vfill
  Do the integration
  \vspace{-12pt}
<<pbar-hn-int,size='footnotesize'>>=
gp <- function(x) g(x)*pdf(x)
(pbar <- integrate(gp, lower=0, upper=B)$value)
@ 
\pause
\vfill
  Note the equivalence
  \vspace{-12pt}
<<pbar-hn-int2,size='footnotesize'>>=
(pbar <- integrate(g, lower=0, upper=B)$value / B)
@
\pause
\vfill
\centering
There's a 31.3\% chance of detecting an individual within 100 m of the 
transect. \\
\end{frame}




\begin{frame}
  \frametitle{In-class exercise}
  Building off the previous example\dots
  \begin{enumerate}
    \item Compute $\bar{p}$ when $\sigma=50, 100, \mathrm{and}\, 200$, instead of
      $\sigma=25$. 
    \item Repeat step 1, but for point transect sampling where
      $p(x)=2x/B^2$, instead of $p(x)=1/B$. 
  \end{enumerate}
\end{frame}




\begin{frame}
  \frametitle{Conventional vs hierarchical distance sampling}
  \alert{Conventional} distance sampling focuses on estimating the
  detection function, which describes how the probability of detecting
  an individual decreases with distance from the observer. Abundance
  and density are estimated, but there is no model for
  spatial variation in abundance/density.
  \pause
  \vfill
  \alert{Hierarchical} distance sampling is similar, but includes a
  model for spatial variation in abundance/density -- it's really just
  a multinomial $N$-mixture model with a unique function for computing
  the multinomial cell probabilities.
\end{frame}




\begin{frame}
  \frametitle{Hierarchical distance sampling}
  \small
  State model (with Poisson assumption)
  \begin{gather*}
    \mathrm{log}(\lambda_i) = \beta_0 + \beta_1 {\color{blue} w_{i1}} +
    \beta_2 {\color{blue} w_{i2}} + \cdots \\
    N_i \sim \mathrm{Poisson}(\lambda_i)
  \end{gather*}
  \pause
%  \vfill
  Observation model
  \begin{gather*}
    \mathrm{log}(\sigma_{i}) = \alpha_0 + \alpha_1 {\color{blue} w_{i1}}
    + \alpha_2 {\color{blue} w_{i3}} + \cdots \\
%    \bar{p}_{ij} = \int_{b_j}^{b_{j+1}} g(x,\sigma_i)p(x) \; \mathrm{d}x \\
    \{y_{i1}, \dots, y_{iK}\}  \sim \mathrm{Multinomial}(N_i,
%    \pi(\bar{p}_{i1}, \dots, \bar{p}_{iJ}))
    \pi(b_1, \dots, b_{J+1}, x, \sigma_i))
  \end{gather*}
  \pause
%  \vfill
  \small
  Definitions \\
%  \footnotesize
  $\lambda_i$ -- Expected value of abundance at site $i$ \\
  $N_i$ -- Realized value of abundance at site $i$ \\
  $\sigma_{i}$ -- Scale parameter of detection function $g(x)$ at site $i$ \\
%  $\pi(g(x),p(x))$ -- Function computing multinomial cell probs \\
  $\pi(x,b,\sigma_i)$ -- Function computing multinomial cell probs \\
  $y_{ij}$ -- count for distance bin $j$ (final count is unobserved) \\
%  \vfill
  $\color{blue} w_1$, $\color{blue} w_2$, $\color{blue} w_3$ -- site covariates %\hfill %\\
%  \vspace{12pt}
%  $\color{Purple} w$ -- observation covariate
\end{frame}




\begin{frame}
  \frametitle{Multinomial cell probabilities}
  \small
%  dsf
%  \pause
%  \vfill
  Definitions
  \begin{itemize}
  \small
    \setlength\itemsep{1pt}
    \item $y_{ij}$ -- number of individuals detected at site $i$ in bin $j$
    \item $\sigma_i$ -- scale parameter of detection function $g(x)$
    \item $b_1, \dots, b_J$ -- Distance break points defining $J$ distance intervals
  \end{itemize}
  \pause \vfill
  \footnotesize
  \begin{columns}
    \column{0.9\paperwidth}
    \begin{tabular}{lc}
      \hline
      \centering
      Description                       & Multinomial cell probability \\
      \hline
      Pr(occurs and detected in first distance bin)  & $\pi_1 = \int_{b_1}^{b_2} g(x,\sigma_i)p(x)\, \mathrm{d}x$   \\
      Pr(occurs and detected in second distance bin)  & $\pi_2 = \int_{b_2}^{b_3} g(x,\sigma_i)p(x)\, \mathrm{d}x$   \\
      {\centering $\cdots$}             & $\cdots$                     \\
      Pr(occurs and detected in last distance bin)  & $\pi_J = \int_{b_{J-1}}^{b_J} g(x,\sigma_i)p(x)\, \mathrm{d}x$   \\
      Pr(not detected)                  & $\pi_{K} = 1-\sum_{j=1}^J \pi_j$          \\
      \hline
    \end{tabular}
  \end{columns}
\end{frame}








\section{Simulation}

%\section{Line transects}

%\subsection{Likelihood-based methods}

\begin{frame}
  \frametitle{Outline}
  \Large
%  \tableofcontents[currentsection,currentsubsection]
  \tableofcontents[currentsection]
\end{frame}








<<include=FALSE,echo=FALSE>>=
set.seed(34889243)
@ 

\begin{frame}[fragile]
  \frametitle{HDS, no covariates}
  \small
  Abundance
<<sim-rem-nocov1,size='scriptsize'>>=
nSites <- 100
lambda1 <- 2.6  ## Expected value of N
N1 <- rpois(n=nSites, lambda=lambda1)
@
% \item
  \pause
  \vfill
  \alert{Average} detection probability and multinomial counts%, including individuals
%  \alert{not} detected
<<sim-nocov2,size='scriptsize'>>=
J <- 5       # distance bins
K <- J+1     # multinomial cells
sigma <- 25  # scale parameter
B <- 100     # transect width
b <- seq(0, B, length=J+1) # distance break points
pi1 <- numeric(K) # multinomial cell probs
for(j in 1:J) {
    pi1[j] <- integrate(function(x) exp(-x^2/(2*sigma^2)),
                        lower=b[j], upper=b[j+1])$value / B
}
pi1[K] <- 1-sum(pi1[1:J])
y1.all <- matrix(NA, nrow=nSites, ncol=K)
for(i in 1:nSites) {
    y1.all[i,] <- rmultinom(n=1, size=N1[i], prob=pi1)    }
@
%\end{enumerate}
  \pause
  \vfill
  Discard final column of individuals not detected
<<N1y1,size='scriptsize'>>=
y1 <- y1.all[,-K]
head(y1, n=3)
@ 
\end{frame}



\begin{frame}[fragile]
  \frametitle{Removal model, covariates}
  \small
  Covariates
  \vspace{-6pt}
<<sim-cov1,size='scriptsize'>>=
streamDepth <- rnorm(nSites)
@
% \item
\vfill
  Coefficients, $\lambda$, and $p$
  \vspace{-6pt}
<<nsim-cov2,size='scriptsize'>>=
beta0 <- 1; beta1 <- 0.5
lambda2 <- exp(beta0 + beta1*streamDepth)
alpha0 <- 0; alpha1 <- -1
p2 <- plogis(alpha0 + alpha1*streamDepth)
pi2 <- t(sapply(p2, function(p) c(p, (1-p)*p, (1-p)^2*p, (1-p)^3)))
@   
% \item
\vfill
  Simulate abundance and removal data
  \vspace{-6pt}
<<sim-cov3,size='scriptsize'>>=
N2 <- rpois(nSites, lambda=lambda2)         ## local abundance 
y2.all <- matrix(NA, nrow=nSites, ncol=K)
for(i in 1:nSites) {
    y2.all[i,] <- rmultinom(n=1, size=N2[i], prob=pi2[i,])
}
y2 <- y2.all[,-K] ## Discard final column... individuals not detected
@   
%\end{enumerate}
\end{frame}




\begin{frame}[fragile]
  \frametitle{Simulated data}
  \begin{columns}
    \begin{column}{0.4\textwidth}
      \small
      Observations
%      \tiny
  \vspace{-6pt}
<<sim-nocov-dat,size='scriptsize'>>=
y2[1:19,]
@ 
  \end{column}
  \begin{column}{0.6\textwidth}
    \pause
%    \scriptsize
    {\centering Summary stats \\}
    \vspace{24pt}
    \small
    Proportion of sites known to be occupied
    \vspace{-6pt}
<<sim-nocov-ss1,size='scriptsize'>>=
# Max count at each site
maxCounts <- apply(y2, 1, max) 
naiveOccupancy <- sum(maxCounts>0)/nSites
naiveOccupancy 
@
  \pause
  \vfill
  \small
  Captures on each pass
  \vspace{-6pt}
<<sim-nocov-ss2,size='scriptsize'>>=
colSums(y2)
@
  \pause
  \vfill
  Naive abundance
  \vspace{-6pt}
<<sim-nocov-ss3,size='scriptsize'>>=
sum(y2)
@
<<un,include=FALSE>>=
library(unmarked)
@ 
  \end{column}
  \end{columns}
\end{frame}









%\section{Prediction}



% \begin{frame}
%   \frametitle{Outline}
%   \Large
%   \tableofcontents[currentsection]
% \end{frame}






% \begin{frame}[fragile]
%   \frametitle{Prepare data in `unmarked'}
%   \small
% <<un-umf,size='tiny'>>=
% umf <- unmarkedFrameMPois(y=y2, siteCovs=data.frame(streamDepth), type="removal")
% @
% \pause
% <<wfac,size='scriptsize'>>=
% summary(umf)
% @ 
% \end{frame}


% > fm <- multinomPois(~temp ~forest, umf)    

% error: Mat::operator(): index out of bounds
% terminate called after throwing an instance of 'std::logic_error'
%   what():  Mat::operator(): index out of bounds


% \begin{frame}[fragile]
%   \frametitle{Fit the model}
%   \footnotesize
%   \inr{multinomPois} has similar arguments as \inr{occu} and
%   \inr{pcount}. 
% <<un-fit,size='tiny'>>=
% fm <- multinomPois(~streamDepth ~streamDepth, umf)    
% fm
% @
% \pause
% \vfill
% Compare to actual parameter values:
% \vspace{-6pt}
% <<un-compare,size='tiny'>>=
% c(beta0=beta0, beta1=beta1); c(alpha0=alpha0, alpha1=alpha1)
% @ 
% \end{frame}








\begin{frame}[fragile]
  \frametitle{Prediction in `unmarked'}
  \small
  Create \texttt{data.frame} with prediction covariates. 
  \vspace{-6pt}
<<preddat,size='footnotesize'>>=
pred.data <- data.frame(streamDepth=seq(-3, 3, length=20))
@
\pause
\vfill
Get predictions of $\lambda$ for each row of prediction data.
  \vspace{-6pt}
<<predpsi,size='footnotesize'>>=
lambda.pred <- predict(fm, newdata=pred.data,
                       type='state', append=TRUE)
@
\pause
\vfill
  View $\lambda$ predictions
  \vspace{-6pt}
<<psi-head,size='footnotesize'>>=
print(head(lambda.pred), digits=2)
@
\end{frame}





% \begin{frame}[fragile]
%   \frametitle{Prediction in `unmarked'}
% <<pred-lam2,fig.width=7,fig.height=5,size='tiny',out.width='80%',fig.align='center',echo=-1>>=
% par(mai=c(0.9,0.9,0.1,0.1))
% plot(Predicted ~ streamDepth, lambda.pred, ylab="Expected value of abundance",
%      ylim=c(0,30), xlab="Stream depth", type="l")
% lines(lower ~ streamDepth, lambda.pred, col="grey")
% lines(upper ~ streamDepth, lambda.pred, col="grey")
% points(rowSums(y2)~streamDepth)
% lines(lowess(rowSums(y2)~streamDepth), col="blue")  ## Loess line for fun (it's way off)
% @   
% \end{frame}







\subsection{Bayesian methods}


\begin{frame}
  \frametitle{Outline}
  \Large
  \tableofcontents[currentsection,currentsubsection]
\end{frame}


% \begin{frame}
%   \frametitle{Bayesian multinomial $N$-mixture models}
%   There are several equivalent formulations of the multinomial, some
%   of which we can exploit to fit the model in JAGS.
%   \begin{itemize}
%     \item Conditional-on-$N$, missing $y_{iK}$
%     \item Conditional-on-$N$, conditional on $n_i=\sum_{k=1}^{K-1} y_{i,k}$
%     \item Conditional-on-$N$, sequential binomial
%     \item Marginalized $N$
%   \end{itemize}
%   \pause
%   \vfill
%   These are just fun probability tricks that can help improve MCMC performance. \\
% \end{frame}




% \begin{frame}[fragile]
%   \frametitle{Conditional-on-$N$, missing $y_k$}
% \end{frame}




% \begin{frame}[fragile]
%   \frametitle{\normalsize Conditional-on-$N$ and $n_i=\sum_{k=1}^{K-1} y_{i,k}$}
% \vspace{-3pt}
% <<bugs-removal2,size='scriptsize',echo=FALSE>>=
% writeLines(readLines("removal-mod2.jag"))
% @
% \end{frame}





% \begin{frame}[fragile]
%   \frametitle{Data, inits, and parameters}
%   Put data in a named list
%   \vspace{-12pt}
% <<bugs-data2,size='small'>>=
% jags.data.rem2 <- list(y=y2, n=rowSums(y2),
%                        streamDepth=streamDepth,
%                        nSites=nSites, nPasses=nPasses)
% @
% \pause
% \vfill
%   Initial values
%   \vspace{-12pt}
% <<bugs-inits,size='small'>>=
% jags.inits.rem <- function() {
%     list(lambda.intercept=runif(1), alpha0=rnorm(1),
%          N=rowSums(y2)+rpois(nrow(y2), 2))
% }
% @ 
% \pause
% \vfill
%   Parameters to monitor
%   \vspace{-12pt}
% <<bugs-pars,size='small'>>=
% jags.pars.rem <- c("beta0", "beta1",
%                    "alpha0", "alpha1", "totalAbundance")
% @ 
% \end{frame}





% \begin{frame}[fragile]
%   \frametitle{MCMC}
%   \small
% <<bugs-mcmc-rem2,size='tiny',message=FALSE,cache=TRUE,results='hide'>>=
% library(jagsUI)
% jags.post.rem2 <- jags.basic(data=jags.data.rem2, inits=jags.inits.rem,
%                              parameters.to.save=jags.pars.rem, model.file="removal-mod2.jag",
%                              n.chains=3, n.adapt=100, n.burnin=0, n.iter=2000, parallel=TRUE)
% @ 
% %\end{frame}


% \begin{frame}[fragile]
%   \frametitle{Traceplots and density plots}
% <<bugs-plot1-rem2,size='footnotesize',out.width="0.7\\textwidth",fig.align='center'>>=
% plot(jags.post.rem2[,jags.pars.rem[1:3]])
% @ 
% \end{frame}



% \begin{frame}[fragile]
%   \frametitle{Traceplots and density plots}
% <<bugs-plot2-rem2,size='footnotesize',out.width="0.7\\textwidth",fig.align='center'>>=
% plot(jags.post.rem2[,jags.pars.rem[4:5]])
% @ 
% \end{frame}




%\section{Point transects}



\section{Random effects}





\section{Assignment}




\begin{frame}[fragile]
  \frametitle{Assignment}
  % \small
  \footnotesize
  Create a self-contained R script or Rmarkdown file
  to do the following:
  \vfill
  \begin{enumerate}
%    \small
    \footnotesize
    \item Simulate \alert{independent} double observer data with the following
      properties:
      \begin{itemize}
        \item nSites=200
        \item $\lambda=3$
        \item $p_1=0.3$ and $p_2=0.5$
      \end{itemize}
    \item Fit the model using `unmarked'\footnote{\scriptsize You will
        need to create an observation covariate indicating observer A
        and B} and JAGS
    \item Use the point estimate of $p$ to compute the $\pi$ probabilities.
    \item Repeat steps 1-3 using the \alert{dependent} double observer
      method. 
  \end{enumerate}
  \vfill
  Upload your {\tt .R} or {\tt .Rmd} file to ELC before Monday. 
\end{frame}





\end{document}

