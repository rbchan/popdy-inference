\documentclass[color=usenames,dvipsnames]{beamer}
%\documentclass[color=usenames,dvipsnames,handout]{beamer}

\usepackage[roman]{../lectures}
%\usepackage[sans]{../lectures}

\usepackage{booktabs}

\hypersetup{pdfpagemode=UseNone,pdfstartview={FitV}}

\mode<handout>{
  \usetheme{default}
%  \setbeamercolor{background canvas}{bg=black!5}
% \pgfpagesuselayout{4 on 1}[letterpaper,landscape,border shrink=2.5mm]
%  \pgfpagesuselayout{2 on 1}[letterpaper,border shrink=10mm]
}


% Load function to compile and open PDF
<<build-fun,include=FALSE,purl=FALSE>>=
source("../rnw2pdf.R")
@

% Compile and open PDF
<<buildit,include=FALSE,eval=FALSE>>=
rnw2pdf("lecture-Nmix-multinomial-I")
rnw2pdf("lecture-Nmix-multinomial-I", tangle=TRUE)
@ 


<<knitr-theme,include=FALSE,purl=FALSE>>=
##knit_theme$set("navajo-night")
knit_theme$set("edit-kwrite")
@


%% New command for inline code that isn't to be evaluated
\definecolor{inlinecolor}{rgb}{0.878, 0.918, 0.933}
\newcommand{\inr}[1]{\colorbox{inlinecolor}{\texttt{#1}}}




\begin{document}




\begin{frame}[plain]
  \LARGE
%  \maketitle
  \centering
  {\LARGE Lecture 7 -- Multinomial $N$-mixture models: \\ simulation, fitting, and prediction} \\
  {\color{default} \rule{\textwidth}{0.1pt}}
  \vfill
  \large
  WILD(FISH) 8390 \\
%   Estimation of Fish and Wildlife Population Parameters \\
  Inference for Models of Fish and Wildlife Population Dynamics \\
  \vfill
  \large
  Richard Chandler \\
  University of Georgia \\
\end{frame}



\section{Overview}



\begin{frame}[plain]
  \frametitle{Outline}
  \Large
  \only<1>{\tableofcontents}%[hideallsubsections]}
  \only<2 | handout:0>{\tableofcontents[currentsection]}%,hideallsubsections]}
\end{frame}



\begin{frame}
  \frametitle{Overview}
  The objectives are the same as with binomial $N$-mixture models. %\\
%  \pause
%  \vfill
  We want to:
  \begin{itemize}
    \item Estimate abundance
    \item Model spatial variation in abundance/density
  \end{itemize}
  \pause
  \vfill
  The difference is that, instead of repeated count data at each site,
  we have data from sampling methods such as:
  \begin{itemize}
    \item<3-> Double observer sampling
    \item<3-> Removal sampling
    \item<3-> Mark-recapture
    \item<3-> Distance sampling
    \item<3-> And other methods that yield multinomial counts\dots
  \end{itemize}
\end{frame}




\begin{frame}
  \frametitle{Multinomial $N$-mixture model}
  \small
  State model (with Poisson assumption)
  \begin{gather*}
    \mathrm{log}(\lambda_i) = \beta_0 + \beta_1 {\color{blue} x_{i1}} +
    \beta_2 {\color{blue} x_{i2}} + \cdots \\
    N_i \sim \mathrm{Poisson}(\lambda_i)
  \end{gather*}
  \pause
  \vfill
  Observation model
  \begin{gather*}
    \mathrm{logit}(p_{ij}) = \alpha_0 + \alpha_1 {\color{blue} x_{i1}}
    + \alpha_2 {\color{Purple} w_{ij}} + \cdots \\
    \{y_{i1}, \dots, y_{iK}\}  \sim \mathrm{Multinomial}(N_i,
    \pi(p_{i1}, \dots, p_{iJ}))
  \end{gather*}
  \pause
%  \vfill
  \small
  Definitions \\
  \footnotesize
  $\lambda_i$ -- Expected value of abundance at site $i$ \\
  $N_i$ -- Realized value of abundance at site $i$ \\
  $p_{ij}$ -- Probability of detecting \alert{an individual} at site $i$ on occasion $j$ \\
  $\pi(p)$ -- Function mapping $J$ detection probs to
  $K$ multinomial cell probs \\
  $y_{ik}$ -- Multinomial count data (\alert{The final count is not observed!}) \\
%  \vfill
  $\color{blue} x_1$ and $\color{blue} x_2$ -- site covariates \hfill %\\
%  \vspace{12pt}
  $\color{Purple} w$ -- observation covariate
\end{frame}




\begin{frame}[fragile]
  \frametitle{The multinomial distribution}
  \small
  This is the first multivariate distribution we've covered. \\
  \[
    \{y_{1}, \dots, y_{K}\}  \sim \mathrm{Multinomial}(N, \{\pi_i, \dots, \pi_K\})
  \]
  \pause
%  \vfill
  The multinomial describes how $N$ objects are distributed among
  $K$ classes (also called bins, categories, etc\dots). \\
  \pause
  \vfill
  Imagine $N=20$ animals are studied for 1 year and there are 3
  possible ``fates'' with associated probabilities: \\
  $\Pr(\mathrm{survived})=0.5$, $\Pr(\mathrm{depredated})=0.3$, $\Pr(\mathrm{starved})=0.2$. \\
  \pause
  \vfill
  Here is one possible outcome:
  \vspace{-6pt}
<<multi-sim-concept,size='footnotesize'>>=
N <- 20
pi <- c(survived=0.5, depredated=0.3, starved=0.2)
t(rmultinom(n=1, size=N, prob=pi))
@
  \pause
%  \vfill
  \centering
  Note: the probabilities must sum to 1 and the counts must sum to $N$. \\
\end{frame}



% \begin{frame}[fragile]
%   \frametitle{\normalsize Multinomial/Categorical vs Binomial/Bernoulli}
%   \centering
%   \fbox{\includegraphics[width=0.85\textwidth]{figs/fig7-1}} \\
% \end{frame}



\begin{frame}
  \frametitle{Sampling methods}
  Benefits of the multinomial $N$-mixture model
  \begin{itemize}
    \item Can be applied to data from many sampling designs, simply by
      changing how the $\pi$ probabilities are computed. %\\
    \item Precision is typically better than binomial $N$-mixture
      models because there's more information in the data
  \end{itemize}
  \pause
  \vfill
  Removal sampling %\\
  \[
    {\pi(p)} = \{p, (1-p)p, (1-p)^2p, \dots, (1-p)^{K-1}p, (1-p)^K\}
  \]
  \pause %\vfill
  Double observer (\alert{independent observers})
  \[
    {\pi(p)} = \{p_1(1-p_2), (1-p_1)p_2, p_1p_2, (1-p_1)(1-p_2)\}
  \]
  \pause %\vfill
  Double observer (\alert{dependent observers})
  \[
    {\pi(p)} = \{p_1, (1-p_1)p_2, (1-p_1)(1-p_2)\}
  \]
\end{frame}




%\section{Simulation}

\section{Removal sampling}

\subsection{Likelihood-based methods}

\begin{frame}
  \frametitle{Outline}
  \Large
%  \tableofcontents[currentsection,currentsubsection]
  \tableofcontents[currentsection]
\end{frame}



\begin{frame}
  \frametitle{Removal sampling}
  \small
  Removal sampling is often used in electrofishing studies. \\
  \pause
  \vfill
  A stream section is surveyed $J$ times, fish are removed on each
  ``pass'', and the rate of removal tells us about capture
  probability.  
  \pause
  \vfill
  Definitions
  \begin{itemize}
    \setlength\itemsep{1pt}
    \item $y_{ij}$ -- number of individuals removed at site $i$ on pass $j$
    \item $p$ -- probability of catching an individual on a single pass
  \end{itemize}
  \pause \vfill
  \footnotesize
  \begin{tabular}{lc}
    \hline
    \centering
    Description                       & Multinomial cell probability \\
    \hline
    Pr(first captured on first pass)  & $\pi_1 = p$                  \\
    Pr(first captured on second pass) & $\pi_2 = (1-p)p$             \\
    Pr(first captured on third pass)  & $\pi_3 = (1-p)(1-p)p$        \\
    {\centering $\cdots$}             & $\cdots$                     \\
    Pr(first captured on pass $J$)    & $\pi_J = (1-p)^{J-1}p$       \\
    Pr(not captured)                  & $\pi_{J+1} = (1-p)^J$          \\
    \hline
  \end{tabular}
\end{frame}





<<include=FALSE,echo=FALSE>>=
set.seed(34889243)
@ 

\begin{frame}[fragile]
  \frametitle{Simulating removal data, no covariates}
  \small
  Abundance
<<sim-rem-nocov1,size='scriptsize',echo=-1>>=
set.seed(430)
nSites <- 100
lambda1 <- 4.6  ## Expected value of N
N1 <- rpois(n=nSites, lambda=lambda1)
@
% \item
  \pause
  \vfill
  Capture probability and multinomial counts%, including individuals
%  \alert{not} detected
<<sim-nocov2,size='scriptsize'>>=
nPasses <- 3
K <- nPasses+1  # multinomial cells
p1 <- 0.4
pi1 <- c(p1, (1-p1)*p1, (1-p1)*(1-p1)*p1, (1-p1)^3)
y1.all <- matrix(NA, nrow=nSites, ncol=K)
for(i in 1:nSites) {
    y1.all[i,] <- rmultinom(n=1, size=N1[i], prob=pi1)    }
@
%\end{enumerate}
  \pause
  \vfill
  Discard final column of individuals not detected
<<N1y1,size='scriptsize'>>=
y1 <- y1.all[,-K]
head(y1, n=3)
@ 
\end{frame}



\begin{frame}[fragile]
  \frametitle{Simulated removal data}
<<y1-kable,size='normalsize',align='center',echo=FALSE>>=
colnames(y1) <- c("Pass 1", "Pass 2", "Pass 3")
rownames(y1) <- paste("Site", 1:nrow(y1))
kable(y1[1:10,], format="latex", booktabs=TRUE, table.envir="table")
@   
\end{frame}


\begin{frame}[fragile]
  \frametitle{Removal model, covariates}
  \small
  Covariates
  \vspace{-6pt}
<<sim-cov1,size='scriptsize'>>=
streamDepth <- rnorm(nSites)
@
% \item
\vfill
  Coefficients, $\lambda$, and $p$
  \vspace{-6pt}
<<nsim-cov2,size='scriptsize',echo=1:4>>=
beta0 <- 1; beta1 <- 0.5
lambda2 <- exp(beta0 + beta1*streamDepth)
alpha0 <- 0; alpha1 <- -1
p2 <- plogis(alpha0 + alpha1*streamDepth)
## pi2 <- t(sapply(p2, function(p) c(p, (1-p)*p, (1-p)^2*p, (1-p)^3)))
@   
% \item
\vfill
  Simulate abundance and removal data
  \vspace{-6pt}
<<sim-cov3,size='scriptsize'>>=
N2 <- rpois(nSites, lambda=lambda2)         ## local abundance 
y2.all <- pi2 <- matrix(NA, nrow=nSites, ncol=K)
for(i in 1:nSites) {
    pi2[i,] <- c(p2[i], (1-p2[i])*p2[i], (1-p2[i])^2*p2[i], (1-p2[i])^3)
    y2.all[i,] <- rmultinom(n=1, size=N2[i], prob=pi2[i,])
}
y2 <- y2.all[,-K] ## Discard final column... individuals not detected
@   
%\end{enumerate}
\end{frame}




\begin{frame}[fragile]
  \frametitle{Simulated data}
  \begin{columns}
    \begin{column}{0.4\textwidth}
      \small
      Observations
%      \tiny
  \vspace{-6pt}
<<sim-nocov-dat,size='scriptsize'>>=
y2[1:19,]
@ 
  \end{column}
  \begin{column}{0.6\textwidth}
%    \pause
%    \scriptsize
    {\centering Summary stats \\}
    \vspace{24pt}
    \small
  \pause
  \vfill
  \small
  Captures on each pass
  \vspace{-6pt}
<<sim-nocov-ss2,size='scriptsize'>>=
colSums(y2)
@
  \pause
  \vfill
  Naive abundance
  \vspace{-6pt}
<<sim-nocov-ss3,size='scriptsize'>>=
sum(y2)
@
<<un,include=FALSE>>=
library(unmarked)
@ 
  \end{column}
  \end{columns}
\end{frame}









%\section{Prediction}



% \begin{frame}
%   \frametitle{Outline}
%   \Large
%   \tableofcontents[currentsection]
% \end{frame}






\begin{frame}[fragile]
  \frametitle{Prepare data in `unmarked'}
  \small
<<un-umf,size='tiny'>>=
umf <- unmarkedFrameMPois(y=y2, siteCovs=data.frame(streamDepth), type="removal")
@
\pause
<<wfac,size='scriptsize'>>=
summary(umf)
@ 
\end{frame}


% > fm <- multinomPois(~temp ~forest, umf)    

% error: Mat::operator(): index out of bounds
% terminate called after throwing an instance of 'std::logic_error'
%   what():  Mat::operator(): index out of bounds


\begin{frame}[fragile]
  \frametitle{Fit the model}
  \footnotesize
  \inr{multinomPois} has similar arguments as \inr{occu} and
  \inr{pcount}. 
<<un-fit,size='tiny'>>=
fm <- multinomPois(~streamDepth ~streamDepth, umf)    
fm
@
\pause
\vfill
Compare to actual parameter values:
\vspace{-6pt}
<<un-compare,size='tiny'>>=
c(beta0=beta0, beta1=beta1); c(alpha0=alpha0, alpha1=alpha1)
@ 
\end{frame}





\begin{frame}[fragile]
  \frametitle{\normalsize Empirical Bayes -- Site-level abundance}
<<ranef,size='scriptsize',out.width='80%',fig.align='center',fig.width=9>>=
re <- ranef(fm, K=15)
plot(re, layout=c(4,3), subset=site%in%1:12, xlim=c(-1, 11), lwd=5)
@   
\end{frame}





\begin{frame}[fragile]
  \frametitle{Total abundance (in surveyed region)}
<<Ntotal,size='scriptsize',out.width='60%',fig.align='center'>>=
N.total.post <- predict(re, func=sum, nsim=1000)
hist(N.total.post, freq=FALSE, main="", xlab="N total", ylab="Probability")
@   
\end{frame}






\begin{frame}[fragile]
  \frametitle{Prediction in `unmarked'}
  \small
  Create \texttt{data.frame} with prediction covariates. 
  \vspace{-6pt}
<<preddat,size='footnotesize'>>=
pred.data <- data.frame(streamDepth=seq(-3, 3, length=20))
@
\pause
\vfill
Get predictions of $\lambda$ for each row of prediction data.
  \vspace{-6pt}
<<predpsi,size='footnotesize'>>=
lambda.pred <- predict(fm, newdata=pred.data,
                       type='state', append=TRUE)
@
\pause
\vfill
  View $\lambda$ predictions
  \vspace{-6pt}
<<psi-head,size='footnotesize'>>=
print(head(lambda.pred), digits=2)
@
\end{frame}





\begin{frame}[fragile]
  \frametitle{Prediction in `unmarked'}
<<pred-lam2,fig.width=7,fig.height=5,size='tiny',out.width='80%',fig.align='center',echo=2:6>>=
par(mai=c(0.9,0.9,0.1,0.1))
plot(Predicted ~ streamDepth, lambda.pred, ylab="Expected value of abundance",
     ylim=c(0,20), xlab="Stream depth", type="l", lwd=2)
lines(lower ~ streamDepth, lambda.pred, col="grey")
lines(upper ~ streamDepth, lambda.pred, col="grey")
points(rowSums(y2)~streamDepth)
lines(lowess(rowSums(y2)~streamDepth), col="blue", lwd=2)  ## Lowess line for fun (it's way off)
legend(-3, 20, c("Multinomial N-mix model", "Lowess smooth"), lwd=2, col=c("black", "blue"))
@   
\end{frame}







%% \begin{frame}[fragile]
%%   \frametitle{In-class exercise}
%%   % \small
%%   % \begin{enumerate}
%%   %   \item Predict
%%   %   \end{enumerate}
%%   %   \centering
%% %  \large
%%   Do the following using the fitted removal model above:
%%   \begin{enumerate}
%%     \normalsize
%%     \item Predict $p$ when \verb+streamDepth=-1+
%%     \item Use the prediction of $p$ to compute $\pi_1, \pi_2, \pi_3, \pi_4$
%%   \end{enumerate}
%% \end{frame}


\subsection{Bayesian methods}


\begin{frame}
  \frametitle{Outline}
  \Large
  \tableofcontents[currentsection,currentsubsection]
\end{frame}


\begin{frame}
  \frametitle{Bayesian multinomial $N$-mixture models}
  There are several equivalent formulations of the multinomial, some
  of which that we can exploit to fit the model in JAGS. \\
  
  \begin{itemize}
    \item Conditional-on-$N$, missing $y_{iK}$ (Not possible in JAGS)
    \item Conditional-on-$N$, conditional on $n_i=\sum_{k=1}^{K-1} y_{i,k}$
    \item Conditional-on-$N$, sequential binomial
    \item Marginalized $N$
  \end{itemize}
  \pause
  \vfill
  These are just probability tricks that can affect MCMC
  performance. See AHM I for details. Here, we will focus on the second
  option. \\ 
\end{frame}




% \begin{frame}[fragile]
%   \frametitle{Conditional-on-$N$, missing $y_k$}
% \end{frame}





% \begin{frame}[fragile]
%   \frametitle{Conditional-on-$N$, missing $y_k$}
%   \footnotesize
%   Under this formulation, we view the final multinomial cell
%   (corresponding to individuals not detected) as missing data. \\
%   \pause
%   \vfill
%   Unfortunately, this won't work in JAGS because it doesn't allow
%   missing values in multinomial outcomes.
%   \pause
% <<bugs-removal1,size='tiny',echo=FALSE,comment='',background='lightblue'>>=
% writeLines(readLines("removal-mod1.jag"))
% @
% <<jagsUI,include=FALSE>>=
% library(jagsUI)
% @ 
% \end{frame}





\begin{frame}[fragile]
  \frametitle{\normalsize Conditional-on-$N$ and $n_i=\sum_{k=1}^{K-1} y_{i,k}$}
  % Rather than treating the final multinomial cell as missing data:
  % \[
  %   \{y_{i,1}, \dots, y_{i,K-1}, \mathtt{\color{red} NA}\} \sim
  %   \mathrm{Multinomial}(N_i, \{\pi_{i,1}, \dots, \pi_{i,K-1}, \pi_{i,K}\})
  % \]
  % \pause
  % \vfill
  We can break the problem down into two steps by conditioning on
  $n_i$, the number of individuals captured at site $i$:
  \small
  \begin{gather*}
    n_i \sim \mathrm{Bin}(N_i, 1-\pi_K) \\
    \{y_{i,1}, \dots, y_{i,K-1}\} \sim \mathrm{Multinomial}(n_i,
    \{\pi_{i,1}, \dots, \pi_{i,K-1}\}/(1-\pi_K))
  \end{gather*}
  \pause
  \vfill
  Note that the modified cell probabilities still sum to 1. 
\end{frame}



\begin{frame}[fragile]
  \frametitle{\normalsize Conditional-on-$N$ and $n_i=\sum_{k=1}^{K-1} y_{i,k}$}
\vspace{-3pt}
<<bugs-removal2,size='scriptsize',echo=FALSE,comment='',background='beige'>>=
writeLines(readLines("removal-mod2.jag"))
@
\end{frame}





\begin{frame}[fragile]
  \frametitle{Data, inits, and parameters}
  Put data in a named list
  \vspace{-12pt}
<<bugs-data2,size='small'>>=
jags.data.rem2 <- list(y=y2, n=rowSums(y2),
                       streamDepth=streamDepth,
                       nSites=nSites, nPasses=nPasses)
@
\pause
\vfill
  Initial values
  \vspace{-12pt}
<<bugs-inits,size='small'>>=
jags.inits.rem <- function() {
    list(lambda.intercept=runif(1), alpha0=rnorm(1),
         N=rowSums(y2)+rpois(nrow(y2), 2))
}
@ 
\pause
\vfill
  Parameters to monitor
  \vspace{-12pt}
<<bugs-pars,size='small'>>=
jags.pars.rem <- c("beta0", "beta1",
                   "alpha0", "alpha1", "totalAbundance")
@ 
\end{frame}





\begin{frame}[fragile]
  \frametitle{MCMC}
  \small
<<bugs-mcmc-rem2,size='tiny',message=FALSE,cache=FALSE,results='hide'>>=
library(jagsUI); library(coda)
jags.post.rem2 <- jags.basic(data=jags.data.rem2, inits=jags.inits.rem,
                             parameters.to.save=jags.pars.rem, model.file="removal-mod2.jag",
                             n.chains=3, n.adapt=100, n.burnin=0, n.iter=2000, parallel=TRUE)
@ 
%\end{frame}

\pause

%\begin{frame}[fragile]
%  \frametitle{Summarize output}
<<bugs-sum-rem2,size='tiny'>>=
summary(jags.post.rem2[,jags.pars.rem])
@ 
\end{frame}




\begin{frame}[fragile]
  \frametitle{Traceplots and density plots}
<<bugs-plot1-rem2,size='footnotesize',out.width="0.7\\textwidth",fig.align='center'>>=
plot(jags.post.rem2[,jags.pars.rem[1:3]])
@ 
\end{frame}



\begin{frame}[fragile]
  \frametitle{Traceplots and density plots}
<<bugs-plot2-rem2,size='footnotesize',out.width="0.7\\textwidth",fig.align='center'>>=
plot(jags.post.rem2[,jags.pars.rem[4:5]])
@ 
\end{frame}



\begin{frame}[fragile]
  \frametitle{Convergence diagnostics}
  Gelman-Rubin diagnostic ($\hat{R}$)
<<rhat,size='footnotesize'>>=
gelman.diag(jags.post.rem2)
@
  Convergence is suggested by $\hat{R}$ close to 1. 
\end{frame}




\begin{frame}[fragile]
  \frametitle{Effective posterior sample size}
  It's a good idea to have $>$500 effective posterior samples. 
<<ess,size='small'>>=
data.frame(ESS = effectiveSize(jags.post.rem2))
@
\end{frame}






% \begin{frame}%[fragile]
%   \frametitle{\normalsize Conditional-on-$N$, sequential binomial}
%   The multinomial distribution can be represented by a sequence of
%   binomial distributions in which we reduce the number of trials.
%   \pause
%   \vfill
%   \large
%   \begin{gather*}
%     y_{i1} \sim \mathrm{Bin}(N_i, p) \\
%     y_{i2} \sim \mathrm{Bin}(N_i{\color{red} -y_{i1}}, p) \\
%     y_{i3} \sim \mathrm{Bin}(N_i{\color{red} -y_{i1}-y_{i2}}, p) \\
%   \end{gather*}
% \end{frame}





% \begin{frame}[fragile]
%   \frametitle{\normalsize Conditional-on-$N$, sequential binomial}
% <<bugs-removal3,size='scriptsize',echo=FALSE,comment='',background='lightblue'>>=
% writeLines(readLines("removal-mod3.jag"))
% @
% \end{frame}





% \begin{frame}[fragile]
%   \frametitle{Data, inits, and parameters}
%   Put data in a named list
%   \vspace{-6pt}
% <<bugs-data3,size='small'>>=
% jags.data.rem3 <- list(y=y2, streamDepth=streamDepth,
%                        nSites=nSites)
% @
% \vfill
%   Do MCMC
%   \vspace{-6pt}
% <<bugs-mcmc-rem3,size='scriptsize',message=FALSE,cache=TRUE,results='hide'>>=
% jags.post.rem3 <- jags.basic(data=jags.data.rem3, inits=jags.inits.rem,
%                              parameters.to.save=jags.pars.rem,
%                              model.file="removal-mod3.jag",
%                              n.chains=3, n.adapt=100, n.burnin=0,
%                              n.iter=2000, parallel=TRUE)
% @ 
% \end{frame}





% \begin{frame}[fragile]
%   \frametitle{Summarize output}
% <<bugs-sum-rem3,size='tiny'>>=
% summary(jags.post.rem3[,jags.pars.rem])
% @ 
% \end{frame}




% \begin{frame}[fragile]
%   \frametitle{Traceplots and density plots}
% <<bugs-plot1-rem3,size='footnotesize',out.width="0.7\\textwidth",fig.align='center'>>=
% plot(jags.post.rem3[,jags.pars.rem[1:3]])
% @ 
% \end{frame}



% \begin{frame}[fragile]
%   \frametitle{Traceplots and density plots}
% <<bugs-plot2-rem3,size='footnotesize',out.width="0.7\\textwidth",fig.align='center'>>=
% plot(jags.post.rem3[,jags.pars.rem[4:5]])
% @ 
% \end{frame}







% \begin{frame}%[fragile]
%   \frametitle{Marginalized $N$}
%   If
%   \[
%     N \sim \mathrm{Poisson}(\lambda)
%   \]
%   and
%   \[
%     \{y_1, \dots, y_K\}|N \sim \mathrm{Multinomial}(N, \{\pi_1, \dots, \pi_K\})
%   \]
%   \pause
%   \vfill
%   then the marginal distribution of $y$ is
%   \[
%     y_k \sim \mathrm{Poisson}(\lambda \times \pi_k) 
%   \]
% \end{frame}




% \begin{frame}[fragile]
%   \frametitle{Marginalized $N$}
% <<bugs-removal4,size='scriptsize',echo=FALSE,comment='',background='lightblue'>>=
% writeLines(readLines("removal-mod4.jag"))
% @
% \end{frame}





% \begin{frame}[fragile]
%   \frametitle{Data, inits, and parameters}
%   Put data in a named list
%   \vspace{-6pt}
% <<bugs-data4,size='small'>>=
% jags.data.rem4 <- list(y=y2, streamDepth=streamDepth,
%                        nSites=nSites)
% @
% \vfill
%   Do MCMC
%   \vspace{-6pt}
% <<bugs-mcmc-rem4,size='scriptsize',message=FALSE,cache=TRUE,results='hide'>>=
% jags.post.rem4 <- jags.basic(data=jags.data.rem4, inits=jags.inits.rem,
%                              parameters.to.save=jags.pars.rem,
%                              model.file="removal-mod4.jag",
%                              n.chains=3, n.adapt=100, n.burnin=0,
%                              n.iter=2000, parallel=TRUE)
% @ 
% \end{frame}





% \begin{frame}[fragile]
%   \frametitle{Summarize output}
% <<bugs-sum-rem4,size='tiny'>>=
% summary(jags.post.rem4[,jags.pars.rem[1:4]])
% @ 
% \end{frame}




% \begin{frame}[fragile]
%   \frametitle{Traceplots and density plots}
% <<bugs-plot1-rem4,size='footnotesize',out.width="0.7\\textwidth",fig.align='center'>>=
% plot(jags.post.rem4[,jags.pars.rem[1:4]])
% @ 
% \end{frame}




% \begin{frame}[fragile]
%   \frametitle{Compare convergence}
%   \small
% \centering
% %\vfill
% You want $\hat{R}<1.1$ for all parameters \\
% %All the results were similar, but let's make sure they converged
% %\begin{columns}
% %  \begin{column}{0.33\paperwidth}
% %  \begin{column}{0.5\textwidth}
% <<gel2,size='tiny'>>=
% library(coda)
% gelman.diag(jags.post.rem2[,jags.pars.rem[1:4]], multivar=FALSE) ## Conditional-on-N and n
% @   
% %  \end{column}
% %  \begin{column}{0.33\paperwidth}
% \pause
% \vspace{-8pt}
% <<gel3,size='tiny',echo=-(1:2)>>=
% #Rhat3 <- gelman.diag(jags.post.rem3)$psrf
% #Rhat3[jags.pars.rem[1:4],1,drop=FALSE]
% gelman.diag(jags.post.rem3[,jags.pars.rem[1:4]], multivar=FALSE) ## Sequential binomial
% @   
% %  \end{column}
% %  \begin{column}{0.33\paperwidth}
% \pause
% \vspace{-8pt}
% <<gel4,size='tiny',echo=-(1:2)>>=
% #Rhat4 <- gelman.diag(jags.post.rem4)$psrf
% #Rhat4[jags.pars.rem[1:4],1,drop=FALSE]
% gelman.diag(jags.post.rem4[,jags.pars.rem[1:4]], multivar=FALSE) ## Marginalized N
% @   
% %  \end{column}
% %\end{columns}
% \end{frame}





% \begin{frame}[fragile]
%   \frametitle{Compare effective sample size}
%   \small
%   Conditional-on-$N$, conditional-on-$n$
%   \vspace{-6pt}
% <<ess2,size='scriptsize'>>=
% effectiveSize(jags.post.rem2[,jags.pars.rem[1:4]])
% @   
%   Conditional-on-$N$, sequential binomial
%   \vspace{-6pt}
% <<ess3,size='scriptsize'>>=
% effectiveSize(jags.post.rem3[,jags.pars.rem[1:4]])
% @   
%   Marginalized $N$
%   \vspace{-6pt}
% <<ess4,size='scriptsize'>>=
% effectiveSize(jags.post.rem4[,jags.pars.rem[1:4]])
% @
% \pause
% %\vfill
% \centering
% \small
% The ``marginalized $N$'' formulation wins in terms of both convergence and
% effective sample size\pause\dots but remember: this particular
% marginal model is only valid if $N$ is Poisson. \\ 
% \end{frame}



\begin{frame}
  \frametitle{Closing thoughts on removal models}
  In addition to site covariates, you could also include observation
  covariates, but it's hard to think of realistic covariates that
  would be specific to each pass. \\
  \pause
  \vfill
  Removal models get used in many scenarios other than electrofishing:
  \begin{itemize}
    \item<2-> Point count surveys
    \begin{itemize}
      \item Observers keep track of individuals during the survey
      \item Analyze number of new individuals detected during each
        time interval
    \end{itemize}
    \item<3-> Mark-recapture surveys
      \begin{itemize}
        \item If behavior responses (trap shyness or trap happiness)
          are extreme, recaptures can be discarded and removal models
          can be applied.
      \end{itemize}
  \end{itemize}
\end{frame}




\section{Double observer sampling}

\begin{frame}
  \frametitle{Outline}
  \Large
  \tableofcontents[currentsection,currentsubsection]
\end{frame}




\begin{frame}
  \frametitle{Double observer sampling (independent)}
  \small
  Two observers sample the same location at the same time, working independently. \\
  \pause
  \vfill
  After each survey, they compare notes and figure out which
  individual were detected by observer A only, B only, or by both. \\
  \pause
  \vfill
  Definitions
  \begin{itemize}
    \setlength\itemsep{0.5pt}
    \item $y_{i1}$ -- number of individuals detected only by observer A
    \item $y_{i2}$ -- number of individuals detected only by observer B
    \item $y_{i3}$ -- number of individuals detected by observers A and B
    \item $p_1$ -- probability that observer A detects an individual 
    \item $p_2$ -- probability that observer B detects an individual 
  \end{itemize}
  \pause \vfill
  \footnotesize
  \begin{tabular}{lc}
    \hline
    \centering
    Description & Multinomial cell probability \\
    \hline
    Pr(detected by observer A but not B) & $\pi_1 = p_1(1-p_2)$ \\
    Pr(detected by observer B but not A) & $\pi_2 = (1-p_1)p_2$ \\
    Pr(detected by observers A and B) & $\pi_3 = p_1p_2$ \\
    Pr(not detected) & $\pi_4 = (1-p_1)(1-p_2)$ \\
    \hline
  \end{tabular}
\end{frame}





\begin{frame}
  \frametitle{Double observer sampling (dependent)}
  \small
  Two observers sample at the same time, but observer B only records
  what observer A missed. \\
  \pause
  \vfill
  Often used in aerial waterfowl surveys. \\
  \pause
  \vfill
  Observers should switch roles to ensure parameter identifiability. \\
  \pause
  \vfill
  Definitions
  \begin{itemize}
    \setlength\itemsep{1pt}
    \item $y_{i1}$ -- number of individuals detected by observer A
    \item $y_{i2}$ -- number of individuals missed by A but
      detected by B
    \item $p_1$ -- probability that observer A detects an individual 
    \item $p_2$ -- probability that observer B detects an individual 
  \end{itemize}
  \pause \vfill
  \footnotesize
  \begin{tabular}{lc}
    \hline
    \centering
    Description & Multinomial cell probability \\
    \hline
    Pr(detected by observer A) & $\pi_1 = p_1$ \\
    Pr(detected by observer B but not A) & $\pi_2 = (1-p_1)p_2$ \\
    Pr(not detected) & $\pi_3 = (1-p_1)(1-p_2)$ \\
    \hline
  \end{tabular}
\end{frame}





\begin{frame}[fragile]
  \frametitle{Simulating dependent double observer data}
  \small
  Abundance
<<sim-doub-N,size='scriptsize',echo=-1>>=
set.seed(839)
nSites <- 100
lambda <- 4.6  # Expected value of N
N <- rpois(n=nSites, lambda=lambda)
@
% \item
  \pause
  \vfill
  Detection probability and multinomial counts
<<sim-doub-counts,size='scriptsize'>>=
observer <- matrix(sample(c("A","B"), size=nSites*2, replace=TRUE),
                   nrow=nSites, ncol=2)
p1 <- 0.4  # Detection prob for observer A
p2 <- 0.3  # Detection prob for observer B
piAfirst <- c(p1, (1-p1)*p2, (1-p1)*(1-p2))
piBfirst <- c(p2, (1-p2)*p1, (1-p1)*(1-p2))
K <- length(piAfirst)
y.all <- matrix(NA, nrow=nSites, ncol=K)
for(i in 1:nSites) {
  pi <- if(observer[i,1]=="A") piAfirst else piBfirst
  y.all[i,] <- rmultinom(n=1, size=N[i], prob=pi)    }
@
%\end{enumerate}
  \pause
  \vfill
  Discard final column of individuals not detected
<<y-doub,size='scriptsize'>>=
y <- y.all[,-K]
@ 
\end{frame}





\begin{frame}[fragile]
  \frametitle{\normalsize Dependent double observer model in JAGS}
\vspace{-3pt}
<<bugs-double,size='scriptsize',echo=FALSE,comment='',background='beige'>>=
writeLines(readLines("double-obs-dep.jag"))
@
\end{frame}





\begin{frame}[fragile]
  \frametitle{Data, inits, and parameters}
  Put data in a named list
  \vspace{-12pt}
<<bugs-data-double,size='small'>>=
jags.data.double <- list(y=y, n=rowSums(y), nSites=nSites,
    observer=ifelse(observer=="A", 1, 2))
@
\pause
\vfill
  Initial values
  \vspace{-12pt}
<<bugs-inits-double,size='small'>>=
jags.inits.doub <- function() {
    list(lambda=runif(1), p1=runif(1), p2=runif(1),
         N=rowSums(y)+rpois(nrow(y), 2))
}
@ 
\pause
\vfill
  Parameters to monitor
  \vspace{-12pt}
<<bugs-pars-doub,size='small'>>=
jags.pars.doub <- c("lambda", "p1", "p2", "totalAbundance")
@ 
\end{frame}


\begin{frame}[fragile]
  \frametitle{MCMC}
  \small
<<bugs-mcmc-doub,size='scriptsize',message=FALSE,cache=FALSE,results='hide'>>=
jags.post.doub <- jags.basic(data=jags.data.double, inits=jags.inits.doub,
                             parameters.to.save=jags.pars.doub,
                             model.file="double-obs-dep.jag",
                             n.chains=3, n.adapt=100, n.burnin=0,
                             n.iter=2000, parallel=TRUE)
@ 
%\end{frame}

\pause

%\begin{frame}[fragile]
%  \frametitle{Summarize output}
<<bugs-sum-doub,size='scriptsize'>>=
print(summary(jags.post.doub)$quantiles, digits=3)
@ 
\end{frame}



%\subsection{Likelihood-based methods}


%\subsection{Bayesian methods}



% \begin{frame}[plain]
%   \frametitle{Outline}
%   \Large
%   \tableofcontents[currentsection,currentsubsection]
% \end{frame}



\begin{frame}
  \frametitle{Additional remarks on double observer models}
  In practice, there are often many observers on a project, even
  though only two survey at a time. \\
  \pause
  \vfill
  We can deal with this by including ``observer ID'' as an observation
  covariate. Everything else stays the same. \\
  \pause
  \vfill
  It can be hard to pull of the independent double observer method
  because observers often influence each other while working. \\
  \pause
  \vfill
  All of these methods require some sort of \alert{short-term}
  individual identification of animals, even though they aren't being
  marked.
  \pause
  \vfill
  If short-term individual ID isn't possible, you could fall
  back on binomial $N$-mixture models.
\end{frame}




\section{Assignment}




\begin{frame}[fragile]
  \frametitle{Assignment}
  \small
  %\footnotesize
  Create a self-contained R script or Rmarkdown file
  to do the following:
  \vfill
  \begin{enumerate}
    \small
%    \footnotesize
    \item Simulate \alert{independent} double observer data with the following
      properties:
      \begin{itemize}
        \item nSites=200
        \item $\lambda=3$
        \item $p_1=0.3$ and $p_2=0.5$
      \end{itemize}
    \item Fit the model using `unmarked.' You will need to create an
      observation covariate indicating observer A and B. When you
      create the \inr{unmarkedFrameMPois}, use \inr{type="double"}.
    \item Fit the same model in JAGS
    \item For both unmarked and JAGS, use the point estimates of $p_1$
      and $p_2$ to compute the $\pi$ probabilities.  
  \end{enumerate}
  \vfill
  Upload your {\tt .R} or {\tt .Rmd} file to ELC by 8:00 AM on Monday.
\end{frame}





\end{document}

