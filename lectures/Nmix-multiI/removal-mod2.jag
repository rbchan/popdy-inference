model {

lambda.intercept ~ dunif(0, 5)
beta0 <- log(lambda.intercept)
beta1 ~ dnorm(0, 0.5)

alpha0 ~ dnorm(0, 0.5)  
alpha1 ~ dnorm(0, 0.5)

for(i in 1:nSites) {
  log(lambda[i]) <- beta0 + beta1*streamDepth[i]
  N[i] ~ dpois(lambda[i])         # Latent local abundance
  logit(p[i]) <- alpha0 + alpha1*streamDepth[i]
  pi[i,1] <- p[i]               ## Pr(first captured in first pass)
  pi[i,2] <- (1-p[i])*p[i]      ## Pr(first captured in second pass)
  pi[i,3] <- (1-p[i])^2*p[i]    ## Pr(first captured in third pass)
  pi[i,4] <- (1-p[i])^3         ## Pr(not captured)
  n[i] ~ dbin(1-pi[i,4], N[i])  ## nCaptured at site i
  y[i,1:3] ~ dmulti(pi[i,1:3]/(1-pi[i,4]), n[i])
}

totalAbundance <- sum(N[1:nSites])

}
