\documentclass[color=usenames,dvipsnames]{beamer}
%\documentclass[color=usenames,dvipsnames,handout]{beamer}

\usepackage[roman]{../lectures}
%\usepackage[sans]{../lectures}


\hypersetup{pdfpagemode=UseNone,pdfstartview={FitV}}




% Load function to compile and open PDF
<<build-fun,include=FALSE,purl=FALSE>>=
source("../rnw2pdf.R")
@

% Compile and open PDF
<<buildit,include=FALSE,eval=FALSE>>=
rnw2pdf("lecture-cap-recap-spatial")
rnw2pdf("lecture-cap-recap-spatial", tangle=TRUE)
@ 


<<knitr-theme,include=FALSE,purl=FALSE>>=
knit_theme$set("edit-kwrite")
@

% New command for inline code that isn't to be evaluated
\definecolor{inlinecolor}{rgb}{0.878, 0.918, 0.933}
\newcommand{\inr}[1]{\colorbox{inlinecolor}{\texttt{#1}}}




\newcommand{\bxt}{${\bm x}_j$}
\newcommand{\bx}{{\bm x}}
\newcommand{\bxj}{{\bm x}_j}
\newcommand{\bst}{${\bm s}_i$}
\newcommand{\bs}{{\bm s}}
\newcommand{\bsi}{{\bm s}_i}
\newcommand{\ed}{\|\bx - \bs\|}
\newcommand{\cs}{\mathcal{S} }
\newcommand{\dsixj}{\|\bsi - \bxj\|}


\begin{document}




\begin{frame}[plain]
  \LARGE
  \centering
  {
    \LARGE Lecture 12 -- Spatial capture-recapture \\
    for closed populations: \\
    \Large simulation, fitting, and prediction \\
  }
  {\color{default} \rule{\textwidth}{0.1pt} }
  \vfill
  \large
  WILD(FISH) 8390 \\
  Estimation of Fish and Wildlife Population Parameters \\
  \vfill
  \large
  Richard Chandler \\
  University of Georgia \\
\end{frame}






\section{Overview}



\begin{frame}[plain]
  \frametitle{Outline}
  \Large
  \only<1>{\tableofcontents}%[hideallsubsections]}
  \only<2 | handout:0>{\tableofcontents[currentsection]}%,hideallsubsections]}
\end{frame}



\begin{frame}
  \frametitle{SCR overview}
  {\centering There are two motivations for SCR \\}
  \vfill
  \begin{enumerate}
    \item Improved inference
    \begin{itemize}
      \item<1-> Non-spatial models can't properly account for sources
        of variation in $p$ that can cause bias.
        \begin{itemize}
          \item<1-> Distance to traps
          \item<1-> Trap-specific covariates
        \end{itemize}
      \item<2-> SCR makes it possible to estimate \alert{density}, not
        just $N$ in an unknown region. 
    \end{itemize}
    \pause
    \vfill
  \item<3-> Improved science
  \begin{itemize}
    \item<3-> We can ask new questions, such as:
      \begin{itemize}
        \item<3-> What influences spatial variation in density?
        \item<4-> How do survival and recruitment vary in space and time?
        \item<5-> How does movement influence density and detectability?
      \end{itemize}
    \item<6-> Rather than think of SCR as a new estimation tool, you
      can think of it as an indivdual-based framework for inference on
      spatial population dynamics.
    \end{itemize}
  \end{enumerate}
  % \vfill
  % \centering
  % \footnotesize
  % \uncover<6->{
  % Rather than think of SCR as a new estimation tool, you can think of
  % it as an indivdual-based framework for inference on spatial
  % population dynamics. \\}
\end{frame}



% \begin{frame}
%   \frametitle{Comparison to mark-recapture}
%   The simplest estimator of abundance is 
%   \[
%     \hat{N} = \frac{n}{\hat{p}}
%   \]
%   where $n$ is the number of individuals detected, $p$ is detection
%   probability, and $E(n)=Np$. \\
%   \pause
%   \vfill
%   In distance sampling, we modeled detection probability as a
%   function of distance, and we replaced $p$ with average detection
%   probability. \\ 
%   \pause
%   \vfill
%   Spatial capture recapture can be thought of in a similar way, but we 
%   average detection probability over the spatial distribution of
%   individuals, not just over distance. 
% \end{frame}





\begin{frame}
  \frametitle{SCR data}
  \small
  % SCR capture histories histories have 3 dimensions instead of two. \\
  % \pause
  % \vfill
  SCR capture histories can be organized as a 3D array where $y_{ijk}$
  indicates if individual $i=1,\dots,n$, was captured in trap
  $j=1,\dots,J$ on occasion $k=1,\dots,K$. \\
  \pause \vfill
  Here an example of a ``flatted array'' with $n=4$ animals captured
  at $J=3$ traps on $K=2$ occasions. \\
  \centering
  \vfill  
  \begin{tabular}{lccccccc}
    \hline
    & \multicolumn{7}{c}{Occasion} \\
    \cline{2-8}
    & \multicolumn{3}{c}{1} & & \multicolumn{3}{c}{2} \\
    \cline{2-4} \cline{6-8}
    & \multicolumn{3}{c}{Trap} & & \multicolumn{3}{c}{Trap} \\
    \cline{2-4} \cline{6-8}
    Individual & 1 & 2 & 3 & & 1 & 2 & 3 \\
    \hline
    1 & 0 & 0 & 0 & & 1 & 0 & 1 \\
    2 & 1 & 1 & 1 & & 0 & 1 & 1 \\
    3 & 0 & 1 & 0 & & 0 & 0 & 0 \\
    4 & 0 & 1 & 1 & & 1 & 0 & 0 \\
    \hline
  \end{tabular}
  \pause
  \vfill
  \flushleft
  Because we know the coordinates of the traps, we also know when and
  where each individual was detected. \\
  \pause
  \vfill
  This spatial information has been available all along, but it wasn't
  utilized to estimate density until Efford (2004, Oikos). \\
\end{frame}




% \begin{frame}
%   \frametitle{In-class exercise}
%   Building off the previous example\dots
%   \begin{enumerate}
%     \item Compute $\bar{p}$ for line-transect sampling when
%       $\sigma=50, 100, \mathrm{and}\, 200$, instead of $\sigma=25$.  
%     \item Repeat, but for point-transect sampling. 
%   \end{enumerate}
% \end{frame}





\begin{frame}
  \frametitle{\large Closed population model ($N$ known hypothetically) }
  \footnotesize
  State model (a spatial point process model) %\\
  \begin{gather*}
    \lambda(\bs) = \beta_0 + \beta_1 w_1(\bs) \dots \\
    \Lambda = \int_{\mathcal{S}} \lambda(\bs) \; \mathrm{d}\bs \\
    N \sim \mathrm{Pois}(\Lambda) \\
    \bsi \sim \lambda(\bs)/\Lambda \;\; \mathrm{for}\, i=1,\dots,N 
  \end{gather*}
  \pause
%  \vfill
  Observation model (supposing $N$ was known)
  \begin{gather*}
    p_{ij} = g_0\exp(\|\bsi - \bxj\|/(2\sigma^2))  \;\; \mathrm{for}\, j=1,\dots,J  \\
    y_{ijk} \sim \mathrm{Bernoulli}(p_{ij})
  \end{gather*}
  \pause
%  \vfill
%  \footnotesize
  \scriptsize
  Definitions \\
  \hangindent=0.9cm $\lambda(\bs)$ -- The ``intensity function'' %or ``density surface''
  describing the density of individuals at location $\bs$ \\ 
  $\Lambda$ -- Expected number of individuals \\
  $N$ -- Realized number of individuals (ie, population size) \\
  $\bsi$ -- Location of the $i$th activity center \\
  $\bxj$ -- Location of trap $j$ \\
  $\dsixj$ -- Euclidean distance between $\bsi$ and $\bxj$ \\
  $g_0$ -- Capture probability when distance between activity centers
  and traps is 0 \\
  $\sigma$ -- Scale parameter of encounter function \\
  $p_{ij}$ -- Capture probability \\
  $y_{ijk}$ -- Spatial capture histories \\
  % \pause
  % \vfill
  % The problem with this formulation is that we don't observe the ``all
  % zero'' encounter histories (and thus we don't know $N$). 
\end{frame}





\begin{frame}
  \frametitle{Spatial point processes}
  {\centering \large
    The state model of SCR is a spatial (or spatio-temporal) point process \\}
  \vfill
  \pause
  There are many varieties of spatial point processes \\
  \begin{itemize}
    \item (In)homogeneous binomial point process
    \item (In)homogeneous Poisson point process
    \item Cox process
    \item Gibbs process
    \item Markov point process
    \item Among others
  \end{itemize}
\end{frame}





\begin{frame}
  \frametitle{Spatial point processes}
%  \large
  All share a few properties \\
  \begin{itemize}%[<+->]
    \item<1-> The data are a collection of points called a ``point pattern''
    \item<2-> Points are in an area called the state-space
      ($\mathcal{S}$), or observation window, which is usually two
      dimensional  
    \item<3-> An intensity function ($\lambda(\bs)$) describes spatial
      variation in the density of points
    \item<4-> The area under this function is the expected number of
      points (a.k.a, $N$) in the region:
  \end{itemize}
  \vfill
%  \Large
  \uncover<5->{
\[
  E(N) = \Lambda = \int_{\mathcal{S}} \lambda(\bs) \;\mathrm{d}\bs
\]
}
\end{frame}



\begin{frame}
  \frametitle{Poisson point process}
  Propoerties
  \begin{itemize}
    \item If density is constant throughout the state-space:
      $\lambda(\bs) = \lambda$, the process is said to be
      ``homogeneous''
    \item Otherwise, the process is ``inhomogeneous''
    \item The number of points in any region of the state-space is
      Poisson distributed
    \item Points are independent of one another (no attraction or
      repulsion) 
  \end{itemize}
  \pause
  \vfill
%   \centering {\bf Note:} For more complicated models, it's easier to
%   work in discrete space than continuous space. Plus, spatial
%   covariates always come to us in the form of raster. \\
  An inhomogeneous point process allows for spatial variation
  in density, which can be modeled using \alert{spatial covariates},
  such as raster layers. \\
\end{frame}




\begin{frame}
  \frametitle{Observation model(s)}
  The SCR model assumes that capture probability decreases with
  distance between activity centers and traps. \\
  \pause
  \vfill
  We can use encounter rate functions similar to those from distance 
  sampling for this purpse. \\
  \pause
  \vfill
  The most common encounter rate function that we'll consider is based
  on the Gaussian distribution:
  \begin{gather*}
    p_{ij} = g_0\exp(-\dsixj/(2\sigma^2)) \\
    y_{ijk} \sim \mathrm{Bernoulli}(p_{ij}) 
  \end{gather*}
  \pause
%  \vfill
  However, there are many options and we aren't restricted to the
  Bernoulli observation model. 
\end{frame}



\begin{frame}
  \frametitle{Observation models}
%  \begin{itemize}
%  \item
  Observation models are not the same as encounter rate functions. \\
  \pause \vfill
  % \item
  Observation models are chosen with respect to the sampling
      method (mist-net, camera trap, hair snare, etc\dots) \\
%  \end{itemize}
  \pause \vfill
  % \begin{center}
  \centering
    \begin{tabular}{lll}
      \hline
      Model       & Detector/Trap     & Examples           \\
      \hline
      Bernoulli   & Proximity    & Hair-snares        \\
      Poisson     & Count        & Camera trap        \\
      Multinomial/Categorical & Multi-catch  & Mist net, crab pot \\
      ---          & Single-catch & Sherman trap       \\
      \hline
    \end{tabular}
    % \end{center}
    \pause \vfill
There are other observation models for data from area searches,
transects, or acoustic detectors recording signal strength.
\end{frame}





\section{Simulation}


\begin{frame}
  \frametitle{Outline}
  \Large
%  \tableofcontents[currentsection,currentsubsection]
  \tableofcontents[currentsection]
\end{frame}




% \begin{frame}[fragile]
%   \frametitle{Homogeneous binomial point process}
% <<bpp1,size='footnotesize',out.width="50%",fig.align="center">>=
% N <- 25
% s <- cbind(runif(N, 0, 1), runif(N, 0, 1))
% plot(s, pch=16, col="blue", xlab="Easting", ylab="Northing",
%      xlim=c(0,1), ylim=c(0,1), cex.lab=1.5, asp=1)
% @
% \end{frame}






\begin{frame}[fragile]
  \frametitle{Homogeneous Poisson point process}
<<ppp1,size='footnotesize',out.width="50%",fig.align="center">>=
lambda1 <- 25; A <- 1     ## lambda1=density, A=area
N <- rpois(1, lambda1*A)  
s <- cbind(runif(N, 0, 1), runif(N, 0, 1))
plot(s, pch=16, col="blue", xlab="Easting", ylab="Northing",
     xlim=c(0,1), ylim=c(0,1), cex.lab=1.5, asp=1)
@
\end{frame}



<<include=FALSE,eval=FALSE>>=
## Simulate covariate from normal distribution with exponential covariance
delta <- 0.01
grid0 <- seq(0+delta/2, 1-delta/2, delta)
grid <- cbind(rep(grid0, each=length(grid0)),
              rep(grid0, times=length(grid0)))
dist.grid <- as.matrix(dist(grid))
V <- exp(-dist.grid*10)
set.seed(4984)
w <- t(chol(V)) %*% rnorm(nrow(V))

elevation <- 1000 + w*100

library(raster)
elevation.r <- rasterFromXYZ(cbind(grid[,1], grid[,2], elevation))
plot(elevation.r)
writeRaster(elevation.r, filename="elevation.tif", overwrite=TRUE)



## library(lattice)

## levelplot(w ~ grid[,1]+grid[,2], aspect="iso", at=seq(min(w), max(w), len=100))

## lambda <- exp(-7 + 1.5*w)
## (Lambda <- sum(lambda*delta^2*1e4))
## (N <- rpois(1, Lambda))

## levelplot(lambda ~ grid[,1]+grid[,2], aspect="iso",
##           at=seq(min(lambda), max(lambda), len=100),
##           col.regions=topo.colors(100))

## pi <- lambda/sum(lambda)

## s <- grid[sample(nrow(grid), size=N, replace=TRUE, prob=pi),]

## levelplot(lambda ~ grid[,1]+grid[,2], aspect="iso",
##           panel=function(...) {
##               panel.levelplot(...)
##               lpoints(s, pch=16, col="blue")
##           }, 
##           at=seq(min(lambda), max(lambda), len=100),
##           col.regions=terrain.colors(100))


@ 








\begin{frame}[fragile]
  \frametitle{Inhomogeneous Poisson point process}
  First, let's import a raster layer
<<ippp1,size='footnotesize',fig.width=7.2,out.width="60%",fig.align="center">>=
library(raster)
elevation <- raster("elevation.tif")
plot(elevation, col=topo.colors(100), main="Elevation")
@
\end{frame}




% \begin{frame}
%   \frametitle{Closed population estimation options}
%   Conditional likelihood \\
%   \begin{itemize}
%     \item Estimate $\tilde{p}$\footnote{$\tilde{p}$ depends on $\lambda(s), g_0,
%         \sigma, \mathcal{S}, x$}, and then compute $\hat{N}=n/\hat{\tilde{p}}$
%   \end{itemize}
%   \pause
%   \vfill
%   Joint likelihood \\
%   \begin{itemize}
%     \item Estimate $N$ and $\tilde{p}$ jointly
%     \item Joint likelihood can be written as
%       \begin{itemize}
%       \item $L(N,g_0,\sigma;y,n) = p(y|n,p)p(n|N,p)$ or
%       \item $L(N,g_0,\sigma;y,n) = p(y,n|N,p)$
%       \end{itemize}
%   \end{itemize}
%   \pause \vfill
%   Data augmentation \\
%   \begin{itemize}
%     \item Tack on many ``all zero'' encounter histories and estimate
%       how many of them actually occurred
%     \item Usually, but not necessarily, used in Bayesian inference
%   \end{itemize}
% \end{frame}






\begin{frame}[fragile]
  \frametitle{Inhomogeneous Poisson point process}
  \small
  Second, let's pick some coefficients and create a density surface
<<ippp2,size='footnotesize',fig.width=7.2,out.width="60%",fig.align="center">>=
beta0 <- -15
beta1 <- 0.01 #0.005
lambda <- exp(beta0 + beta1*elevation) # Intensity function
plot(lambda, col=terrain.colors(100), main="Density surface")
@
\end{frame}




\begin{frame}[fragile]
  \frametitle{Inhomogeneous Poisson point process}
  \small
  Third, simulate $N$
  \vspace{-6pt}
<<ippp3,size='footnotesize'>>=
set.seed(538)  
ds <- 1                            ## Pixel area is 1 ha
lambda.values <- values(lambda)    ## Convert raster to vector
Lambda <- sum(lambda.values*ds)    ## E(N)
(N <- rpois(1, Lambda))            ## Realized N
@
\pause
\vfill
Fourth, simulate and $\bs_1, \dots, \bs_N$. To do this, we will pick
pixels proportional to density. Then we'll jitter each point
inside its pixel. 
  \vspace{-6pt}
<<ipp4,size='footnotesize'>>=
n.pixels <- length(lambda)
jitter <- 0.005                    ## Half width of pixel 
s.pixels <- sample(n.pixels, size=N, replace=TRUE,
                   prob=lambda.values/Lambda)
elevation.xyz <- as.data.frame(elevation, xy=TRUE)
s <- elevation.xyz[s.pixels,c("x","y")] +
    cbind(runif(N, -jitter, jitter),runif(N, -jitter, jitter))
@
\end{frame}







\begin{frame}[fragile]
  \frametitle{Inhomogeneous Poisson point process}
<<ippp5,size='scriptsize',fig.width=7.2,out.width="70%",fig.align="center">>=
plot(lambda, col=terrain.colors(100),
     main="Density surface with activity centers")
points(s, pch=16, cex=1, col="blue")
@
\end{frame}






\begin{frame}[fragile]
  \frametitle{Traps}
<<traps1,size='scriptsize',fig.width=7.2,out.width="60%",fig.align="center">>=
x <- cbind(rep(seq(0.15, 0.85, by=0.1), each=8),
           rep(seq(0.15, 0.85, by=0.1), times=8))  ## Trap locations
plot(lambda, col=terrain.colors(100),
     main="Density surface with activity centers and traps")
points(s, pch=16, col="blue") ## Activity center locations
points(x, pch=3)              ## Trap locations
@
\end{frame}





\begin{frame}[fragile]
  \frametitle{Distance between traps and activity centers}
  Compute distances between activity centers ($\bs_1, \dots, \bs_N$)
  and traps ($\bx_1, \dots, \bx_J$).
<<dist1,size='footnotesize'>>=
J <- nrow(x)                 ## nTraps
dist.sx <- matrix(NA, N, J)  
for(i in 1:N) {
    dist.sx[i,] <- sqrt((s[i,1]-x[,1])^2 + (s[i,2]-x[,2])^2)
}
@
\pause
\vfill
  Look at distances between first 4 individuals and first 5 traps.
<<dist2,size='footnotesize'>>=
dist.sx[1:4,1:5]
@

\end{frame}






\begin{frame}[fragile]
  \frametitle{Capture probability}
  Compute capture probability
<<p1,size='footnotesize'>>=
g0 <- 0.2
sigma <- 0.05
p <- g0*exp(-dist.sx^2/(2*sigma^2))
@
\pause
\vfill
  Look at capture probs for first 4 individuals and first 5 traps.
<<p2,size='footnotesize'>>=
print(p[1:4,1:5], digits=3)
@

\end{frame}





\begin{frame}[fragile]
  \frametitle{Capture histories}
  Simulate capture histories for all $N$ individuals
<<y1,size='footnotesize'>>=
K <- 5                          # nOccasions
y.all <- array(NA, c(N, J, K))
for(i in 1:N) {
    for(j in 1:J) {
        y.all[i,j,] <- rbinom(K, 1, prob=p[i,j])
    }
}
@
\pause
\vfill
  Discard individuals not captured
<<y2,size='footnotesize'>>=
captured <- rowSums(y.all)>0
y <- y.all[captured,,]
@
\pause
\vfill
  Capture histories for first 2 individuals and first 5 traps
  on first occasion.
<<y3,size='footnotesize'>>=
y[1:2,1:5,1]
@

\end{frame}






\begin{frame}[fragile]
  \frametitle{Summary stats}
  Capture frequencies
<<M0-freq,size='scriptsize'>>=
y.tilde <- rowSums(y)
table(y.tilde)
@   
\end{frame}







% \begin{frame}
%   \frametitle{Joint likelihood}
%   % \footnotesize
%   \small
%   The joint likelihood looks similar to the nonspatial likelihood,
%   except that we have a third dimension for $y$ and we have to
%   integrate out the latent activity center $s_i$. 
%   \pause
%   \vfill
%   \flushleft
%   \begin{equation*}
% %  \begin{multline*}
% %    L(N,p; y,n) =                                          \\
%     L(N,p; y,n) = \left\{\prod_{i=1}^n \prod_{j=1}^J \prod_{k=1}^K p_{ij}^{y_{ijj}}(1-p_{ij})^{1-y_{ijk}}\right\}
% %    \left\{\frac{N!}{(N-n)!}  \left(\prod_{j=1}^J(1-p)\right)^{N-n} \right\}
%     \frac{N!}{(N-n)!}  \left(q^*\right)^{N-n}
% %  \end{multline*}
%   \end{equation*}
% \end{frame}



% \begin{frame}
%   \frametitle{Model variations}
%   Aside from the approach to estimation, the key consideration
%   concerns the sources of variation in capture probability ($p$). \\
%   \pause
%   \vfill
%   Otis et al. (1978, Wildlife Monographs) identified several model variations
%   \begin{itemize}
%     \small
%     \item $M_0$ -- $p$ is constant
%     \item $M_t$ -- unique $p$ for each capture occasion
%     \item \hangindent=0.8cm $M_b$ -- behavioral response with $p$ different than
%       recapture probability $c$
%     \item $M_h$ -- individual heterogeneity in $p$
%   \end{itemize}
%   \pause \vfill
%   These can be combined, but beware of identifiability issues. See
%   Otis et al. (1978) for details.  \\
%   \pause \vfill
%   Later we'll talk about another important class of models, the
%   ``individual covariate'' models.  
% \end{frame}






%\section{Model $M_0$}


%\subsection{Simulation}


%\subsection{Model $M_0$}






% \begin{frame}[fragile]
%   \frametitle{Summary stats}
%   Capture history frequencies
% <<M0-hist,size='scriptsize'>>=
% histories <- apply(y, 1, paste, collapse="")
% sort(table(histories))
% @
% \pause
% \vfill
%   Detection frequencies
% <<M0-freq,size='scriptsize'>>=
% y.tilde <- rowSums(y)
% sort(table(y.tilde))
% @   
% \end{frame}



%\subsection{Model $M_t$}


% \begin{frame}[fragile]
%   \frametitle{Model $M_t$ -- Temporal variation}
%   Capture probability for each occasion
% <<sim-Mt-pars,size='scriptsize'>>=
% p.t <- c(0.3, 0.5, 0.2, 0.4)
% @
%   \pause
%   \vfill
%   All capture histories (for captured and uncaptured individuals)
%   \vspace{-6pt}
% <<sim-Mt-ch,size='scriptsize'>>=
% y.all.Mt <- matrix(NA, N, J)
% for(i in 1:N) {
%     y.all.Mt[i,] <- rbinom(J, 1, p.t) }
% @
%   \pause
%   \vfill
%   Observed capture histories (data)
%   \vspace{-6pt}
% <<sim-Mt-y1,size='scriptsize'>>=
% captured.Mt <- rowSums(y.all.Mt)>0
% n.Mt <- sum(captured.Mt)
% y.Mt <- y.all.Mt[captured.Mt,]
% y.Mt[1:3,]
% colSums(y.Mt)
% @ 
% \end{frame}









\section{Likelihood}



\begin{frame}
  \frametitle{Outline}
  \Large
  \tableofcontents[currentsection]
\end{frame}




\begin{frame}
  \frametitle{Software options}
  \small
  Program DENSITY
  \begin{itemize}
  \footnotesize
    \item Windows program with GUI
  \end{itemize}
  R package `secr'
  \begin{itemize}
  \footnotesize
    \item The oldest R package with the most options
  \end{itemize}
  R package `oSCR'
  \begin{itemize}
  \footnotesize
    \item A newer R package with similar functionality
  \end{itemize}
\end{frame}



% %% p(y,n|N,p)
% \begin{frame}[fragile]
%   \frametitle{Joint likelihood for $M_0$}
%   The joint likelihood has a multinomial form:
%   \begin{multline*}
%     L(N,p; y,n) = \\
%     \left\{\prod_{i=1}^n \prod_{j=1}^J p^{y_{ij}}(1-p)^{1-y_{ij}}\right\}
%     \left\{\frac{N!}{(N-n)!}  \left(\prod_{j=1}^J(1-p)\right)^{N-n} \right\}
%   \end{multline*}
%   \pause
%   \vfill
% <<nll-M0,echo=TRUE,size='scriptsize'>>=
% nll.M0 <- function(pars, y) {           ## Negative log-likelihood
%     n <- nrow(y);       J <- ncol(y)
%     N <- exp(pars[1])
%     n0 <- N-n
%     if(n0<0) return(NA)
%     p <- plogis(pars[2])
%     ld.y1 <- sum(dbinom(y, 1, p, log=TRUE))
%     p0 <- (1-p)^J
%     ld.n0 <- lgamma(N+1)-lgamma(n0+1)+n0*log(p0)
%     nll <- -(ld.y1+ld.n0)
%     return(nll)
% }
% @
% \end{frame}



% \begin{frame}[fragile]
%   \frametitle{Maximize joint likelihood for $M_0$}
% Minimized the negative log-likelihood
% <<opt-nll-M0, size='scriptsize'>>=
% fm.M0 <- optim(c(log.N=4,logit.p=0), nll.M0, y=y, hessian=TRUE)
% fm.M0.est <- data.frame(Estimate=c(fm.M0$par[1], fm.M0$par[2]),
%                         SE=sqrt(diag(solve(fm.M0$hessian))))
% fm.M0.est
% @
% \pause
% \vfill
% Back-transform the estimates
% <<opt-nll-M0-back, size='scriptsize'>>=
% c(N.hat=exp(fm.M0$par[1]), p.hat=plogis(fm.M0$par[2]))
% @
% \pause
% \vfill
% Compare to data-generating values
% <<dg,size='scriptsize'>>=
% c(N=N, p=p)
% @ 
% \end{frame}





\section{Data augmentation}


%\section{Prediction}
%\subsection{Likelihood-based inference}


\begin{frame}
  \frametitle{Outline}
  \Large
  \tableofcontents[currentsection]
\end{frame}



\begin{frame}
  \frametitle{Data augmentation}
  Data augmentation is strange. \\
  \pause
  \vfill
  We add ``all zero'' capture histories to our data, then we try to
  estimate how many of them are real. \\ 
  \pause
  \vfill
  The total number of observed and agumented encounter histories is
  $M$. \\
  \pause
  \vfill
  We define the model in terms of a binary indicator variable $z_i$,
  such that $N=\sum_{i=1}^M z_i$. \\
  \pause
  \vfill
  We know $z_i=1$ for the $n$ captured individuals. \\
\end{frame}






\begin{frame}
  \frametitle{Data augmentation model}
  The model is:
  \begin{gather*}
    z_i \sim \mathrm{Bern}(\psi) \\
    y_{ij} \sim \mathrm{Bern}(z_i p_{ij}) \\
    N=\sum_{i=1}^M z_i
  \end{gather*}
  \pause \vfill
  % A uniform prior on $\psi$ results in a discrete uniform prior on
  % $N$. We can change the prior for $N$ by changing the prior on
  % $\psi$, recognizing that $E(N)=M\psi$.
  Note that this looks exactly like an occupancy model. \\
  \pause \vfill
  But why bother with augmentation?
  \begin{itemize}
    \item DA works for \alert{all} varieties of mark-recapture models
    \item Make it easy to incorporate
      individual-covariates\dots\pause including distance and
      location!   
  \end{itemize}
\end{frame}






\begin{frame}
  \frametitle{Bayesian data augmentation}
  The model is the same, but we need priors on $\psi$ and $p$. 
  \begin{gather*}
    z_i \sim \mathrm{Bern}(\psi) \\
    y_{ij} \sim \mathrm{Bern}(z_ip) \\
    N = \sum_{i=1}^M z_i
  \end{gather*}
  \vfill
  A uniform prior on $\psi$ results in a discrete uniform prior on
  $N$. We can change the prior for $N$ by changing the prior on  
  $\psi$, recognizing:
  \[
    E(N)=M\psi
  \]
\end{frame}



% \begin{frame}[fragile]
%   \frametitle{Model $M_0$ -- data augmentation}
% \vspace{-3pt}
% <<bugs-M0-aug,size='small'>>=
% writeLines(readLines("M0-aug.jag"))
% @
% \end{frame}



% \begin{frame}[fragile]
%   \frametitle{Model $M_0$ -- data augmentation}
%   Data
% <<jd-M0-aug,size='scriptsize'>>=
% y.aug <- matrix(0, M, J)
% y.aug[1:n,] <- y
% jags.data.M0 <- list(y=y.aug, M=M, J=J)
% @
% \pause
% \vfill
%   Inits and parameters
% <<ji-M0-aug,size='scriptsize'>>=
% ji.M0 <- function() list(z=rep(1,M), psi=runif(1), p=runif(1))
% jp.M0 <- c("p", "psi", "N")
% @
% \pause
% \vfill
% MCMC
% <<mcmc-M0-aug,size='scriptsize',results='hide'>>=
% library(jagsUI)
% jags.post.M0 <- jags.basic(data=jags.data.M0, inits=ji.M0,
%                            parameters.to.save=jp.M0,
%                            model.file="M0-aug.jag",
%                            n.chains=3, n.adapt=100, n.burnin=0,
%                            n.iter=2000, parallel=TRUE)
% @ 
% \end{frame}




% \begin{frame}[fragile]
%   \frametitle{Traceplots and density plots}
% <<plot-mcmc-M0,size='footnotesize',out.width="0.7\\textwidth",fig.align='center',cache=TRUE>>=
% plot(jags.post.M0[,jp.M0])
% @ 
% \end{frame}




% \begin{frame}[fragile]
%   \frametitle{Model $M_0$ -- without data augmentation}
%   Here's why practitioners like data augmentation 
% \vspace{-3pt}
% <<bugs-M0,size='footnotesize'>>=
% writeLines(readLines("M0.jag"))
% @
% \end{frame}





% \begin{frame}[fragile]
%   \frametitle{Model $M_0$ -- without data augmentation}
%   Data
% <<jd-M0-noaug,size='scriptsize'>>=
% n0max <- 1000  ## Upper limit of prior on n0
% jags.data.M0.noaug <- list(y=y.aug, n=n, J=J,
%                            ## Prior probs for n0
%                            n0probs=rep(1/n0max, n0max), zero=0)
% @
% \pause
% \vfill
%   Inits and parameters
% <<ji-M0-noaug,size='scriptsize'>>=
% ji.M0.noaug <- function() list(n0=rpois(1, 5), p=runif(1, 0, 0.1))
% jp.M0.noaug <- c("p", "N")
% @
% \pause
% \vfill
% MCMC
% <<mcmc-M0-noaug,size='scriptsize',results='hide'>>=
% jags.post.M0.noaug <- jags.basic(data=jags.data.M0.noaug,
%                                  inits=ji.M0.noaug,
%                                  parameters.to.save=jp.M0.noaug,
%                                  model.file="M0.jag",
%                                  n.chains=3, n.adapt=100, n.burnin=0,
%                                  n.iter=2000, parallel=TRUE)
% @ 
% \end{frame}




% \begin{frame}[fragile]
%   \frametitle{Traceplots and density plots}
% <<plot-mcmc-M0-noaug,size='footnotesize',out.width="0.7\\textwidth",fig.align='center',cache=TRUE>>=
% plot(jags.post.M0.noaug[,jp.M0.noaug])
% @ 
% \end{frame}








% \begin{frame}[fragile]
%   \frametitle{Model $M_t$ -- data augmentation}
% \vspace{-3pt}
% <<bugs-Mt-aug,size='small'>>=
% writeLines(readLines("Mt-aug.jag"))
% @
% \end{frame}






% \begin{frame}[fragile]
%   \frametitle{Model $M_t$ -- data augmentation}
%   Data, inits, parameters to monitor
% <<ji-Mt-aug,size='scriptsize'>>=
% jags.data.Mt <- jags.data.M0
% ji.Mt <- function() list(z=rep(1,M), psi=runif(1), p=runif(4))
% jp.Mt <- c("p", "psi", "N")
% @
% \pause
% \vfill
% MCMC
% <<mcmc-Mt-aug,size='scriptsize',results='hide'>>=
% jags.post.Mt <- jags.basic(data=jags.data.Mt, inits=ji.Mt,
%                            parameters.to.save=jp.Mt,
%                            model.file="Mt-aug.jag",
%                            n.chains=3, n.adapt=100, n.burnin=0,
%                            n.iter=2000, parallel=TRUE)
% @ 
% \end{frame}






% \begin{frame}[fragile]
%   \frametitle{Traceplots and density plots}
% <<plot-mcmc-Mt1,size='footnotesize',out.width="0.7\\textwidth",fig.align='center',cache=TRUE>>=
% plot(jags.post.Mt[,paste0("p[", 1:4, "]")])
% @ 
% \end{frame}









%\section{Summary}


\begin{frame}
  \frametitle{SCR summary}
  We assume that variation in $p$ arises from changes over time,
  behavioral effects, or random individual heterogeneity. \\
  \pause \vfill
  Individual heterogeneity models pose estimation problems. \\
  \pause \vfill
  A solution is to use individual covariates to explain the variation,
  rather than random effects. \pause But what covariates are
  important? \\
  \pause \vfill
  With spatial capture-recapture (SCR) models we will use
  \alert{distance between animals and traps} as a covariate, and we'll
  put use a spatial point process model for animal locations. 
\end{frame}




\section{Assignment}




\begin{frame}[fragile]
  \frametitle{Assignment}
  % \small
  % \footnotesize
  Create a self-contained R script or Rmarkdown file to do the
  following: 
  \vfill
  \begin{enumerate}
%    \small
%    \footnotesize
    \item Fit model $M_h$ in JAGS to the data simulated above
      \begin{itemize}
%        \footnotesize
        \item Use the flavor of $M_h$ that assumes $\mathrm{logit}(p_i)$ follows a
          normal distribution: $\mathrm{logit}(p_i) \sim
          \mathrm{Normal}(\bar{p}, \sigma^2_p)$.  
      \end{itemize}
    \item Use prior predictive checks to find reasonable priors for
      {\tt logit.p.mean} and {\tt logit.p.var}
    \item Present summary stats for prior and posterior distributions
      of {\tt logit.p.mean} and {\tt logit.p.var}, as well as for
      $N$. 
  \end{enumerate}
  \vfill
  Upload your {\tt .R} or {\tt .Rmd} file to ELC before Tuesday. 
\end{frame}





\end{document}

